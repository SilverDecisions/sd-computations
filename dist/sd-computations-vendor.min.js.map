{"version":3,"sources":["node_modules/browser-pack/_prelude.js","idb"],"names":["require","r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","idb","module","global","factory","this","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","apply","then","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","value","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","arr","Array","slice","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","openDb","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","define","amd","self"],"mappings":"AAAAA,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAR,SAAAA,QAAA,IAAAO,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAQ,QAAA,IAAAZ,EAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAQ,QAAA,IAAA,IAAAL,EAAA,mBAAAT,SAAAA,QAAAM,EAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAY,IAAA,CAAA,SAAAjB,EAAAkB,EAAAJ,GCAA,IAAAK,EAAAC,EAAAD,EAIAE,KAJAD,EAIA,SAAAN,GAAA,aAMA,SAAAQ,EAAAC,GACA,OAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAH,EAAAI,UAAA,WACAF,EAAAF,EAAAK,SAGAL,EAAAM,QAAA,WACAH,EAAAH,EAAAO,UAKA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAX,EACAV,EAAA,IAAAW,QAAA,SAAAC,EAAAC,GAEAJ,EADAC,EAAAS,EAAAC,GAAAE,MAAAH,EAAAE,IACAE,KAAAX,EAAAC,KAIA,OADAb,EAAAU,QAAAA,EACAV,EAWA,SAAAwB,EAAAC,EAAAC,EAAAC,GACAA,EAAAC,QAAA,SAAAC,GACAC,OAAAC,eAAAN,EAAAO,UAAAH,EAAA,CACAI,IAAA,WACA,OAAAzB,KAAAkB,GAAAG,IAEAK,IAAA,SAAAC,GACA3B,KAAAkB,GAAAG,GAAAM,OAMA,SAAAC,EAAAX,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAQ,EAAAL,YACAP,EAAAO,UAAAH,GAAA,WACA,OAAAX,EAAAV,KAAAkB,GAAAG,EAAAS,eAKA,SAAAC,EAAAd,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAQ,EAAAL,YACAP,EAAAO,UAAAH,GAAA,WACA,OAAArB,KAAAkB,GAAAG,GAAAP,MAAAd,KAAAkB,GAAAY,eAKA,SAAAE,EAAAf,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAQ,EAAAL,YACAP,EAAAO,UAAAH,GAAA,WACA,OA3CAV,EA2CAX,KAAAkB,IA1CA1B,EAAAkB,EAAAC,EA0CAU,EAAAS,YAzCAf,KAAA,SAAAkB,GACA,GAAAA,EACA,OAAA,IAAAC,EAAAD,EAAAzC,EAAAU,WAJA,IAAAS,EACAnB,MA+CA,SAAA2C,EAAAC,GACApC,KAAAqC,OAAAD,EAuBA,SAAAF,EAAAI,EAAApC,GACAF,KAAAuC,QAAAD,EACAtC,KAAAwC,SAAAtC,EA+BA,SAAAuC,EAAAC,GACA1C,KAAA2C,OAAAD,EAuCA,SAAAE,EAAAC,GACA7C,KAAA8C,IAAAD,EACA7C,KAAA+C,SAAA,IAAA5C,QAAA,SAAAC,EAAAC,GACAwC,EAAAG,WAAA,WACA5C,KAEAyC,EAAArC,QAAA,WACAH,EAAAwC,EAAApC,QAEAoC,EAAAI,QAAA,WACA5C,EAAAwC,EAAApC,UAkBA,SAAAyC,EAAAC,EAAAC,EAAAC,GACArD,KAAAsD,IAAAH,EACAnD,KAAAoD,WAAAA,EACApD,KAAAqD,YAAA,IAAAT,EAAAS,GAkBA,SAAAE,EAAAJ,GACAnD,KAAAsD,IAAAH,EA/IAnC,EAAAmB,EAAA,SAAA,CACA,OACA,UACA,aACA,WAGAP,EAAAO,EAAA,SAAAqB,SAAA,CACA,MACA,SACA,SACA,aACA,UAGAxB,EAAAG,EAAA,SAAAqB,SAAA,CACA,aACA,kBAQAxC,EAAAkB,EAAA,UAAA,CACA,YACA,MACA,aACA,UAGAN,EAAAM,EAAA,UAAAuB,UAAA,CACA,SACA,WAIA,CAAA,UAAA,WAAA,sBAAArC,QAAA,SAAAsC,GACAA,KAAAD,UAAAjC,YACAU,EAAAV,UAAAkC,GAAA,WACA,IAAApB,EAAAtC,KACAa,EAAAiB,UACA,OAAA3B,QAAAC,UAAAW,KAAA,WAEA,OADAuB,EAAAC,QAAAmB,GAAA5C,MAAAwB,EAAAC,QAAA1B,GACAZ,EAAAqC,EAAAE,UAAAzB,KAAA,SAAAkB,GACA,GAAAA,EACA,OAAA,IAAAC,EAAAD,EAAAK,EAAAE,kBAUAC,EAAAjB,UAAAmC,YAAA,WACA,OAAA,IAAAxB,EAAAnC,KAAA2C,OAAAgB,YAAA7C,MAAAd,KAAA2C,OAAAb,aAGAW,EAAAjB,UAAAY,MAAA,WACA,OAAA,IAAAD,EAAAnC,KAAA2C,OAAAP,MAAAtB,MAAAd,KAAA2C,OAAAb,aAGAd,EAAAyB,EAAA,SAAA,CACA,OACA,UACA,aACA,kBAGAb,EAAAa,EAAA,SAAAmB,eAAA,CACA,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGA5B,EAAAS,EAAA,SAAAmB,eAAA,CACA,aACA,kBAGA7B,EAAAU,EAAA,SAAAmB,eAAA,CACA,gBAkBAhB,EAAApB,UAAAqC,YAAA,WACA,OAAA,IAAApB,EAAAzC,KAAA8C,IAAAe,YAAA/C,MAAAd,KAAA8C,IAAAhB,aAGAd,EAAA4B,EAAA,MAAA,CACA,mBACA,SAGAb,EAAAa,EAAA,MAAAkB,eAAA,CACA,UASAZ,EAAA1B,UAAAuC,kBAAA,WACA,OAAA,IAAAtB,EAAAzC,KAAAsD,IAAAS,kBAAAjD,MAAAd,KAAAsD,IAAAxB,aAGAd,EAAAkC,EAAA,MAAA,CACA,OACA,UACA,qBAGAnB,EAAAmB,EAAA,MAAAc,YAAA,CACA,oBACA,UAOAT,EAAA/B,UAAA6B,YAAA,WACA,OAAA,IAAAT,EAAA5C,KAAAsD,IAAAD,YAAAvC,MAAAd,KAAAsD,IAAAxB,aAGAd,EAAAuC,EAAA,MAAA,CACA,OACA,UACA,qBAGAxB,EAAAwB,EAAA,MAAAS,YAAA,CACA,UAKA,CAAA,aAAA,iBAAA5C,QAAA,SAAA6C,GACA,CAAAxB,EAAAN,GAAAf,QAAA,SAAAS,GAEAoC,KAAApC,EAAAL,YAEAK,EAAAL,UAAAyC,EAAAC,QAAA,OAAA,YAAA,WACA,IAvPAC,EAuPAtD,GAvPAsD,EAuPArC,UAtPAsC,MAAA5C,UAAA6C,MAAA3E,KAAAyE,IAuPAG,EAAAzD,EAAAA,EAAAlB,OAAA,GACA4E,EAAAvE,KAAA2C,QAAA3C,KAAAqC,OACAnC,EAAAqE,EAAAN,GAAAnD,MAAAyD,EAAA1D,EAAAwD,MAAA,GAAA,IACAnE,EAAAI,UAAA,WACAgE,EAAApE,EAAAK,eAOA,CAAA4B,EAAAM,GAAArB,QAAA,SAAAS,GACAA,EAAAL,UAAAgD,SACA3C,EAAAL,UAAAgD,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA3E,KACA4E,EAAA,GAEA,OAAA,IAAAzE,QAAA,SAAAC,GACAuE,EAAAE,cAAAJ,EAAA,SAAAnC,GACAA,GAIAsC,EAAAE,KAAAxC,EAAAL,YAEA8C,IAAAL,GAAAE,EAAAjF,QAAA+E,EAIApC,EAAA0C,WAHA5E,EAAAwE,IANAxE,EAAAwE,WAoCAnF,EAAAwF,OArBA,SAAAC,EAAAC,EAAAC,GACA,IAAA5F,EAAAkB,EAAA2E,UAAA,OAAA,CAAAH,EAAAC,IACAjF,EAAAV,EAAAU,QAUA,OARAA,IACAA,EAAAoF,gBAAA,SAAAC,GACAH,GACAA,EAAA,IAAAlC,EAAAhD,EAAAK,OAAAgF,EAAAnC,WAAAlD,EAAAmD,gBAKA7D,EAAAuB,KAAA,SAAAoC,GACA,OAAA,IAAAI,EAAAJ,MASA1D,EAAA+F,SALA,SAAAN,GACA,OAAAxE,EAAA2E,UAAA,iBAAA,CAAAH,KAMA5D,OAAAC,eAAA9B,EAAA,aAAA,CAAAwC,OAAA,KAxTA,iBAAAxC,QAAA,IAAAI,EAAAE,EAAAN,GACA,mBAAAgG,QAAAA,OAAAC,IAAAD,OAAA,CAAA,WAAA1F,GACAA,GAAAD,EAAAA,GAAA6F,MAAA/F,IAAA","file":"sd-computations-vendor.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-max-rule.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/min-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/mcdm-weight-value-validator.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","_mcdmWeightValueValidator","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","mcdmWeightValueValidator","McdmWeightValueValidator","currentRule","reversePayoffs","tmp","weightLowerBound","flip","weightUpperBound","defaultCriterion1Weight","flipRule","checkValidityAndRecomputeObjective","Infinity","serialize","divide","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultCriterion1Weight","validationResults","evalExpressions","weightValid","validate","multiCriteria","getRoots","root","vr","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/mcdm-weight-value-validator","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","NUMBER_EXPRESSION","v","allVals","computeNumberExpression","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","defaultWeight","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","incratio","optimal","optimalForDefaultWeight","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","payoffCoeffs","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","bestCost","bestCostRow","cmp","prev2NotDominated","filter","computeICER","lastLELower","lastLELowerDef","exitStatus","JOB_STATUS","COMPLETED","Math","abs","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","jobExecutionContext","defaultValues","forOwn","k","defaultPayoff","itemIndex","extents","variableValue","_jobResult$data$rows","22","23","TornadoDiagramJobParameters","24","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","25","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","26","ExtendableError","27","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","28","_ExtendableError","29","JobDataInvalidException","30","JobExecutionAlreadyRunningException","31","JobInstanceAlreadyCompleteException","32","33","JobParametersInvalidException","34","JobRestartException","35","ExecutionContext","context","dirty","clone","prevValue","dto","36","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","37","JOB_EXECUTION_FLAG","STOP","38","JobExecutionListener","39","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","indexOf","40","JobInstance","41","JobKeyGenerator","identifying","42","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","43","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isBoolean","isObject","nestedDef","_value","parsed","parseFloat","44","initDefinitions","initDefaultValues","def","defs","split","find","getDefinition","45","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","46","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","47","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","ex","48","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","49","50","STARTED","STOPPED","FAILED","EXECUTING","51","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","52","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","53","StepExecutionListener","54","55","beforeStep","determineJobStatus","afterStep","close","56","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","57","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","58","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","59","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","60","_rules","model","_minMaxRule","_maxMinRule","_minMinRule","_maxMaxRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","minMin","MinMinRule","maxMax","MaxMaxRule","flipped","setDefaultCriterion1Weight","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-max-rule","./rules/max-min-rule","./rules/min-max-rule","./rules/min-min-rule","61","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","62","63","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","64","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","./multi-criteria-rule","65","66","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","67","minBy","68","69","70","71","72","criterion1Weight","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","computeCombinedPayoff","combinedPayoff","../../policies/policy","73","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","74","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","75","76","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","77","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","78","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","79","ignoreId","prependId","80","additionalValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","81","PayoffValueValidator","82","ProbabilityValueValidator","83","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nvar _mcdmWeightValueValidator = require(\"./validation/mcdm-weight-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new _mcdmWeightValueValidator.McdmWeightValueValidator();\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            var tmp = data.weightLowerBound;\n            data.weightLowerBound = this.flip(data.weightUpperBound);\n            data.weightUpperBound = this.flip(tmp);\n            data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"flip\",\n        value: function flip(a) {\n            if (a == Infinity) {\n                return 0;\n            }\n\n            if (a == 0) {\n                return Infinity;\n            }\n\n            return this.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(1, a));\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n            var multiCriteria = this.getCurrentRule().multiCriteria;\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid() && (!multiCriteria || weightValid)) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":57,\"./jobs/jobs-manager\":59,\"./objective/objective-rules-manager\":60,\"./operations/operations-manager\":76,\"./policies/policy\":79,\"./validation/mcdm-weight-value-validator\":80,\"./validation/tree-validator\":83,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":56}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightLowerBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v <= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound']);\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"defaultWeight\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v >= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']) && v <= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound']);\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightUpperBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v >= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']);\n            }));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                weightLowerBound: 0,\n                defaultWeight: 0,\n                weightUpperBound: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":43,\"../../engine/job-parameters\":44,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio', 'optimal', 'optimal_for_default_weight'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.incratio, row.optimal, row.optimalForDefaultWeight];\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":79,\"../../engine/simple-job\":52,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return -payoffCoeffs[0] * (b.payoffs[0] - a.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    incratio: null,\n                    optimal: false,\n                    optimalForDefaultWeight: false\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            // rows.sort(compare);\n            rows.sort(function (a, b) {\n                return -payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n\n            var bestCost = -payoffCoeffs[1] * Infinity,\n                bestCostRow = null;\n\n            var cmp = function cmp(a, b) {\n                return a > b;\n            };\n            if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            }\n\n            rows.forEach(function (r, i) {\n                if (cmp(r.payoffs[1], bestCost)) {\n                    bestCost = r.payoffs[1];\n                    bestCostRow = r;\n                } else if (bestCostRow) {\n                    r.dominatedBy = bestCostRow.id;\n                }\n            });\n\n            cmp = function cmp(a, b) {\n                return a < b;\n            };\n            if (payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a > b;\n                };\n            }\n\n            var prev2NotDominated = null;\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]);\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.incratio = 0;\n                    return;\n                }\n\n                var prev = arr[i - 1];\n\n                r.incratio = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                if (!prev2NotDominated) {\n                    prev2NotDominated = arr[i - 2];\n                }\n\n                if (cmp(r.incratio, prev.incratio)) {\n                    prev.incratio = null;\n                    prev.extendedDominatedBy = [prev2NotDominated.id, r.id];\n                    r.incratio = _this2.computeICER(r, prev2NotDominated);\n                } else {\n                    prev2NotDominated = prev;\n                }\n            });\n\n            var weightLowerBound = params.value(\"weightLowerBound\");\n            var defaultWeight = params.value(\"defaultWeight\");\n            var weightUpperBound = params.value(\"weightUpperBound\");\n\n            //mark optimal for weight in [weightLowerBound, weightUpperBound] and optimal for default Weight\n            var lastLELower = null;\n            var lastLELowerDef = null;\n            rows.slice().filter(function (r) {\n                return !r.dominatedBy && !r.extendedDominatedBy;\n            }).sort(function (a, b) {\n                return a.incratio - b.incratio;\n            }).forEach(function (row, i, arr) {\n\n                if (row.incratio < weightLowerBound) {\n                    lastLELower = row;\n                }\n                if (row.incratio < defaultWeight) {\n                    lastLELowerDef = row;\n                }\n\n                row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n                row.optimalForDefaultWeight = row.incratio == defaultWeight;\n            });\n            if (lastLELower) {\n                lastLELower.optimal = true;\n            }\n\n            if (lastLELowerDef) {\n                lastLELowerDef.optimalForDefaultWeight = true;\n            }\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.incratio = row.incratio === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.incratio);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                payoffCoeffs: payoffCoeffs,\n                rows: rows.sort(function (a, b) {\n                    return a.id - b.id;\n                }),\n                weightLowerBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightLowerBound),\n                defaultWeight: _sdExpressionEngine.ExpressionEngine.toFloat(defaultWeight),\n                weightUpperBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightUpperBound)\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return Math.abs(_sdExpressionEngine.ExpressionEngine.divide(n, d));\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":78,\"../../../../policies/policy\":79,\"../../../../validation/tree-validator\":83,\"../../../engine/job-status\":50,\"../../../engine/step\":55,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":43,\"../../engine/job-parameters\":44,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":83,\"../../engine/batch/batch-step\":25,\"../../engine/job\":51,\"../../engine/job-status\":50,\"../../engine/simple-job\":52,\"../../engine/step\":55,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":43,\"../../../engine/job-parameters\":44,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":79,\"../../../engine/simple-job\":52,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":79,\"../../../../../validation/tree-validator\":83,\"../../../../engine/batch/batch-step\":25,\"../../../../engine/exceptions/job-computation-exception\":28,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":78,\"../../../../engine/job-status\":50,\"../../../../engine/step\":55}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":50,\"../../../../engine/step\":55,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":43,\"../../../engine/job-parameters\":44,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":50,\"../../../../engine/step\":55,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":28,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n\n            var treeRoot = data.getRoots()[0];\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalExpressions(data);\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                jobResult.data = {\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    defaultPayoff: this.toFloat(payoff)[0],\n                    policies: policiesCollector.policies,\n                    rows: []\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var extents = jobResult.data.policies.map(function (policy) {\n                return {\n                    min: Infinity,\n                    max: -Infinity\n                };\n            });\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            item.forEach(function (variableValue) {\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                jobResult.data.policies.forEach(function (policy, policyIndex) {\n                    _this3.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    var payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n\n                    if (payoff < extents[policyIndex].min) {\n                        extents[policyIndex].min = payoff;\n                    }\n\n                    if (payoff > extents[policyIndex].max) {\n                        extents[policyIndex].max = payoff;\n                    }\n                });\n            });\n\n            return {\n                variableName: variableName,\n                variableIndex: itemIndex,\n                extents: extents.map(function (e) {\n                    return [_this3.toFloat(e.min), _this3.toFloat(e.max)];\n                })\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _jobResult$data$rows;\n\n            (_jobResult$data$rows = jobResult.data.rows).push.apply(_jobResult$data$rows, _toConsumableArray(items));\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            jobResult.data.rows.sort(function (a, b) {\n                return b.extents[0][1] - b.extents[0][0] - (a.extents[0][1] - a.extents[0][0]);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":78,\"../../../../../policies/policy\":79,\"../../../../../validation/tree-validator\":83,\"../../../../engine/batch/batch-step\":25,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":50,\"../../../../engine/step\":55,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":43,\"../../../engine/job-parameters\":44,\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                result.push(['variable_name', 'default', \"min\", \"max\", \"policy_no\"]);\n            }\n\n            jobResult.rows.forEach(function (row) {\n\n                result.push.apply(result, _toConsumableArray(row.extents.map(function (extent, policyIndex) {\n                    return [row.variableName, jobResult.defaultPayoff, extent[0], extent[1], policyIndex + 1];\n                })));\n            });\n\n            return result;\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":52,\"./steps/calculate-step\":21,\"./steps/prepare-variables-step\":22,\"./tornado-diagram-job-parameters\":23}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":32,\"../job-status\":50,\"../step\":55,\"sd-utils\":\"sd-utils\"}],26:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":26,\"./job-data-invalid-exception\":29,\"./job-execution-already-running-exception\":30,\"./job-instance-already-complete-exception\":31,\"./job-interrupted-exception\":32,\"./job-parameters-invalid-exception\":33,\"./job-restart-exception\":34}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":26}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":27,\"./execution-context\":35,\"./job\":51,\"./job-execution\":39,\"./job-execution-flag\":37,\"./job-execution-listener\":38,\"./job-instance\":40,\"./job-key-generator\":41,\"./job-launcher\":42,\"./job-parameter-definition\":43,\"./job-parameters\":44,\"./job-status\":50,\"./simple-job\":52,\"./step\":55,\"./step-execution\":54,\"./step-execution-listener\":53}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":35,\"./job-status\":50,\"./step-execution\":54,\"sd-utils\":\"sd-utils\"}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":29,\"./exceptions/job-parameters-invalid-exception\":33,\"./exceptions/job-restart-exception\":34,\"./job-status\":50,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: \"set\",\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"validateSingleValue\",\n\n        // allValues - all values on the same level\n        value: function validateSingleValue(value, allValues) {\n\n            if (!value && value !== 0 && value !== false && this.minOccurs > 0) {\n                return !this.required;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.BOOLEAN === this.type && !_sdUtils.Utils.isBoolean(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                value = JobParameterDefinition.computeNumberExpression(value);\n                if (value === null) {\n                    return false;\n                }\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"value\",\n        value: function value(_value) {\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                return JobParameterDefinition.computeNumberExpression(_value);\n            }\n\n            return _value;\n        }\n    }], [{\n        key: \"computeNumberExpression\",\n        value: function computeNumberExpression(val) {\n            var parsed = parseFloat(val);\n            if (parsed === Infinity || parsed === -Infinity) {\n                return parsed;\n            }\n\n            if (!_sdExpressionEngine.ExpressionEngine.validate(val, {}, false)) {\n                return null;\n            }\n\n            return _sdExpressionEngine.ExpressionEngine.eval(val, true);\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\nexports.JobParameterDefinition = JobParameterDefinition;\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n    }, {\n        key: \"getDefinition\",\n        value: function getDefinition(path) {\n            var defs = this.definitions;\n            var def = null;\n            if (!path.split().every(function (name) {\n                def = _sdUtils.Utils.find(defs, function (d) {\n                    return d.name == name;\n                });\n                if (!def) {\n                    return false;\n                }\n                defs = def.nestedParameters;\n                return true;\n            })) {\n                return null;\n            }\n            return def;\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                var def = this.getDefinition(path);\n                var val = _sdUtils.Utils.get(this.values, path, null);\n                if (def) {\n                    return def.value(val);\n                }\n                return val;\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":43,\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":35,\"../job-execution\":39,\"../job-instance\":40,\"../step-execution\":54,\"./job-repository\":46,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":30,\"../exceptions/job-instance-already-complete-exception\":31,\"../execution-context\":35,\"../job-execution\":39,\"../job-instance\":40,\"../job-key-generator\":41,\"../job-result\":49,\"../job-status\":50,\"../step-execution\":54,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":46,\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":46,\"./simple-job-repository\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":35,\"./job-status\":50,\"./step-execution\":54,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],51:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":29,\"./exceptions/job-interrupted-exception\":32,\"./exceptions/job-parameters-invalid-exception\":33,\"./job-execution-flag\":37,\"./job-result\":49,\"./job-status\":50,\"sd-utils\":\"sd-utils\"}],52:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":32,\"./exceptions/job-restart-exception\":34,\"./execution-context\":35,\"./job\":51,\"./job-execution-flag\":37,\"./job-status\":50,\"./step\":55,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":35,\"./job-execution\":39,\"./job-status\":50,\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":32,\"./job-status\":50,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":36,\"./job-worker\":58,\"./jobs-manager\":59}],57:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                return false;\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":38,\"./engine/job-instance\":40,\"./engine/job-status\":50,\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],59:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":24,\"./engine/job-execution-flag\":37,\"./engine/job-execution-listener\":38,\"./engine/job-launcher\":42,\"./engine/job-parameters\":44,\"./engine/job-repository/idb-job-repository\":45,\"./engine/job-repository/simple-job-repository\":47,\"./engine/job-repository/timeout-job-repository\":48,\"./engine/job-status\":50,\"./job-worker\":58,\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nvar _minMinRule = require(\"./rules/min-min-rule\");\n\nvar _maxMaxRule = require(\"./rules/max-max-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        var minMin = new _minMinRule.MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        var maxMax = new _maxMaxRule.MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex || 0;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultCriterion1Weight\",\n        value: function updateDefaultCriterion1Weight(defaultCriterion1Weight) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultCriterion1Weight(defaultCriterion1Weight);\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":63,\"./rules/max-max-rule\":64,\"./rules/max-min-rule\":65,\"./rules/min-max-rule\":68,\"./rules/min-min-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":61,\"./expected-value-minimization-rule\":62,\"./maxi-max-rule\":66,\"./maxi-min-rule\":67,\"./mini-max-rule\":70,\"./mini-min-rule\":71,\"./objective-rule\":73}],64:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMaxRule = exports.MaxMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMaxRule, _MultiCriteriaRule);\n\n    function MaxMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxMaxRule.__proto__ || Object.getPrototypeOf(MaxMaxRule)).call(this, MaxMaxRule.NAME, [1, 1], expressionEngine));\n    }\n\n    return MaxMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMaxRule.NAME = 'max-max';\n\n},{\"./multi-criteria-rule\":72}],65:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, [1, -1], expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"./multi-criteria-rule\":72}],66:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, [-1, 1], expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"./multi-criteria-rule\":72}],69:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMinRule = exports.MinMinRule = function (_MultiCriteriaRule) {\n    _inherits(MinMinRule, _MultiCriteriaRule);\n\n    function MinMinRule(expressionEngine) {\n        _classCallCheck(this, MinMinRule);\n\n        return _possibleConstructorReturn(this, (MinMinRule.__proto__ || Object.getPrototypeOf(MinMinRule)).call(this, MinMinRule.NAME, [-1, -1], expressionEngine));\n    }\n\n    return MinMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMinRule.NAME = 'min-min';\n\n},{\"./multi-criteria-rule\":72}],70:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":73,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],72:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, payoffCoeffs, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.criterion1Weight = 1;\n        _this.payoffCoeffs = [1, -1];\n\n        _this.payoffCoeffs = payoffCoeffs;\n\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultCriterion1Weight\",\n        value: function setDefaultCriterion1Weight(criterion1Weight) {\n            this.criterion1Weight = criterion1Weight;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n    }, {\n        key: \"computeCombinedPayoff\",\n        value: function computeCombinedPayoff(payoff) {\n            // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n            if (this.criterion1Weight === Infinity) {\n                return this.multiply(this.payoffCoeffs[0], payoff[0]);\n            }\n            return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.computeCombinedPayoff([_this3.basePayoff(e, 0), _this3.basePayoff(e, 1)]), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":79,\"./objective-rule\":73,\"sd-model\":\"sd-model\"}],73:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":79,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],74:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = [_sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)), _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1))];\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":83,\"./operation\":75,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],75:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],76:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":74}],77:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],78:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":77,\"./policy\":79,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],79:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":77}],80:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.McdmWeightValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar McdmWeightValueValidator = exports.McdmWeightValueValidator = function () {\n    function McdmWeightValueValidator(additionalValidator) {\n        _classCallCheck(this, McdmWeightValueValidator);\n\n        this.additionalValidator = null;\n\n        this.additionalValidator = additionalValidator;\n    }\n\n    _createClass(McdmWeightValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var parsed = parseFloat(value);\n            if (parsed !== Infinity && !_sdExpressionEngine.ExpressionEngine.validate(value, {}, false)) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n            if (_sdExpressionEngine.ExpressionEngine.compare(value, 0) < 0 || value !== Infinity && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) > 0) {\n                return false;\n            }\n\n            if (this.additionalValidator) {\n                return this.additionalValidator(_sdExpressionEngine.ExpressionEngine.toNumber(value));\n            }\n\n            return true;\n        }\n    }]);\n\n    return McdmWeightValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],82:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],83:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":81,\"./probability-value-validator\":82,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\nimport {McdmWeightValueValidator} from \"./validation/mcdm-weight-value-validator\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new McdmWeightValueValidator();\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        let tmp = data.weightLowerBound;\n        data.weightLowerBound = this.flip(data.weightUpperBound);\n        data.weightUpperBound = this.flip(tmp);\n        data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    flip(a){\n        if(a == Infinity){\n            return 0;\n        }\n\n        if(a == 0){\n            return Infinity;\n        }\n\n        return this.expressionEngine.serialize(ExpressionEngine.divide(1, a))\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n\n        this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n        var multiCriteria = this.getCurrentRule().multiCriteria;\n\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid() && (!multiCriteria || weightValid)) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"weightLowerBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v <= JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound'])\n        }));\n        this.definitions.push(new JobParameterDefinition(\"defaultWeight\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v >= JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']) && v <= JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound'])\n        }));\n        this.definitions.push(new JobParameterDefinition(\"weightUpperBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v >= JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound'])\n        }));\n\n    }\n\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            weightLowerBound: 0,\n            defaultWeight: 0,\n            weightUpperBound: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio', 'optimal', 'optimal_for_default_weight'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.incratio,\n                    row.optimal,\n                    row.optimalForDefaultWeight\n                ];\n                result.push(rowCells);\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(-payoffCoeffs[0] *  (b.payoffs[0] - a.payoffs[0])) || (-payoffCoeffs[1] *  (a.payoffs[1] - b.payoffs[1]));\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                incratio: null,\n                optimal: false,\n                optimalForDefaultWeight: false\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        // rows.sort(compare);\n        rows.sort((a, b)=>(-payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n\n        let bestCost = -payoffCoeffs[1] * Infinity,\n            bestCostRow = null;\n\n        let cmp= (a, b) => a > b;\n        if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a < b;\n        }\n\n        rows.forEach((r, i)=> {\n            if (cmp(r.payoffs[1], bestCost)) {\n                bestCost = r.payoffs[1];\n                bestCostRow = r;\n            } else if(bestCostRow) {\n                r.dominatedBy = bestCostRow.id;\n            }\n        });\n\n        cmp= (a, b) => a < b;\n        if(payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a > b;\n        }\n\n        let prev2NotDominated = null;\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(  payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]))).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.incratio = 0;\n                return;\n            }\n\n            let prev = arr[i - 1];\n\n            r.incratio = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            if(!prev2NotDominated){\n                prev2NotDominated = arr[i - 2];\n            }\n\n            if(cmp(r.incratio,prev.incratio)){\n                prev.incratio = null;\n                prev.extendedDominatedBy = [prev2NotDominated.id, r.id] ;\n                r.incratio = this.computeICER(r, prev2NotDominated);\n            }else{\n                prev2NotDominated = prev;\n            }\n        });\n\n        let weightLowerBound = params.value(\"weightLowerBound\");\n        let defaultWeight = params.value(\"defaultWeight\");\n        let weightUpperBound = params.value(\"weightUpperBound\");\n\n        //mark optimal for weight in [weightLowerBound, weightUpperBound] and optimal for default Weight\n        let lastLELower = null;\n        let lastLELowerDef = null;\n        rows.slice().filter(r=>!r.dominatedBy && !r.extendedDominatedBy).sort((a, b) => a.incratio - b.incratio).forEach((row, i, arr)=>{\n\n            if(row.incratio < weightLowerBound){\n                lastLELower  = row;\n            }\n            if(row.incratio < defaultWeight){\n                lastLELowerDef  = row;\n            }\n\n            row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n            row.optimalForDefaultWeight = row.incratio == defaultWeight;\n\n        });\n        if(lastLELower){\n            lastLELower.optimal = true;\n        }\n\n        if(lastLELowerDef){\n            lastLELowerDef.optimalForDefaultWeight = true;\n        }\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.incratio = row.incratio === null ? null : ExpressionEngine.toFloat(row.incratio);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            payoffCoeffs : payoffCoeffs,\n            rows: rows.sort((a, b)=>(a.id - b.id)),\n            weightLowerBound: ExpressionEngine.toFloat(weightLowerBound),\n            defaultWeight: ExpressionEngine.toFloat(defaultWeight),\n            weightUpperBound: ExpressionEngine.toFloat(weightUpperBound)\n        };\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n        let n = ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return Math.abs(ExpressionEngine.divide(n, d));\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        let jobExecutionContext = stepExecution.getJobExecutionContext();\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let variableValues = jobExecutionContext.get(\"variableValues\");\n        let variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        let data = stepExecution.getData();\n\n        let treeRoot = data.getRoots()[0];\n        let payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalExpressions(data);\n\n        this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n\n\n        let policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n\n        let defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            jobResult.data = {\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                defaultPayoff: this.toFloat(payoff)[0],\n                policies: policiesCollector.policies,\n                rows: []\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        let variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex, jobResult) {\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n        let data = stepExecution.getData();\n        let treeRoot = data.getRoots()[0];\n        let variableNames = stepExecution.executionContext.get(\"variableNames\");\n        let variableName = variableNames[itemIndex];\n\n        let extents = jobResult.data.policies.map(policy=>{\n            return {\n                min: Infinity,\n                max: -Infinity\n            }\n        });\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n\n        item.forEach(variableValue=>{\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            let vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            let valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            jobResult.data.policies.forEach((policy, policyIndex)=>{\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                let payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n\n                if(payoff < extents[policyIndex].min){\n                    extents[policyIndex].min = payoff\n                }\n\n                if(payoff > extents[policyIndex].max){\n                    extents[policyIndex].max = payoff\n                }\n            });\n\n        });\n\n        return {\n            variableName: variableName,\n            variableIndex: itemIndex,\n            extents: extents.map(e=>[this.toFloat(e.min), this.toFloat(e.max)])\n        };\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        jobResult.data.rows.push(...items);\n    }\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.rows.sort((a, b)=>(b.extents[0][1]-b.extents[0][0])-(a.extents[0][1]-a.extents[0][0]))\n\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        let result = [];\n        if(withHeaders){\n            result.push(['variable_name', 'default', \"min\", \"max\", \"policy_no\"]);\n        }\n\n\n        jobResult.rows.forEach(row => {\n\n            result.push(...row.extents.map((extent, policyIndex)=>[\n                row.variableName,\n                jobResult.defaultPayoff,\n                extent[0],\n                extent[1],\n                policyIndex+1\n            ]));\n\n        });\n\n\n        return result;\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n\n    static computeNumberExpression(val){\n        let parsed = parseFloat(val);\n        if(parsed === Infinity || parsed === -Infinity) {\n            return parsed;\n        }\n\n        if(!ExpressionEngine.validate(val, {}, false)){\n            return null\n        }\n\n        return ExpressionEngine.eval(val, true)\n    }\n\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n\n        if ((!value && value !== 0 && value !== false) && this.minOccurs > 0) {\n            return !this.required\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.BOOLEAN === this.type && !Utils.isBoolean(value)) {\n            return false;\n        }\n\n\n        if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            value = JobParameterDefinition.computeNumberExpression(value);\n            if(value === null){\n                return false\n            }\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n\n    value(value){\n        if(PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            return JobParameterDefinition.computeNumberExpression(value);\n        }\n\n        return value;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    getDefinition(path){\n        var defs =this.definitions;\n        let def = null;\n        if(!path.split().every(name=>{\n                def = Utils.find(defs, d=>d.name == name);\n                if(!def){\n                    return false\n                }\n                defs = def.nestedParameters;\n                return true;\n        })){\n            return null;\n        }\n        return def;\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            let def = this.getDefinition(path);\n            let val = Utils.get(this.values, path, null);\n            if(def){\n                return def.value(val);\n            }\n            return  val;\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n            return false;\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\nimport {MinMinRule} from \"./rules/min-min-rule\";\nimport {MaxMaxRule} from \"./rules/max-max-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        let minMin = new MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        let maxMax = new MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex || 0;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultCriterion1Weight(defaultCriterion1Weight){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultCriterion1Weight(defaultCriterion1Weight));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'max-max';\n\n    constructor(expressionEngine){\n        super(MaxMaxRule.NAME, [1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, [1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, [-1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMinRule extends MultiCriteriaRule{\n\n    static NAME = 'min-min';\n\n    constructor(expressionEngine){\n        super(MinMinRule.NAME, [-1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    criterion1Weight = 1;\n    payoffCoeffs = [1, -1];\n\n    constructor(name, payoffCoeffs, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.payoffCoeffs = payoffCoeffs;\n\n    }\n\n    setDefaultCriterion1Weight(criterion1Weight) {\n        this.criterion1Weight = criterion1Weight;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    computeCombinedPayoff(payoff){\n        // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n        if (this.criterion1Weight === Infinity) {\n            return this.multiply(this.payoffCoeffs[0], payoff[0]);\n        }\n        return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.computeCombinedPayoff([this.basePayoff(e, 0), this.basePayoff(e, 1)]), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = [\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)),\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1)),\n                ];\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n\nexport class McdmWeightValueValidator{\n\n    additionalValidator = null;\n\n    constructor(additionalValidator){\n        this.additionalValidator = additionalValidator;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        let parsed = parseFloat(value);\n        if(parsed !== Infinity && !ExpressionEngine.validate(value, {}, false)){\n            return false\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n        if(ExpressionEngine.compare(value, 0) < 0 || (value !== Infinity && ExpressionEngine.compare(value, maxSafeInteger)> 0)){\n            return false;\n        }\n\n        if(this.additionalValidator) {\n            return this.additionalValidator(ExpressionEngine.toNumber(value))\n        }\n\n        return true;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
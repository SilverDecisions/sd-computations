{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","reversePayoffs","flipRule","checkValidityAndRecomputeObjective","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultWTP","defaultWTP","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","minimumWTP","maximumWTP","Infinity","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","maximizedPayoffIndex","minimizedPayoffIndex","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","ICER","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","minimizedIndex","maximizedIndex","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","minCost","minCostRow","filter","computeICER","prev2","exitStatus","JOB_STATUS","COMPLETED","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","v","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","NUMBER_EXPRESSION","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","22","getObjectByIdMap","23","24","TornadoDiagramJobParameters","25","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","26","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","27","ExtendableError","28","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","29","_ExtendableError","30","JobDataInvalidException","31","JobExecutionAlreadyRunningException","32","JobInstanceAlreadyCompleteException","33","34","JobParametersInvalidException","35","JobRestartException","36","ExecutionContext","context","dirty","clone","prevValue","dto","37","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","38","JOB_EXECUTION_FLAG","STOP","39","JobExecutionListener","40","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","41","JobInstance","42","JobKeyGenerator","identifying","43","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","44","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","45","initDefinitions","initDefaultValues","def","_value","46","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","47","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","48","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","find","ex","49","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","50","51","STARTED","STOPPED","FAILED","EXECUTING","52","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","53","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","54","StepExecutionListener","55","56","beforeStep","determineJobStatus","afterStep","close","57","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","58","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","59","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","60","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","61","_rules","model","_minMaxRule","_maxMinRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","flipped","multiCriteria","setDefaultWTP","parseFloat","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-min-rule","./rules/min-max-rule","62","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","63","64","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","65","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","../../policies/policies-collector","../../policies/policy","./multi-criteria-rule","66","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","67","minBy","68","69","70","71","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","computeCombinedPayoff","combinedPayoff","72","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","73","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","74","75","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","76","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","77","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","78","ignoreId","prependId","79","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","80","ProbabilityValueValidator","81","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":58,\"./jobs/jobs-manager\":60,\"./objective/objective-rules-manager\":61,\"./operations/operations-manager\":75,\"./policies/policy\":78,\"./validation/tree-validator\":81,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":57}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            // this.definitions.push(new JobParameterDefinition(\"minimumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['maximumWTP']));\n            // this.definitions.push(new JobParameterDefinition(\"maximumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['minimumWTP']));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                minimumWTP: 0,\n                maximumWTP: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[jobResult.maximizedPayoffIndex], jobResult.payoffNames[jobResult.minimizedPayoffIndex], 'dominated_by', 'extended-dominated_by', 'ICER'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.ICER];\n\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":78,\"../../engine/simple-job\":53,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var minimizedIndex = this.minimizedIndex = rule.minimizedPayoffIndex;\n            var maximizedIndex = this.maximizedIndex = rule.maximizedPayoffIndex;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return b.payoffs[maximizedIndex] - a.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    ICER: null\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            rows.sort(compare);\n\n            var minCost = Infinity,\n                minCostRow = null;\n\n            rows.forEach(function (r, i) {\n                if (r.payoffs[minimizedIndex] < minCost) {\n                    minCost = r.payoffs[minimizedIndex];\n                    minCostRow = r;\n                } else if (minCostRow) {\n                    r.dominatedBy = minCostRow.id;\n                }\n            });\n\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex];\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.ICER = 0;\n                    return;\n                }\n                var prev = arr[i - 1];\n\n                r.ICER = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                var prev2 = arr[i - 2];\n                if (prev2.extendedDominatedBy !== null) {\n                    return;\n                }\n\n                if (r.ICER < prev.ICER) {\n                    prev.ICER = null;\n                    prev.extendedDominatedBy = [prev2.id, r.id];\n\n                    r.ICER = _this2.computeICER(r, prev2);\n                }\n            });\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.ICER = row.ICER === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.ICER);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                maximizedPayoffIndex: maximizedIndex,\n                minimizedPayoffIndex: minimizedIndex,\n                rows: rows.sort(function (a, b) {\n                    return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n                })\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[this.maximizedIndex], prev.payoffs[this.maximizedIndex]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[this.minimizedIndex], prev.payoffs[this.minimizedIndex]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return _sdExpressionEngine.ExpressionEngine.divide(n, d);\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":77,\"../../../../policies/policy\":78,\"../../../../validation/tree-validator\":81,\"../../../engine/job-status\":51,\"../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":81,\"../../engine/batch/batch-step\":26,\"../../engine/job\":52,\"../../engine/job-status\":51,\"../../engine/simple-job\":53,\"../../engine/step\":56,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":78,\"../../../engine/simple-job\":53,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":78,\"../../../../../validation/tree-validator\":81,\"../../../../engine/batch/batch-step\":26,\"../../../../engine/exceptions/job-computation-exception\":29,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":29,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../../policies/policy\":78,\"../../../../../validation/tree-validator\":81,\"../../../../engine/batch/batch-step\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":53,\"./steps/calculate-step\":21,\"./steps/init-policies-step\":22,\"./steps/prepare-variables-step\":23,\"./tornado-diagram-job-parameters\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":33,\"../job-status\":51,\"../step\":56,\"sd-utils\":\"sd-utils\"}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":27,\"./job-data-invalid-exception\":30,\"./job-execution-already-running-exception\":31,\"./job-instance-already-complete-exception\":32,\"./job-interrupted-exception\":33,\"./job-parameters-invalid-exception\":34,\"./job-restart-exception\":35}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],35:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":28,\"./execution-context\":36,\"./job\":52,\"./job-execution\":40,\"./job-execution-flag\":38,\"./job-execution-listener\":39,\"./job-instance\":41,\"./job-key-generator\":42,\"./job-launcher\":43,\"./job-parameter-definition\":44,\"./job-parameters\":45,\"./job-status\":51,\"./simple-job\":53,\"./step\":56,\"./step-execution\":55,\"./step-execution-listener\":54}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-parameters-invalid-exception\":34,\"./exceptions/job-restart-exception\":35,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n        // allValues - all values on the same level\n\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value, allValues) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../step-execution\":55,\"./job-repository\":47,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":31,\"../exceptions/job-instance-already-complete-exception\":32,\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../job-key-generator\":42,\"../job-result\":50,\"../job-status\":51,\"../step-execution\":55,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":47,\"./simple-job-repository\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-parameters-invalid-exception\":34,\"./job-execution-flag\":38,\"./job-result\":50,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-restart-exception\":35,\"./execution-context\":36,\"./job\":52,\"./job-execution-flag\":38,\"./job-status\":51,\"./step\":56,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-execution\":40,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":37,\"./job-worker\":59,\"./jobs-manager\":60}],58:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":39,\"./engine/job-instance\":41,\"./engine/job-status\":51,\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],60:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":25,\"./engine/job-execution-flag\":38,\"./engine/job-execution-listener\":39,\"./engine/job-launcher\":43,\"./engine/job-parameters\":45,\"./engine/job-repository/idb-job-repository\":46,\"./engine/job-repository/simple-job-repository\":48,\"./engine/job-repository/timeout-job-repository\":49,\"./engine/job-status\":51,\"./job-worker\":59,\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex || 0;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultWTP\",\n        value: function updateDefaultWTP(defaultWTP) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultWTP(parseFloat(defaultWTP));\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":64,\"./rules/max-min-rule\":65,\"./rules/min-max-rule\":68,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./maxi-max-rule\":66,\"./maxi-min-rule\":67,\"./mini-max-rule\":69,\"./mini-min-rule\":70,\"./objective-rule\":72}],65:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, 1, 0, expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"../../policies/policies-collector\":77,\"../../policies/policy\":78,\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./multi-criteria-rule\":71,\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, 0, 1, expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"../../policies/policies-collector\":77,\"../../policies/policy\":78,\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./multi-criteria-rule\":71,\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],69:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],70:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.defaultWTP = 1;\n        _this.minimizedPayoffIndex = 0;\n        _this.maximizedPayoffIndex = 1;\n\n        _this.minimizedPayoffIndex = minimizedPayoffIndex;\n        _this.maximizedPayoffIndex = maximizedPayoffIndex;\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultWTP\",\n        value: function setDefaultWTP(defaultWTP) {\n            this.defaultWTP = defaultWTP;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', [0, 0]); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n    }, {\n        key: \"computeCombinedPayoff\",\n        value: function computeCombinedPayoff(payoff) {\n            if (this.defaultWTP === Infinity) {\n                return payoff[this.maximizedPayoffIndex];\n            }\n            return this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]);\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.computeCombinedPayoff([_this3.basePayoff(e, 0), _this3.basePayoff(e, 1)]), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":78,\"./objective-rule\":72,\"sd-model\":\"sd-model\"}],72:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":78,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],73:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":81,\"./operation\":74,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],74:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],75:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":73}],76:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],77:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":76,\"./policy\":78,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],78:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":76}],79:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],80:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":79,\"./probability-value-validator\":80,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        // this.definitions.push(new JobParameterDefinition(\"minimumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['maximumWTP']));\n        // this.definitions.push(new JobParameterDefinition(\"maximumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['minimumWTP']));\n\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            minimumWTP: 0,\n            maximumWTP: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[jobResult.maximizedPayoffIndex], jobResult.payoffNames[jobResult.minimizedPayoffIndex], 'dominated_by', 'extended-dominated_by', 'ICER'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.ICER\n                ];\n\n                result.push(rowCells);\n\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var minimizedIndex = this.minimizedIndex = rule.minimizedPayoffIndex;\n        var maximizedIndex = this.maximizedIndex = rule.maximizedPayoffIndex;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(b.payoffs[maximizedIndex] - a.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]);\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                ICER: null\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        rows.sort(compare);\n\n        let minCost = Infinity,\n            minCostRow = null;\n\n        rows.forEach((r, i)=> {\n            if (r.payoffs[minimizedIndex] < minCost) {\n                minCost = r.payoffs[minimizedIndex];\n                minCostRow = r;\n            } else if(minCostRow) {\n                r.dominatedBy = minCostRow.id;\n            }\n        });\n\n\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex])).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.ICER = 0;\n                return;\n            }\n            let prev = arr[i - 1];\n\n            r.ICER = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            let prev2 = arr[i - 2];\n            if (prev2.extendedDominatedBy !== null) {\n                return;\n            }\n\n            if(r.ICER < prev.ICER){\n                prev.ICER = null;\n                prev.extendedDominatedBy = [prev2.id, r.id] ;\n\n                r.ICER = this.computeICER(r, prev2);\n            }\n        });\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.ICER = row.ICER === null ? null : ExpressionEngine.toFloat(row.ICER);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            maximizedPayoffIndex: maximizedIndex,\n            minimizedPayoffIndex: minimizedIndex,\n            rows: rows.sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]))\n        };\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[this.maximizedIndex], prev.payoffs[this.maximizedIndex]);\n        let n = ExpressionEngine.subtract(r.payoffs[this.minimizedIndex], prev.payoffs[this.minimizedIndex]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return ExpressionEngine.divide(n, d);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex || 0;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultWTP(defaultWTP){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultWTP(parseFloat(defaultWTP)));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, 1, 0, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, 0, 1, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    defaultWTP = 1;\n\n    minimizedPayoffIndex = 0;\n    maximizedPayoffIndex = 1;\n\n    constructor(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.minimizedPayoffIndex = minimizedPayoffIndex;\n        this.maximizedPayoffIndex = maximizedPayoffIndex;\n    }\n\n    setDefaultWTP(defaultWTP) {\n        this.defaultWTP = defaultWTP;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', [0, 0]); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    computeCombinedPayoff(payoff){\n        if (this.defaultWTP === Infinity) {\n            return payoff[this.maximizedPayoffIndex];\n        }\n        return this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]);\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.computeCombinedPayoff([this.basePayoff(e, 0), this.basePayoff(e, 1)]), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","treeValidator","TreeValidator","currentRule","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/engine/exceptions/job-data-invalid-exception","./jobs/engine/exceptions/job-parameters-invalid-exception","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","extendedPolicyDescription","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","ProbabilisticSensitivityAnalysisJob","_simpleJob","_probabilisticSensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","_calculateStep","_SimpleJob","jobRepository","addStep","PrepareVariablesStep","InitPoliciesStep","CalculateStep","execution","stepExecutions","total","current","getProgress","SimpleJob","../../engine/simple-job","../sensitivity-analysis/steps/calculate-step","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/prepare-variables-step","9","_step","_jobStatus","_Step","stepExecution","jobResult","getJobParameters","numberOfRuns","variables","variableValues","runIndex","singleRunVariableValues","evaluated","formula","exitStatus","JOB_STATUS","COMPLETED","Step","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","checkValidityAndRecomputeObjective","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","14","_batchStep","_BatchStep","getJobExecutionContext","variableNames","map","executionContext","put","headers","rows","startIndex","chunkSize","item","treeRoot","policies","clear","variableName","valid","payoffs","dataList","payoff","rowCells","toPolicyString","isString","row","cells","policyIndex","BatchStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","15","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","16","_computationsUtils","sequence","cartesianProductOf","../../../../computations-utils","17","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","variableIndex","policyByKey","itemsWrapper","indexOf","18","getObjectByIdMap","19","round","20","TornadoDiagramJobParameters","21","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","22","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","currentItemCount","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","23","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","captureStackTrace","stack","24","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","25","JobDataInvalidException","_ExtendableError","26","JobExecutionAlreadyRunningException","27","JobInstanceAlreadyCompleteException","28","29","JobParametersInvalidException","30","JobRestartException","31","ExecutionContext","context","dirty","clone","prevValue","dto","32","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","33","JOB_EXECUTION_FLAG","STOP","34","JobExecutionListener","35","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","36","JobInstance","37","JobKeyGenerator","identifying","38","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","39","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","40","initDefinitions","initDefaultValues","def","path","_value","41","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","jobInstanceDao","dbPromise","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","_","jobResultId","getByIndex","generateJobInstanceKey","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","revive","findStepExecutions","reviveJobExecution","jobExecutionDtoList","fetched","fetchJobExecutionsRelations","_this9","getAllByIndex","dtos","reviveStepExecution","_this10","fetchRelationsAndRevive","sorted","sort","b","getTime","_this11","findJobExecutions","executions","jobExecutions","filter","latest","dataModel","loadFromDTO","setData","_this12","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this13","indexName","_this14","_this15","_this16","tx","_this17","_this18","_this19","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","42","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","43","TimeoutJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","valueToResolve","delay","setTimeout","createTimeoutPromise","find","ex","44","JobResult","45","STARTED","STOPPED","FAILED","EXECUTING","46","_jobResult","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","getJobResultByInstance","./exceptions/job-interrupted-exception","./job-result","47","handleNextStep","lastExecutedStepExecution","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","remove","addStepExecution","_currentStepExecution","stepStatus","completedSteps","48","StepExecutionListener","49","50","beforeStep","determineJobStatus","afterStep","close","51","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","52","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","errors","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","53","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","54","_sensitivityAnalysisJob","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_tornadoDiagramJob","workerUrl","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","getJsonReviver","registerJobs","useWorker","initWorker","jobLauncher","serializeData","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","_arguments","argsDeserializer","addListener","onJobFatalError","registerJob","registerExecutionListener","splice","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/timeout-job-repository","55","_rules","model","currentRuleName","ruleByName","ExpectedValueMaximizationRule","maxiMin","MaxiMinRule","maxiMax","MaxiMaxRule","ExpectedValueMinimizationRule","miniMin","MiniMinRule","miniMax","MiniMaxRule","decisionPolicy","trace","time","rule","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","computedBasePayoff","./rules","56","_toConsumableArray","arr2","_objectiveRule","_ObjectiveRule","NAME","decisionNode","childrenPayoffs","indexesOf","probabilityToEnter","cValue","TerminalNode","equals","basePayoff","multiply","ObjectiveRule","./objective-rule","57","58","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","59","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","60","minBy","61","62","63","makeDecision","aggregatedPayoff","childrenPayoff","selectedIndexes","_makeDecision","bestChild","worstChild","childPayoff","baseProbability","modifyChanceProbability","sumweight","div","fieldName","edge","../../policies/decision","../../policies/policy","64","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","Set","child","has","trim","ge","size","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","65","66","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","67","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","68","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","69","ignoreId","prependId","70","PayoffValueValidator","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","71","ProbabilityValueValidator","72","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobDataInvalidException = require(\"./jobs/engine/exceptions/job-data-invalid-exception\");\n\nvar _jobParametersInvalidException = require(\"./jobs/engine/exceptions/job-parameters-invalid-exception\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/engine/exceptions/job-data-invalid-exception\":25,\"./jobs/engine/exceptions/job-parameters-invalid-exception\":29,\"./jobs/job-instance-manager\":52,\"./jobs/jobs-manager\":54,\"./objective/objective-rules-manager\":55,\"./operations/operations-manager\":66,\"./policies/policy\":69,\"./validation/tree-validator\":72,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    if (e.isFieldValid('payoff', true, false)) {\n                        try {\n                            e.computedValue(null, 'payoff', _this2.expressionEngine.evalPayoff(e));\n                        } catch (err) {\n                            //   Left empty intentionally\n                        }\n                    }\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":51}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":39,\"../../engine/job-parameters\":40,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _calculateStep = require(\"../sensitivity-analysis/steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SimpleJob);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, \"probabilistic-sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":47,\"../sensitivity-analysis/steps/calculate-step\":14,\"../sensitivity-analysis/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":7,\"./steps/prepare-variables-step\":9}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(expressionEngine, jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var variables = params.value(\"variables\");\n            var variableValues = [];\n            var data = stepExecution.getData();\n\n            for (var runIndex = 0; runIndex < numberOfRuns; runIndex++) {\n                var singleRunVariableValues = [];\n                variables.forEach(function (v) {\n                    var evaluated = _this2.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                });\n                variableValues.push(singleRunVariableValues);\n            }\n\n            jobResult.data = {\n                variableValues: variableValues\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":45,\"../../../engine/step\":50,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":39,\"../../engine/job-parameters\":40,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":72,\"../../engine/batch/batch-step\":22,\"../../engine/job\":46,\"../../engine/job-status\":45,\"../../engine/simple-job\":47,\"../../engine/step\":50,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":39,\"../../engine/job-parameters\":40,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository, expressionsEvaluator.expressionEngine));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":47,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 5));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.headers) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n\n                jobResult.data.headers = headers;\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n            var payoffs = [];\n            var dataList = [];\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n\n                payoffs.push(payoff);\n            });\n\n            return {\n                dataList: dataList,\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var rowCells = [_policy.Policy.toPolicyString(policy, extendedPolicyDescription)];\n                    item.variables.forEach(function (v) {\n                        rowCells.push(_this3.toFloat(v));\n                    });\n                    var payoff = item.payoffs[i];\n                    rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: i\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":69,\"../../../../validation/tree-validator\":72,\"../../../engine/batch/batch-step\":22,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":68,\"../../../engine/job-status\":45,\"../../../engine/step\":50}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../computations-utils\":4,\"../../../engine/job-status\":45,\"../../../engine/step\":50,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":68,\"../../../../policies/policy\":69,\"../../../../validation/tree-validator\":72,\"../../../engine/batch/batch-step\":22,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":68,\"../../../engine/job-status\":45,\"../../../engine/step\":50,\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":45,\"../../../engine/step\":50,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":39,\"../../engine/job-parameters\":40,\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":47,\"./steps/calculate-step\":17,\"./steps/init-policies-step\":18,\"./steps/prepare-variables-step\":19,\"./tornado-diagram-job-parameters\":20}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":28,\"../job-status\":45,\"../step\":50,\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = exports.ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n        _this.name = _this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":23,\"./job-data-invalid-exception\":25,\"./job-execution-already-running-exception\":26,\"./job-instance-already-complete-exception\":27,\"./job-interrupted-exception\":28,\"./job-parameters-invalid-exception\":29,\"./job-restart-exception\":30}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":23}],31:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":24,\"./execution-context\":31,\"./job\":46,\"./job-execution\":35,\"./job-execution-flag\":33,\"./job-execution-listener\":34,\"./job-instance\":36,\"./job-key-generator\":37,\"./job-launcher\":38,\"./job-parameter-definition\":39,\"./job-parameters\":40,\"./job-status\":45,\"./simple-job\":47,\"./step\":50,\"./step-execution\":49,\"./step-execution-listener\":48}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":31,\"./job-status\":45,\"./step-execution\":49,\"sd-utils\":\"sd-utils\"}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":25,\"./exceptions/job-parameters-invalid-exception\":29,\"./exceptions/job-restart-exception\":30,\"./job-status\":45,\"sd-utils\":\"sd-utils\"}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":39,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n\n        _this.jobInstanceDao = new ObjectStoreDao('job-instances', _this.dbPromise);\n        _this.jobExecutionDao = new ObjectStoreDao('job-executions', _this.dbPromise);\n        _this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', _this.dbPromise);\n        _this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', _this.dbPromise);\n\n        _this.stepExecutionDao = new ObjectStoreDao('step-executions', _this.dbPromise);\n        _this.jobResultDao = new ObjectStoreDao('job-results', _this.dbPromise);\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 1, function (upgradeDB) {\n                upgradeDB.createObjectStore('job-instances');\n                var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                upgradeDB.createObjectStore('job-execution-progress');\n                upgradeDB.createObjectStore('job-execution-flags');\n                var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                var jobResultOS = upgradeDB.createObjectStore('job-results');\n                jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n            });\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this3.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this4 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this4.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this5 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this5.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this6 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this6.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this7 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this7.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this8 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this8.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this9.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this10 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this10.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this11 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this11.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this12 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this12.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this13 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this13.name).objectStore(_this13.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this14 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this14.name).objectStore(_this14.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this16.name, 'readwrite');\n                tx.objectStore(_this16.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this17.name, 'readwrite');\n                tx.objectStore(_this17.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name);\n                var keys = [];\n                var store = tx.objectStore(_this19.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":31,\"../job-execution\":35,\"../job-instance\":36,\"../step-execution\":49,\"./job-repository\":42,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                executionContext.setData(data);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {//TODO\n            // if(o instanceof JobExecution){\n            //     return this.removeJobExecution(o);\n            // }\n            //\n            // if(o instanceof StepExecution){\n            //     return this.removeStepExecution(o);\n            // }\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":26,\"../exceptions/job-instance-already-complete-exception\":27,\"../execution-context\":31,\"../job-execution\":35,\"../job-instance\":36,\"../job-key-generator\":37,\"../job-status\":45,\"../step-execution\":49,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_JobRepository) {\n    _inherits(TimeoutJobRepository, _JobRepository);\n\n    function TimeoutJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TimeoutJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":42,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":31,\"./job-status\":45,\"./step-execution\":49,\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],46:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":25,\"./exceptions/job-interrupted-exception\":28,\"./exceptions/job-parameters-invalid-exception\":29,\"./job-execution-flag\":33,\"./job-result\":44,\"./job-status\":45,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":28,\"./exceptions/job-restart-exception\":30,\"./execution-context\":31,\"./job\":46,\"./job-execution-flag\":33,\"./job-status\":45,\"./step\":50,\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":31,\"./job-execution\":35,\"./job-status\":45,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":28,\"./job-status\":45,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":32,\"./job-worker\":53,\"./jobs-manager\":54}],52:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":34,\"./engine/job-instance\":36,\"./engine/job-status\":45,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],54:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.jobRepository = new _idbJobRepository.IdbJobRepository(_this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        _this.registerJobs();\n\n        _this.useWorker = !!workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(workerUrl);\n        }\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution && jobExecution.isRunning()) {\n                    return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                        return jobExecution;\n                    });\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n            this.registerJob(new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.remove(jobExecution.jobInstance);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":13,\"./configurations/tornado-diagram/tornado-diagram-job\":21,\"./engine/job-execution-flag\":33,\"./engine/job-execution-listener\":34,\"./engine/job-launcher\":38,\"./engine/job-parameters\":40,\"./engine/job-repository/idb-job-repository\":41,\"./engine/job-repository/timeout-job-repository\":43,\"./engine/job-status\":45,\"./job-worker\":53,\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(data, expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        var max = new _rules.ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new _rules.MaxiMinRule(expressionEngine);\n        var maxiMax = new _rules.MaxiMaxRule(expressionEngine);\n        var min = new _rules.ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new _rules.MiniMinRule(expressionEngine);\n        var miniMax = new _rules.MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name] = max;\n        this.ruleByName[maxiMin.name] = maxiMin;\n        this.ruleByName[maxiMax.name] = maxiMax;\n        this.ruleByName[min.name] = min;\n        this.ruleByName[miniMin.name] = miniMin;\n        this.ruleByName[miniMax.name] = miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            this.data.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedBasePayoff();\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":58,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":56,\"./expected-value-minimization-rule\":57,\"./maxi-max-rule\":59,\"./maxi-min-rule\":60,\"./mini-max-rule\":61,\"./mini-min-rule\":62,\"./objective-rule\":63}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":63,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _decision = require('../../policies/decision');\n\nvar _policy = require('../../policies/policy');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, expressionEngine) {\n        _classCallCheck(this, ObjectiveRule);\n\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: 'setDecisionPolicy',\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: 'clearDecisionPolicy',\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            throw 'makeDecision function not implemented for rule: ' + this.name;\n        }\n    }, {\n        key: '_makeDecision',\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: 'computePayoff',\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.cValue(e.childNode, 'payoff')).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: 'cValue',\n        value: function cValue(object, fieldName, value) {\n            return object.computedValue(this.name, fieldName, value);\n        }\n    }, {\n        key: 'baseProbability',\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: 'basePayoff',\n        value: function basePayoff(edge) {\n            return edge.computedBasePayoff();\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: 'add',\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: 'subtract',\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: 'divide',\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: 'max',\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: 'min',\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/decision\":67,\"../../policies/policy\":69,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],64:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":72,\"./operation\":65,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],65:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],66:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":64}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],68:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":67,\"./policy\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],69:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":67}],70:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],72:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _probabilityValueValidator = require('./probability-value-validator');\n\nvar _payoffValueValidator = require('./payoff-value-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: 'validate',\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: 'validateNode',\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n                e.setValueValidity('payoff', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n                var payoff = e.computedBasePayoff();\n                if (!_this2.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                    // console.log('invalidPayoff', e);\n                    e.setValueValidity('payoff', false);\n                }\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":70,\"./probability-value-validator\":71,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils, log} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobDataInvalidException} from \"./jobs/engine/exceptions/job-data-invalid-exception\";\nimport {JobParametersInvalidException} from \"./jobs/engine/exceptions/job-parameters-invalid-exception\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from 'sd-model'\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation:false,\n        url: null\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data=null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    getJobByName(jobName){\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=>{\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if(!allRules){\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=>{\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data){\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay=null) {\n        data = data || this.data;\n        if(policyToDisplay){\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=>{\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root,policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy){\n        if(node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if(decision){\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                if(e.isFieldValid('payoff', true, false)){\n                    try{\n                        e.computedValue(null, 'payoff', this.expressionEngine.evalPayoff(e))\n                    }catch (err){\n                        //   Left empty intentionally\n                    }\n                }\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {CalculateStep} from \"../sensitivity-analysis/steps/calculate-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"probabilistic-sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(expressionEngine, jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var variables = params.value(\"variables\");\n        var variableValues = [];\n        var data = stepExecution.getData();\n\n        for(var runIndex=0; runIndex<numberOfRuns; runIndex++){\n            var singleRunVariableValues = [];\n            variables.forEach(v=> {\n                var evaluated = this.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n            });\n            variableValues.push(singleRunVariableValues)\n        }\n\n        jobResult.data={\n            variableValues: variableValues\n        };\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository, expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 5);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.headers) {\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n\n            jobResult.data.headers = headers;\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n        var payoffs = [];\n        var dataList = [];\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n\n\n            payoffs.push(payoff);\n        });\n\n        return {\n            dataList: dataList,\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var rowCells = [Policy.toPolicyString(policy, extendedPolicyDescription)];\n                item.variables.forEach(v=> {\n                    rowCells.push(this.toFloat(v))\n                });\n                var payoff = item.payoffs[i];\n                rowCells.push(Utils.isString(payoff) ? payoff : this.toFloat(payoff));\n                var row = {\n                    cells: rowCells,\n                    policyIndex: i,\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName ='sd-job-repository', deleteDB=false) {\n        super();\n        this.dbName=dbName;\n        this.expressionsReviver = expressionsReviver;\n        if(deleteDB){\n            this.deleteDB().then(()=>{\n                this.initDB()\n            })\n        }else{\n            this.initDB()\n        }\n\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    initDB(){\n        this.dbPromise = idb.open(this.dbName, 1, upgradeDB => {\n            upgradeDB.createObjectStore('job-instances');\n            var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n            jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n            jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n            jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n            upgradeDB.createObjectStore('job-execution-progress');\n            upgradeDB.createObjectStore('job-execution-flags');\n            var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n            stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n            var jobResultOS = upgradeDB.createObjectStore('job-results');\n            jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n        });\n    }\n\n    deleteDB(){\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    getJobResult(jobResultId){\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto): dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions=null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions=[]) {\n        if(stepExecutions.length<=savedExecutions.length){\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=>{\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id){\n        return this.jobExecutionDao.get(id).then(dto=>{\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive=true){\n        if(!jobExecutionDTO){\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=>{\n            jobExecutionDTO.stepExecutions = steps;\n            if(!revive){\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive=true, fetched=[]){\n        if(jobExecutionDtoList.length<=fetched.length){\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=>{\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive=true){\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=>{\n            if(!revive){\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive=true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted =  values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if(!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length -1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if(data){\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            executionContext.setData(data);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n\n    remove(o){ //TODO\n        // if(o instanceof JobExecution){\n        //     return this.removeJobExecution(o);\n        // }\n        //\n        // if(o instanceof StepExecution){\n        //     return this.removeStepExecution(o);\n        // }\n    }\n\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\n\n\nexport class TimeoutJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults=[];\n    \n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository) {\n        super(name, jobRepository)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\n\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        super();\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n        this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        this.registerJobs();\n\n        this.useWorker = !!workerUrl;\n        if (this.useWorker) {\n            this.initWorker(workerUrl);\n        }\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution && jobExecution.isRunning()) {\n                return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n        this.registerJob(new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.remove(jobExecution.jobInstance);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n}\n","import {ExpectedValueMaximizationRule, ExpectedValueMinimizationRule, MaxiMinRule, MaxiMaxRule, MiniMinRule, MiniMaxRule} from \"./rules\";\nimport {log} from \"sd-utils\"\nimport * as model from \"sd-model\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName={};\n\n    constructor(data, expressionEngine, currentRuleName){\n        this.data = data;\n        this.expressionEngine=expressionEngine;\n        var max = new ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new MaxiMinRule(expressionEngine);\n        var maxiMax = new MaxiMaxRule(expressionEngine);\n        var min = new ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new MiniMinRule(expressionEngine);\n        var miniMax = new MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name]=max;\n        this.ruleByName[maxiMin.name]=maxiMin;\n        this.ruleByName[maxiMax.name]=maxiMax;\n        this.ruleByName[min.name]=min;\n        this.ruleByName[miniMin.name]=miniMin;\n        this.ruleByName[miniMax.name]=miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if(currentRuleName){\n            this.currentRule = this.ruleByName[currentRuleName];\n        }else{\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    recompute(allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        this.data.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedBasePayoff();\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {domain as model} from 'sd-model'\nimport {Decision} from \"../../policies/decision\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule{\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n\n    constructor(name, expressionEngine){\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    setDecisionPolicy(decisionPolicy){\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    clearDecisionPolicy(){\n        this.decisionPolicy=null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs){\n        throw 'makeDecision function not implemented for rule: '+this.name\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs){\n        if(this.decisionPolicy){\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if(decision){\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=0, aggregatedPayoff=0){\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            }else{\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=>{\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if(childPayoff < worstChild){\n                        worstChild = childPayoff;\n                        worstCount=1;\n                    }else if(childPayoff.equals(worstChild)){\n                        worstCount++\n                    }\n                    if(childPayoff > bestChild){\n                        bestChild = childPayoff;\n                        bestCount=1;\n                    }else if(childPayoff.equals(bestChild)){\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if(sumweight>0){\n                node.childEdges.forEach(e=>{\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'),this.cValue(e.childNode, 'payoff')).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff=this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node){\n        throw 'computeOptimal function not implemented for rule: '+this.name\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldName, value){\n        return  object.computedValue(this.name, fieldName, value);\n    }\n\n    baseProbability(edge){\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge){\n        return edge.computedBasePayoff();\n    }\n\n    clearComputedValues(object){\n        object.clearComputedValues(this.name);\n    }\n\n    add(a,b){\n        return ExpressionEngine.add(a,b)\n    }\n    subtract(a,b){\n        return ExpressionEngine.subtract(a,b)\n    }\n    divide(a,b){\n        return ExpressionEngine.divide(a,b)\n    }\n\n    multiply(a,b){\n        return ExpressionEngine.multiply(a,b)\n    }\n\n    max(){\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min(){\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {Utils} from 'sd-utils'\nimport {domain as model, ValidationResult} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n            e.setValueValidity('payoff', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if(!ExpressionEngine.isHash(e.probability)){\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n            var payoff = e.computedBasePayoff();\n            if (!this.payoffValueValidator.validate(payoff)) {\n                validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                // console.log('invalidPayoff', e);\n                e.setValueValidity('payoff', false);\n            }\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
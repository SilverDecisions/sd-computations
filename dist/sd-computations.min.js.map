{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/compute-policy-stats-step.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prob-calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","extendedPolicyDescription","failOnInvalidTree","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_initPoliciesStep","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","jobRepository","batchSize","addStep","InitPoliciesStep","calculateStep","ProbCalculateStep","ComputePolicyStatsStep","execution","stepExecutions","total","current","getProgress","SensitivityAnalysisJob","../sensitivity-analysis/sensitivity-analysis-job","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","9","_step","_jobStatus","_Step","stepExecution","jobResult","getJobParameters","numberOfRuns","rule","ruleByName","payoffsPerPolicy","policies","map","rows","row","policyIndex","isString","payoff","maximization","medians","payoffs","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","exitStatus","JOB_STATUS","COMPLETED","Step","../../../engine/job-status","../../../engine/step","10","_calculateStep","_jobComputationException","_CalculateStep","getJobExecutionContext","variableNames","executionContext","put","expectedValues","fill","startIndex","chunkSize","variables","variableValues","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","errorData","JobComputationException","item","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","CalculateStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","../../../engine/exceptions/job-computation-exception","../../sensitivity-analysis/steps/calculate-step","11","RecomputeJobParameters","12","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","checkValidityAndRecomputeObjective","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/simple-job","../../engine/step","./recompute-job-parameters","13","SensitivityAnalysisJobParameters","NUMBER","14","_simpleJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_SimpleJob","initSteps","PrepareVariablesStep","withHeaders","headers","roundVariables","rowCells","toPolicyString","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","SimpleJob","../../../policies/policy","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","./steps/prepare-variables-step","15","_batchStep","_BatchStep","treeRoot","clear","variableName","valid","BatchStep","16","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","17","_computationsUtils","sequence","cartesianProductOf","../../../../computations-utils","18","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","19","getObjectByIdMap","20","21","TornadoDiagramJobParameters","22","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","23","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","24","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","captureStackTrace","stack","25","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","26","_ExtendableError","27","JobDataInvalidException","28","JobExecutionAlreadyRunningException","29","JobInstanceAlreadyCompleteException","30","31","JobParametersInvalidException","32","JobRestartException","33","ExecutionContext","context","dirty","clone","prevValue","dto","34","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","35","JOB_EXECUTION_FLAG","STOP","36","JobExecutionListener","37","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","38","JobInstance","39","JobKeyGenerator","identifying","40","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","41","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","42","initDefinitions","initDefaultValues","def","path","_value","43","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","sort","b","getTime","_this13","executions","filter","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","44","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","45","SimpleJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","find","ex","46","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","47","48","STARTED","STOPPED","FAILED","EXECUTING","49","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","50","_toConsumableArray","arr2","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","51","StepExecutionListener","52","53","beforeStep","determineJobStatus","afterStep","close","54","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","55","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","56","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","57","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","58","_rules","model","currentRuleName","ExpectedValueMaximizationRule","maxiMin","MaxiMinRule","maxiMax","MaxiMaxRule","ExpectedValueMinimizationRule","miniMin","MiniMinRule","miniMax","MiniMaxRule","decisionPolicy","trace","time","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","computedBasePayoff","./rules","59","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","basePayoff","multiply","ObjectiveRule","./objective-rule","60","61","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","62","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","63","minBy","64","65","66","decisionNode","childrenPayoffs","best","selectedIndexes","makeDecision","aggregatedPayoff","childrenPayoff","_makeDecision","bestChild","worstChild","childPayoff","baseProbability","modifyChanceProbability","sumweight","div","fieldName","edge","../../policies/decision","../../policies/policy","67","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","68","69","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","70","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","71","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","72","ignoreId","prependId","73","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","74","ProbabilityValueValidator","75","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAR,UAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,IAAA,GAAAL,GAAA,kBAAAT,UAAAA,QAAAM,EAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,GAAA,SAAAjB,EAAAkB,EAAAJ,GCAA,cAEA,WACA,QAAAK,GAAAC,GACA,MAAAC,OAAAC,UAAAC,MAAAR,KAAAK,GAGA,QAAAI,GAAAC,GACA,MAAA,IAAAC,SAAA,SAAAC,EAAAC,GACAH,EAAAI,UAAA,WACAF,EAAAF,EAAAK,SAGAL,EAAAM,QAAA,WACAH,EAAAH,EAAAO,UAKA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAX,GACAY,EAAA,GAAAX,SAAA,SAAAC,EAAAC,GACAH,EAAAS,EAAAC,GAAAG,MAAAJ,EAAAE,GACAZ,EAAAC,GAAAc,KAAAZ,EAAAC,IAIA,OADAS,GAAAZ,QAAAA,EACAY,EAGA,QAAAG,GAAAN,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAC,EAAAC,EAAAC,EACA,OAAAC,GAAAE,KAAA,SAAAE,GACA,GAAAA,EACA,MAAA,IAAAC,GAAAD,EAAAJ,EAAAZ,WAIA,QAAAkB,GAAAC,EAAAC,EAAAC,GACAA,EAAAC,QAAA,SAAAC,GACAC,OAAAC,eAAAN,EAAAtB,UAAA0B,GACAG,IAAA,WACA,MAAAC,MAAAP,GAAAG,IAEAK,IAAA,SAAAC,GACAF,KAAAP,GAAAG,GAAAM,OAMA,QAAAC,GAAAX,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,IAAAQ,GAAAlC,YACAsB,EAAAtB,UAAA0B,GAAA,WACA,MAAAf,GAAAmB,KAAAP,GAAAG,EAAAS,eAKA,QAAAC,GAAAd,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,IAAAQ,GAAAlC,YACAsB,EAAAtB,UAAA0B,GAAA,WACA,MAAAI,MAAAP,GAAAG,GAAAV,MAAAc,KAAAP,GAAAY,eAKA,QAAAE,GAAAf,EAAAC,EAAAW,EAAAV,GACAA,EAAAC,QAAA,SAAAC,GACAA,IAAAQ,GAAAlC,YACAsB,EAAAtB,UAAA0B,GAAA,WACA,MAAAR,GAAAY,KAAAP,GAAAG,EAAAS,eAKA,QAAAG,GAAAC,GACAT,KAAAU,OAAAD,EAuBA,QAAAnB,GAAAqB,EAAAtC,GACA2B,KAAAY,QAAAD,EACAX,KAAAa,SAAAxC,EA+BA,QAAAyC,GAAAC,GACAf,KAAAgB,OAAAD,EAuCA,QAAAE,GAAAC,GACAlB,KAAAmB,IAAAD,EACAlB,KAAAoB,SAAA,GAAA9C,SAAA,SAAAC,EAAAC,GACA0C,EAAAG,WAAA,WACA9C,KAEA2C,EAAAvC,QAAA,WACAH,EAAA0C,EAAAtC,QAEAsC,EAAAI,QAAA,WACA9C,EAAA0C,EAAAtC,UAkBA,QAAA2C,GAAAC,EAAAC,EAAAC,GACA1B,KAAA2B,IAAAH,EACAxB,KAAAyB,WAAAA,EACAzB,KAAA0B,YAAA,GAAAT,GAAAS,GAkBA,QAAAE,GAAAJ,GACAxB,KAAA2B,IAAAH,EA/IAjC,EAAAiB,EAAA,UACA,OACA,UACA,aACA,WAGAL,EAAAK,EAAA,SAAAqB,UACA,MACA,SACA,SACA,aACA,UAGAtB,EAAAC,EAAA,SAAAqB,UACA,aACA,kBAQAtC,EAAAD,EAAA,WACA,YACA,MACA,aACA,UAGAa,EAAAb,EAAA,UAAAwC,WACA,SACA,YAIA,UAAA,WAAA,sBAAAnC,QAAA,SAAAoC,GACAA,IAAAD,WAAA5D,YACAoB,EAAApB,UAAA6D,GAAA,WACA,GAAApB,GAAAX,KACAhB,EAAAqB,SACA,OAAA/B,SAAAC,UAAAY,KAAA,WAEA,MADAwB,GAAAC,QAAAmB,GAAA7C,MAAAyB,EAAAC,QAAA5B,GACAZ,EAAAuC,EAAAE,UAAA1B,KAAA,SAAAE,GACA,GAAAA,EACA,MAAA,IAAAC,GAAAD,EAAAsB,EAAAE,kBAUAC,EAAA5C,UAAA8D,YAAA,WACA,MAAA,IAAAxB,GAAAR,KAAAgB,OAAAgB,YAAA9C,MAAAc,KAAAgB,OAAAX,aAGAS,EAAA5C,UAAAuC,MAAA,WACA,MAAA,IAAAD,GAAAR,KAAAgB,OAAAP,MAAAvB,MAAAc,KAAAgB,OAAAX,aAGAd,EAAAuB,EAAA,UACA,OACA,UACA,aACA,kBAGAX,EAAAW,EAAA,SAAAmB,gBACA,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGA1B,EAAAO,EAAA,SAAAmB,gBACA,aACA,kBAGA3B,EAAAQ,EAAA,SAAAmB,gBACA,gBAkBAhB,EAAA/C,UAAAgE,YAAA,WACA,MAAA,IAAApB,GAAAd,KAAAmB,IAAAe,YAAAhD,MAAAc,KAAAmB,IAAAd,aAGAd,EAAA0B,EAAA,OACA,mBACA,SAGAX,EAAAW,EAAA,MAAAkB,gBACA,UASAZ,EAAArD,UAAAkE,kBAAA,WACA,MAAA,IAAAtB,GAAAd,KAAA2B,IAAAS,kBAAAlD,MAAAc,KAAA2B,IAAAtB,aAGAd,EAAAgC,EAAA,OACA,OACA,UACA,qBAGAjB,EAAAiB,EAAA,MAAAc,aACA,oBACA,UAOAT,EAAA1D,UAAAwD,YAAA,WACA,MAAA,IAAAT,GAAAjB,KAAA2B,IAAAD,YAAAxC,MAAAc,KAAA2B,IAAAtB,aAGAd,EAAAqC,EAAA,OACA,OACA,UACA,qBAGAtB,EAAAsB,EAAA,MAAAS,aACA,WAKA,aAAA,iBAAA1C,QAAA,SAAA2C,IACAxB,EAAAN,GAAAb,QAAA,SAAAS,GACAA,EAAAlC,UAAAoE,EAAAC,QAAA,OAAA,YAAA,WACA,GAAAvD,GAAAjB,EAAAsC,WACAmC,EAAAxD,EAAAA,EAAApB,OAAA,GACA6E,EAAAzC,KAAAgB,QAAAhB,KAAAU,OACArC,EAAAoE,EAAAH,GAAApD,MAAAuD,EAAAzD,EAAAb,MAAA,MACAE,GAAAI,UAAA,WACA+D,EAAAnE,EAAAK,eAOA8B,EAAAM,GAAAnB,QAAA,SAAAS,GACAA,EAAAlC,UAAAwE,SACAtC,EAAAlC,UAAAwE,OAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA7C,KACA8C,IAEA,OAAA,IAAAxE,SAAA,SAAAC,GACAsE,EAAAE,cAAAJ,EAAA,SAAAhC,GACA,MAAAA,IAIAmC,EAAAE,KAAArC,EAAAtB,OAEA4D,SAAAL,GAAAE,EAAAlF,QAAAgF,MACArE,GAAAuE,OAGAnC,GAAAA,mBATApC,GAAAuE,UAeA,IAAAI,IACAC,KAAA,SAAAC,EAAAC,EAAAC,GACA,GAAArE,GAAAJ,EAAA0E,UAAA,QAAAH,EAAAC,IACAhF,EAAAY,EAAAZ,OAQA,OANAA,GAAAmF,gBAAA,SAAAC,GACAH,GACAA,EAAA,GAAA/B,GAAAlD,EAAAK,OAAA+E,EAAAhC,WAAApD,EAAAqD,eAIAzC,EAAAE,KAAA,SAAAqC,GACA,MAAA,IAAAI,GAAAJ,MAGAkC,SAAA,SAAAN,GACA,MAAAvE,GAAA0E,UAAA,kBAAAH,KAIA,oBAAAtF,GACAA,EAAAJ,QAAAwF,EAGAS,KAAAC,IAAAV,UCKMW,GAAG,SAASjH,EAAQkB,EAAOJ,IACjC,SAAWoG,GACX,YAyCA,SAASC,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtDpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsH,mBAAqBtH,EAAQuH,yBAA2BhC,MAEhE,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MAI3IsF,EAAO,QAAS3F,GAAI4F,EAAQC,EAAUC,GACvB,OAAXF,IAAiBA,EAASG,SAAS5H,UAAU,IAAI6H,GAAOlG,OAAOmG,yBAAyBL,EAAQC,EAAU,IAAa3C,SAAT8C,EAAoB,CAClI,GAAIE,GAASpG,OAAOqG,eAAeP,EAAQ,OAAe,QAAXM,EAC3C,OAEOlG,EAAIkG,EAAQL,EAAUC,GAE9B,GAAI,SAAWE,GAClB,MAAOA,GAAK1G,KAEZ,IAAI8G,GAASJ,EAAKhG,GAAI,IAAekD,SAAXkD,EAEzB,MAAOA,GAAOxI,KAAKkI,ICzV5BO,EAAAxJ,EAAA,YACAyJ,EAAAzJ,EAAA,YACA0J,EAAA1J,EAAA,yBDmX+Bc,GAAQuH,yBAA2B,SAAUsB,GAGxE,QAAStB,GC/WTuB,GDgXIzC,EAAgB/D,KChXAiF,EDkXhB,IAAIwB,GAAQxC,EAA2BjE,MAAOiF,EAAyBJ,WAAahF,OAAOqG,eAAejB,IAA2BtH,KClXrHqC,MDyXhB,OALAyG,GCrXJC,SAAW,OAGPF,GDqXIJ,EAASO,MCpXTC,WAAAH,EAAAD,GAEPC,EDuXD,MAfArC,GAAUa,EC7WVsB,GD4XOtB,GACTqB,EAAqBO,2BAKEnJ,EAAQsH,mBAAqB,SAAU8B,GAG5D,QAAS9B,GCvXT+B,EAAAC,GDwXIjD,EAAgB/D,KCxXKgF,ED0XrB,IAAIiC,GAAShD,EAA2BjE,MAAOgF,EAAmBH,WAAahF,OAAOqG,eAAelB,IAAqBrH,KAAKqC,KC1X1G+G,EAAAC,GD+XrB,IAHAC,EC/XJnD,OAASsC,EAAAO,MAAAO,kBDgYLD,EC/XJE,SAAWf,EAAAO,MAAAQ,WAKJF,EAAHE,SAAkB,CD6XdF,EC5XAG,WAAAC,8BD6XIC,UC5XW,SAAAC,GD6XPN,EC5XAO,MAAA,YAAwBD,EAAxBE,WD+XJC,SC5XU,SAAAH,GD6XNN,EC5XAO,MAAA,WAAuBD,EAAvBE,YDgYR,IC5XI5E,GAAJoE,CD6XAA,GC5XAU,oBD6XIC,OC5XQ,SAAAC,EAAAC,EAAAC,GD8XJ,GC5XIf,GAAO,GAAAX,GAAA2B,UAAXD,ED6XAlF,GC5XA+E,OAAAC,EAAAC,EAAAd,ID8XJiB,WC5XY,SAAAC,GD6XRrF,EC5XAuE,WAAAe,QAAAD,GD4XArF,SC5XkD,SAAAhG,GD6X9CgG,EC5XA2E,MAAA,gBAAAU,EAAgD9B,EAAAO,MAAAyB,YAAhDvL,OD+XRwL,UC5XW,SAAAN,EAAAO,EAAAC,EAAAC,GACPF,GD6XIzF,EC5XA4F,sBAAAC,qBAAAJ,ED8XJ,IC5XIK,IAAJL,EACItB,EAAO,GAAAX,GAAA2B,UAAXD,ED6XAlF,GC5XA+F,oCAAA5B,EAAA2B,EAAAJ,EAAAC,GD6XAxI,KC5XAwH,MAAA,aAAyBR,EAAzBS,YDgYR3D,EC5XA+E,UAAmB,SAAAC,GACXA,EAAA9B,eAAAnH,SAAiCiJ,EAAA9B,KAAA+B,eAAjC,gBAA8ED,EAAA9B,KAAA+B,eAAlF,kBD6XIlG,EC5XA8E,mBAA4BmB,EAAA9B,KAA5BgC,aAAA9J,MAAAyE,KAAiEmF,EAAA9B,KAAjEiC,gBD8XApG,EC5XAqG,aAAsBJ,EAAtB9B,ODgYZ,MC5XHC,GD6ZD,MArFA7C,GAAUY,ECrXV8B,GD4aA5B,EAAaF,IACTO,IAAK,YACLlG,MAAO,SAAmB0H,GAGtB,MAFArB,GAAKV,EAAmB9G,UAAU2G,WAAahF,OAAOqG,eAAelB,EAAmB9G,WAAY,YAAa8B,MAAMrC,KAAKqC,KC7XhI+G,GD8XI/G,KC7XJmJ,YAAiBnJ,KAAA+G,OAAjBL,UACA1G,QDgYAuF,IAAK,cACLlG,MAAO,SAAqB+J,GACxBhD,EAASiD,IC9XbC,SAAAF,MDiYA7D,IAAK,eACLlG,MAAO,SAAsBkK,GACzBvJ,KC/XJwH,MAAA,OAAA+B,MDkYAhE,IAAK,QACLlG,MAAO,WACH,GChYAgB,UAAAzC,OAAJ,EDiYQ,KChYE,IAAAoG,WAAN,+BDkYAhE,MChYJ8D,OAAA0F,aDiYQC,oBChYmBpJ,UADH,GDkYhBqJ,qBChYoBzL,MAAAC,UAAAC,MAAAR,KAAA0C,UAF5B,SDuYG2E,GACTsB,EAAqBqD,uBAEpBhM,KAAKqC,KAAuB,mBAAX8D,QAAyBA,OAAyB,mBAATH,MAAuBA,KAAyB,mBAAXiG,QAAyBA,aAExHC,yBAAyB,EAAEC,WAAW,WAAWC,WAAW,aAAaC,GAAG,SAASpN,EAAQkB,EAAOJ,GACvG,YAqCA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArC5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQiM,oBAAsBjM,EAAQmJ,0BAA4B5D,MAElE,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MEpf/I6J,EAAArN,EAAA,wBACAwJ,EAAAxJ,EAAA,YACAsN,EAAAtN,EAAA,uCACAuN,EAAAvN,EAAA,+BACAwN,EAAAxN,EAAA,mCACAyN,EAAAzN,EAAA,uBACA0N,EAAA1N,EAAA,2BACA2N,EAAA3N,EAAA,+BACAyJ,EAAAzJ,EAAA,YACA4N,EAAA5N,EAAA,qBFygBIiK,EAA4BnJ,EAAQmJ,0BE3fpC,QAAAA,GAAAL,GF4fAzC,EAAgB/D,KE5fI6G,GF8fpB7G,KExgBA0G,SAAW,KFygBX1G,KEvgBAsI,SAAW,KFwgBXtI,KEvgBAyK,QFwgBIC,uBExgBK,EFygBLC,IEzgBK,MF2gBT3K,KEvgBA4K,kBAAoB,MFwgBpB5K,KEvgBA6K,iBAAkB,EAGdrE,GFugBAJ,EAASO,MEtgBLC,WAAA5G,KAAAwG,GF0gBc9I,GAAQiM,oBAAsB,WACpD,QAASA,GE3fT5C,GF4fI,GE5fgBC,GAAA3G,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAO,IF8fvB0D,GAAgB/D,KE7fhB2J,GF+fA3J,KE/fAgH,KAAAA,EFggBAhH,KE/fA8K,UAAA/D,GFggBA/G,KE/fA+K,iBAAwB,GAAAd,GAAxBe,iBFggBAhL,KE/fAiL,qBAA4B,GAAAX,GAAAY,qBAAyBlL,KAArD+K,kBFggBA/K,KE/fAyI,sBAA6B,GAAAyB,GAAAiB,sBAA0BnL,KAA1B+K,iBAAiD/K,KAAA+G,OAA9EuB,UFggBAtI,KE/fAoL,kBAAyB,GAAAhB,GAAAiB,kBAAsBrL,KAAtBgH,KAAiChH,KAA1D+K,kBFggBA/K,KE/fAoH,WAAA,GAAAiD,GAAAiB,YAAkCtL,KAAhBiL,qBAA2CjL,KAA3CyI,uBFggBd8C,UE/fWvL,KAAA+G,OAAA0D,OAD0EE,IFigBrFa,eE/fgBxL,KAAA+G,OAFqE6D,kBFkgBrFC,gBE/fiB7K,KAAA+G,OAHrB8D,kBFogBA7K,KE/fAyL,cAAqB,GAAAtB,GAAAuB,cAAkB1L,KAAvC+K,kBF+rBJ,MA7LA7F,GAAayE,IACTpE,IAAK,YACLlG,MAAO,SAAmB0H,GAEtB,MADA/G,MEjgBJ+G,OAAc,GAAAF,GAAdE,GACA/G,QFogBAuF,IAAK,iBACLlG,MAAO,WACH,MElgBGW,MAAAyI,sBAAPkD,eFqgBApG,IAAK,eACLlG,MAAO,SAAsBwI,GACzB,MEngBG7H,MAAAoH,WAAAwE,aAAP/D,MFsgBAtC,IAAK,SACLlG,MAAO,SAAgB+D,EAAMyI,EAAiB7E,GAC1C,GErgB4B8E,KAAAzL,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,EFugB5B,OEtgBGL,MAAAoH,WAAA2E,IAAA3I,EAAAyI,EAA2C7E,GAAQhH,KAAnDgH,KAAP8E,MFygBAvG,IAAK,4BACLlG,MAAO,SAAmC+D,EAAMyI,EAAiBG,GAC7D,GAAIvF,GEvgBRzG,IFygBI,OAAOA,MEzgBJ4H,OAAAxE,EAAAyI,GAAA1M,KAAwC,SAAA8M,GF0gBvC,MEzgBG,IAAA1B,GAAA2B,mBAAuBzF,EAAvBW,WAAA6E,EAAPD,QF6gBJzG,IAAK,oBACLlG,MAAO,WACH,MEzgBGW,MAAAyI,sBAAP0D,SF4gBA5G,IAAK,aACLlG,MAAO,SAAoBiJ,GACvB,ME1gBGtI,MAAAyI,sBAAA2D,WAAP9D,MF6gBA/C,IAAK,uBACLlG,MAAO,SAA8BiJ,GAEjC,MADAtI,ME3gBJ+G,OAAAuB,SAAAA,EACOtI,KAAAyI,sBAAAC,qBAAPJ,MF8gBA/C,IAAK,sBACLlG,MAAO,SAA6BsG,GAChC,ME5gBG3F,MAAAoL,kBAAAiB,oBAAP1G,MF+gBAJ,IAAK,qCACLlG,MAAO,SAA4CsJ,GAC/C,GAAI1B,GE9gBuEjH,KAAtCuI,EAAAlI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAAkBmI,IAAAnI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,EFmhBvD,OAAO/B,SElhBJC,UAAAY,KAAuB,WFmhBtB,GElhBA8H,EAAAF,OAAA0D,OAAJC,sBAA8C,CFmhBtC,GElhBA4B,IFmhBI/D,SEnhBKA,EFohBLC,YEphBRA,EFyhBI,OErhBJG,KFmhBQ2D,EElhBJhE,SAAkBrB,EAAAsF,iBAAlBnJ,MFohBO6D,EElhBJW,OAAA,YAAA0E,EAAiCrF,EAAjCD,MAAA,GAAA7H,KAAwD,SAAAoI,GFmhBvD,GElhBAiF,GAAIjF,EAARkF,SFmhBIxF,GElhBJD,KAAA0F,WAAAF,KFqhBJ,MElhBGvF,GAAA2B,oCAAyC3B,EAAzCD,KAAA2B,EAAAJ,EAAPC,KAdGrJ,KAeC,WFmhBA8H,EElhBJ0F,oBAAyB1F,EAAzBD,WFshBJzB,IAAK,sCACLlG,MAAO,SAA6C2H,EAAM2B,GACtD,GAAIiE,GEnhB8E5M,KAAtCuI,EAAAlI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAAkBmI,IAAAnI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,EFwhB9D2G,GEvhBJ6F,sBAEItE,GAAJC,IFwhBQxI,KEvhBJiL,qBAAA6B,gBAAA9F,EAAAuB,EAAAC,GF0hBAxB,EEvhBJ+F,WAAApN,QAAwB,SAAAqN,GFwhBhB,GEvhBAC,GAAKL,EAAAnB,cAAAyB,SAA4BlG,EAAAmG,qBAArCH,GFwhBIhG,GEvhBJ6F,kBAAA7J,KAAAiK,GACIA,EAAJG,WFwhBQR,EEvhBJnE,sBAAA4E,cAAAL,EAAArE,QF+hBRpD,IAAK,UACLlG,MAAO,SAAiB2H,GACpB,GE1hBAA,GAAOA,GAAQhH,KAAnBgH,IF2hBI,OAAOA,GE1hBJ6F,kBAAAS,MAA6B,SAAAL,GF2hB5B,ME3hBgCA,GAAJG,eF+hBpC7H,IAAK,sBACLlG,MAAO,SAA6B2H,GAChC,GAAIuG,GE9hBsCvN,KAAxBwN,EAAAnN,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAkB,IFmiBpC,OADA2G,GEjiBGA,GAAQhH,KAAfgH,KACAwG,EACWxN,KAAAyN,cAAAzG,EAAPwG,IFoiBAxG,EEjiBJ0G,MAAA/N,QAAmB,SAAA5C,GFkiBXwQ,EEjiBJI,wBAAA5Q,SFmiBAiK,GEjiBJ4G,MAAAjO,QAAmB,SAAA9C,GFkiBX0Q,EEjiBJM,wBAAAhR,SFqiBJ0I,IAAK,0BACLlG,MAAO,SAAiCyO,GACpC,GAAIC,GEliBR/N,IFoiBI8N,GEpiBJE,qBAAArO,QAAkC,SAAA5C,GFqiB1B,MEriB6B+Q,GAAAG,aAAAlR,EAAqBgR,EAAAtF,sBAAAyF,oBAAAJ,EAAxB/Q,SFyiBlCwI,IAAK,0BACLlG,MAAO,SAAiCxC,GACpC,GAAIsR,GEviBRnO,IFyiBInD,GEziBJmR,qBAAArO,QAA+B,SAAA5C,GF0iBvB,ME1iB0BF,GAAAoR,aAAAlR,EAAkBoR,EAAA1F,sBAAA2F,oBAAAvR,EAArBE,SF8iB/BwI,IAAK,gBACLlG,MAAO,SAAuBmO,EAAiBxG,GAC3C,GAAIqH,GE1iBRrO,IF4iBIgH,GE5iBGA,GAAQhH,KAAfgH,KF6iBIA,EE5iBJ0G,MAAA/N,QAAmB,SAAA5C,GF6iBXA,EE5iBJuR,uBF8iBAtH,EE5iBJ4G,MAAAjO,QAAmB,SAAA9C,GF6iBXA,EE5iBJyR,uBF8iBAtH,EE5iBJ+F,WAAApN,QAAwB,SAAAqN,GF6iBhB,ME7iBwBqB,GAAAE,qBAAAvB,EAARQ,QFijBxBjI,IAAK,uBACLlG,MAAO,SAA8ByO,EAAMU,GACvC,GAAIC,GE/iBRzO,IFijBI,IEjjBA8N,YAAgBzH,GAAAqI,OAApBC,aFijBI,CACI,GEjjBAC,GAAWpE,EAAAqE,OAAAC,YAAAN,EAAfV,EFmjBI,IEjjBJc,EAAc,CFkjBNd,EEjjBJG,aAAA,WAAA,EFkjBI,IEjjBAc,GAAYjB,EAAAkB,WAAgBJ,EAAhCK,cFmjBI,OADAF,GEjjBJd,aAAA,WAAA,GACOjO,KAAAuO,qBAA0BQ,EAA1BG,UAAPV,QFsjBJV,GEjjBJkB,WAAArP,QAAwB,SAAA9C,GFkjBhB,MEljBmB4R,GAAAF,qBAA0B1R,EAA1BqS,UAAHV,SFujBrB7E,OAGRwF,0BAA0B,EAAEC,8BAA8B,GAAGC,sBAAsB,GAAGC,sCAAsC,GAAGC,kCAAkC,GAAGC,oBAAoB,GAAGC,8BAA8B,GAAGC,uBAAuB,uBAAuB5F,WAAW,WAAWC,WAAW,aAAa4F,GAAG,SAAS/S,EAAQkB,EAAOJ,GACtV,YAmBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAnB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQkS,kBAAoB3M,MAE5B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MGrwB/I6J,EAAArN,EAAA,uBHixBwBc,GAAQkS,kBAAoB,WAChD,QAASA,KACL7L,EAAgB/D,KAAM4P,GAuB1B,MApBA1K,GAAa0K,EAAmB,OAC5BrK,IAAK,WACLlG,MAAO,SAAkBwQ,EAAKC,EAAKlS,GAC/B,GGrxBAmS,GAAS9F,EAAAe,iBAAAgF,SAAAF,EAAbD,GACInR,GAAJmR,GACII,EAAQrS,EAAZ,CHsxBI,KGrxBJqS,EHsxBQ,MGrxBJvR,EHyxBA,KGrxBC,GAFDwR,GAAOjG,EAAAe,iBAAAmF,OAAAJ,EAA+BnS,EAA1C,GACIwS,EAAJP,EACSxS,EAAT,EAAgBA,EAAIO,EAApB,EAAAP,IHsxBQ+S,EGrxBGnG,EAAAe,iBAAAqF,IAAAD,EAAPF,GHsxBIxR,EGrxBJsE,KAAYiH,EAAAe,iBAAAsF,QAAZF,GHwxBA,OADA1R,GGrxBJsE,KAAA8M,GACApR,MHyxBGkR,OAGRF,uBAAuB,yBAAyBa,GAAG,SAAS3T,EAAQkB,EAAOJ,GAC9E,YAuBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAvB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQwN,qBAAuBjI,MAE/B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MI3zB/I6J,EAAArN,EAAA,wBACAyJ,EAAAzJ,EAAA,YACAwJ,EAAAxJ,EAAA,WJ00B2Bc,GAAQwN,qBAAuB,WACtD,QAASA,GIt0BTH,GJu0BIhH,EAAgB/D,KIt0BhBkL,GJw0BAlL,KIx0BA+K,iBAAAA,EJ29BJ,MAhJA7F,GAAagG,IACT3F,IAAK,QACLlG,MAAO,SAAe2H,GAClBA,EI10BJ0G,MAAA/N,QAAmB,SAAA5C,GJ20BXA,EI10BJyT,wBJ40BAxJ,EI10BJ4G,MAAAjO,QAAmB,SAAA9C,GJ20BXA,EI10BJ2T,2BJ80BJjL,IAAK,YACLlG,MAAO,SAAmB2H,EAAMgG,GAC5BhG,EI30BJmG,qBAAAH,GAAArN,QAAwC,SAAA5C,GJ40BhCA,EI30BJyT,sBJ40BIzT,EI30BJiS,WAAArP,QAAqB,SAAA9C,GJ40BbA,EI30BJ2T,6BJg1BRjL,IAAK,kBACLlG,MAAO,SAAyB2H,GAC5B,GI70BcuB,KAAAlI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GJ+0BVoG,EI/0B4DzG,KAAnCwI,IAAAnI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GAAkBoQ,EAAApQ,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,EJo1B/C+F,GAASiD,IIn1BbqH,MAAU,4BAAAnI,EAAA,gBAAVC,GACAD,GJo1BQvI,KIn1BJ2Q,eAAA3J,GJs1BAA,EIn1BJ+F,WAAApN,QAAwB,SAAA5C,GJo1BhB0J,EIn1BJmK,UAAA5J,EAAAjK,GJo1BI0J,EIn1BJoK,uBAAA7J,EAAAjK,EAAAwL,EAAAC,EAAAiI,QJu1BJlL,IAAK,iBACLlG,MAAO,SAAwB2H,GAC3BA,EIn1BJ8J,uBJo1BI9J,EIn1BJ+J,YAAA,CJo1BI,KACI/J,EIn1BJgK,WAAA,KJo1BIhR,KIn1BJ+K,iBAAAkG,KAA2BjK,EAA3BxJ,MAAA,EAA6CwJ,EAA7CkK,iBACH,MAAArU,GJo1BOmK,EIn1BJgK,WAAAnU,MJu1BJ0I,IAAK,yBACLlG,MAAO,SAAgC2H,EAAM8G,GACzC,GIr1B2BvF,KAAAlI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GJu1BvB4G,EIv1ByEjH,KAAnCwI,IAAAnI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GAAkB8Q,EAAA9Q,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,EJ+1B5D,MI91BAyN,EAADoD,iBAAAC,GAAH5I,IJ41BQvI,KI31BJoR,iBAAApK,EAAA8G,GAEJvF,IJ41BQuF,EI31BJiD,YAAA,EACGjD,EAAHtQ,MJ41BQ,IACIsQ,EI31BJkD,WAAA,KJ41BIhR,KI31BJ+K,iBAAAkG,KAA2BnD,EAA3BtQ,MAAA,EAA6CsQ,EAA7CoD,iBACH,MAAArU,GJ41BOiR,EI31BJkD,WAAAnU,EJ41BIuJ,EAASiD,II31BbqH,MAAA7T,GJg2BR,GI31BJ2L,EAAe,CJ41BP,GI31BA6I,GAAQvD,EAAZoD,gBACII,EAAerH,EAAAe,iBAAAuG,SAAnB,GACIC,KACAC,GAAJ,CJg4BI,IAnCA3D,EI31BJkB,WAAArP,QAAwB,SAAA9C,GJ41BhB,GI31BDA,EAAA6U,aAAA,UAAA,GAAH,GJ41BQ,IACI7U,EI31BJ8U,cAAA,KAAA,SAAgC1K,EAAA8D,iBAAA6G,WAAhC/U,IACH,MAAAgV,IJg2BD,GI31BD/D,YAAgBzH,GAAAqI,OAAnBoD,WAAoC,CJ41B5B,GI31BD7H,EAAAe,iBAAA+G,OAAwBlV,EAA3BmV,aAGC,WJy1BOR,GI31BJxO,KAAAnG,EJ+1BA,II31BDoN,EAAAe,iBAAAiH,wBAAyCpV,EAA5CmV,aJ81BQ,MADA5L,GAASiD,II51Bb6I,KAAA,kDAAArV,GACA,IJ+1BA,II51BDA,EAAA6U,aAAA,eAAA,GAAH,GJ61BQ,IACI,GI51BAS,GAAOlL,EAAA8D,iBAAAkG,KAA2BpU,EAA3BmV,aAAA,EAAXX,EJ61BIxU,GI51BJ8U,cAAA,KAAA,cAAAQ,GJ61BIb,EI51BarH,EAAAe,iBAAAqF,IAAAiB,EAAjBa,GACH,MAAAN,GJ61BOJ,GI51BJ,MJ+1BAA,II51BJ,KAOT3D,YAAgBzH,GAAAqI,OAAnBoD,WAAoC,CJ21B5B,GI11BAM,GAAcZ,EAAA5T,SAAA6T,GAAqCH,EAAAe,QAAA,IAAA,GAAkCf,EAAAe,QAAA,IAAzF,CJ41BI,II11BJD,EAAgB,CJ21BR,GI11BAE,GAAOrI,EAAAe,iBAAAmF,OAAwBlG,EAAAe,iBAAAgF,SAAA,EAAxBsB,GAAsEE,EAAjF5T,OJ21BI4T,GI11BJ7R,QAAkB,SAAA9C,GJ21BVA,EI11BJ8U,cAAA,KAAA,cAAAW,MJ+1BRxE,EI11BJkB,WAAArP,QAAwB,SAAA9C,GJ21BhBoK,EI11BJ4J,uBAAA7J,EAAkCnK,EAAlCqS,UAAA3G,EAAAC,EAAA2I,SJ+1BR5L,IAAK,mBACLlG,MAAO,SAA0B2H,EAAM8G,GACnC,GI31BA7H,GAAS6H,EAAbyE,QACIC,EAAcvM,EAAOA,EAAPiL,gBAAgClK,EAAlDkK,eJ41BIpD,GI31BJoD,gBAAuB9K,EAAAO,MAAA8L,UAAvBD,OJ+1BGtH,OAGRwE,uBAAuB,uBAAuB5F,WAAW,WAAWC,WAAW,aAAa2I,GAAG,SAAS9V,EAAQkB,EAAOJ,GAC1H,YAEAmC,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,GAGT,IAAIsT,GAAsB/V,EAAQ,wBK7+BlCiD,QAAA+S,KAAAD,GAAAhT,QAAA,SAAA4F,GLg/Bc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YKl/BJ,ELm/BI1E,IAAK,WACH,MAAO4S,GKp/BbpN,OLy/BA,IAAIe,GAAuB1J,EAAQ,yBKx/BnCiD,QAAA+S,KAAAtM,GAAA3G,QAAA,SAAA4F,GL2/Bc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YK7/BJ,EL8/BI1E,IAAK,WACH,MAAOuG,GK//Bbf,OLogCA,IAAI+E,GAAwB1N,EAAQ,0BKngCpCiD,QAAA+S,KAAAtI,GAAA3K,QAAA,SAAA4F,GLsgCc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YKxgCJ,ELygCI1E,IAAK,WACH,MAAOuK,GK1gCb/E,OL+gCA,IAAI7E,GAAS9D,EAAQ,eK9gCrBiD,QAAA+S,KAAAlS,GAAAf,QAAA,SAAA4F,GLihCc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YKnhCJ,ELohCI1E,IAAK,WACH,MAAOW,GKrhCb6E,UL0hCGsN,wBAAwB,EAAEhJ,yBAAyB,EAAEsF,0BAA0B,EAAE2D,eAAe,KAAKC,GAAG,SAASnW,EAAQkB,EAAOJ,GACnI,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsV,8CAAgD/P,MAExD,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MM7iC/IgG,EAAAxJ,EAAA,YACAqW,EAAArW,EAAA,+BACAsW,EAAAtW,EAAA,wCNukCoDc,GAAQsV,8CAAgD,SAAUG,GAGlH,QAASH,KAGL,MAFAjP,GAAgB/D,KAAMgT,GAEf/O,EAA2BjE,MAAOgT,EAA8CnO,WAAahF,OAAOqG,eAAe8M,IAAgD9T,MAAMc,KAAMK,YAgC1L,MArCA+D,GAAU4O,EAA+CG,GAQzDjO,EAAa8N,IACTzN,IAAK,kBACLlG,MAAO,WACHW,KM/kCJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,KAAiCH,EAAAI,eAAjCC,OAAA,EAAA,IAAtB,KNglCIvT,KM/kCJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,WAAuCH,EAAAI,eAA7DC,SNglCIvT,KM/kCJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,oBAAgDH,EAAAI,eAAtEE,UNglCIxT,KM/kCJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,4BAAwDH,EAAAI,eAA9EE,UNglCIxT,KM/kCJoT,YAAApQ,KAAA,GAAAkQ,GAAAG,uBAAsB,eAA2CH,EAAAI,eAA3CG,SAAAxT,IAAA,uBAA+F,SAAAyT,GNglC7G,MMhlCkHA,GAAL,KNmlCjH1T,KMjlCJoT,YAAApQ,KAAA,GAAAkQ,GAAAG,uBAAsB,aACd,GAAAH,GAAAG,uBAAA,OAAmCH,EAAAI,eADmBC,QAEtD,GAAAL,GAAAG,uBAAA,UAAsCH,EAAAI,eAFxBK,oBAAA,EAAAC,EAAAA,IAAA,GAAA,KAKlB,SAAAC,GN6kCI,MAAOzN,GAASO,MM7kCVmN,SAAAD,EAAuB,SAAAH,GN8kCzB,MM9kC4BA,GAAH,aNolCrCnO,IAAK,oBACLlG,MAAO,WACHW,KMjlCJ6T,QNklCQE,GMjlCA3N,EAAAO,MADMqN,ONmlCNC,2BMnlCM,ENolCNC,mBMplCR,ONylCGlB,GACTC,EAAekB,iBAEdC,wCAAwC,GAAGC,8BAA8B,GAAGtK,WAAW,aAAauK,GAAG,SAAS1X,EAAQkB,EAAOJ,GAClI,YA6BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA1CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ6W,oCAAsCtR,MAE9C,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MOloC/IoU,EAAA5X,EAAA,uDACA6X,EAAA7X,EAAA,oDACA8X,EAAA9X,EAAA,oDACA+X,EAAA/X,EAAA,+BACAgY,EAAAhY,EAAA,oCP8pC0Cc,GAAQ6W,oCAAsC,SAAUM,GAG9F,QAASN,GO7pCTO,EAAA7J,EAAAxC,GP8pCI,GO9pCoEsM,GAAA1U,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAU,CPgqC9E0D,GAAgB/D,KOhqCiEuU,EPkqCjF,IAAI9N,GAAQxC,EAA2BjE,MAAOuU,EAAoC1P,WAAahF,OAAOqG,eAAeqO,IAAsC5W,KAAKqC,KOlqC/E8U,EAAA7J,EAAAxC,EAAAsM,GPqqCjF,OADAtO,GOlqCArD,KAFiF,qCAGpFqD,EPssCD,MA9CArC,GAAUmQ,EO3pCVM,GPwqCA3P,EAAaqP,IACThP,IAAK,YACLlG,MAAO,WACHW,KOrqCJgV,QAAa,GAAAP,GAAAQ,iBAAqBjV,KAAlC8U,gBPsqCI9U,KOrqCJkV,cAAqB,GAAAP,GAAAQ,kBAAsBnV,KAAtB8U,cAA0C9U,KAA1CiL,qBAAqEjL,KAArEyI,sBAAiGzI,KAAtH+U,WPsqCI/U,KOrqCJgV,QAAahV,KAAbkV,ePsqCIlV,KOrqCJgV,QAAa,GAAAJ,GAAAQ,uBAA2BpV,KAAAiL,qBAA3BF,iBAAuE/K,KAAvEyI,sBAAmGzI,KAAhH8U,mBPwqCAvP,IAAK,sBACLlG,MAAO,SAA6BwU,GAChC,MOtqCG,IAAAW,GAAAxB,8CAAPa,MP8qCAtO,IAAK,cACLlG,MAAO,SAAqBgW,GAExB,MOzqCAA,GAAAC,eAAA1X,QAAJ,GP2qCY2X,MO1qCD,EP2qCCC,QO3qCR,GAMGxV,KAAAiQ,MAAA,GAAAwF,YAA0BJ,EAAAC,eAAjC,QP6qCGf,GACTG,EAAwBgB,0BAEvBC,mDAAmD,GAAGC,mDAAmD,GAAGC,sDAAsD,EAAEC,oCAAoC,EAAEC,8BAA8B,KAAKC,GAAG,SAASpZ,EAAQkB,EAAOJ,GAC3Q,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ0X,uBAAyBnS,MAEjC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MQpuC/IgG,EAAAxJ,EAAA,YACAqZ,EAAArZ,EAAA,wBACAsZ,EAAAtZ,EAAA,8BACAqN,EAAArN,EAAA,uBR+vC6Bc,GAAQ0X,uBAAyB,SAAUe,GAGpE,QAASf,GQ/vCTrK,EAAAtC,EAAAqM,GRgwCI/Q,EAAgB/D,KQhwCgDoV,ERkwChE,IAAI3O,GAAQxC,EAA2BjE,MAAOoV,EAAuBvQ,WAAahF,OAAOqG,eAAekP,IAAyBzX,KAAKqC,KQlwCtE,uBAAA8U,GRswChE,OAFArO,GQlwCAsE,iBAAAA,ERmwCAtE,EQlwCAgC,sBAHgEA,EAInEhC,ERqzCD,MA5DArC,GAAUgR,EQ7vCVe,GRywCAjR,EAAakQ,IACT7P,IAAK,YACLlG,MAAO,SAAmB+W,EAAeC,GACrC,GQrwCA/J,GAAS8J,EAAbE,mBACIC,EAAejK,EAAAjN,MAAnB,gBACIiJ,EAAWgE,EAAAjN,MAAf,YAEImX,EAAOxW,KAAAyI,sBAAAgO,WAAXnO,GAGIoO,EAAAL,EAAmBrP,KAAA2P,SAAAC,IAA4B,WRqwC3C,UAkCJ,OA/BAP,GQtwCJrP,KAAA6P,KAAAlX,QAA4B,SAAAmX,GRuwCpBJ,EQtwCaI,EAAjBC,aAAA/T,KAAuCoD,EAAAO,MAAAqQ,SAAeF,EAAfG,QAAA,EAAiCH,EAAxEG,URywCA7Q,EAASiD,IQtwCbqH,MAAA,mBAAAgG,EAAgDL,EAAArP,KAAA6P,KAAhDjZ,OAA4E4Y,EAA5EU,cRwwCIb,EQtwCJrP,KAAAmQ,QAAAT,EAAyBE,IAAqB,SAAAQ,GRuwCtC,MQvwC+CnN,GAAAe,iBAAAqM,OAATD,KRywC1Cf,EQxwCJrP,KAAAsQ,mBAAAZ,EAAoCE,IAAqB,SAAAQ,GRywCjD,MQzwC0DnN,GAAAe,iBAAAuM,IAATH,KAErDZ,EAAJU,aR2wCQb,EQ1wCJrP,KAAAwQ,0BAAAnB,EAA2CrP,KAAAyQ,2BAAAb,IAA8C,SAAAlD,GR2wCjF,MQ3wCoFzJ,GAAAe,iBAAAsF,QAAyBrG,EAAAe,iBAAAmF,OAAAuD,EAA5B6C,MR8wCrFF,EQ5wCJrP,KAAAwQ,0BAAAnB,EAA2CrP,KAAA0Q,0BAAAd,IAA6C,SAAAlD,GR6wChF,MQ7wCmFzJ,GAAAe,iBAAAsF,QAAyBrG,EAAAe,iBAAAmF,OAAAuD,EAA5B6C,MRixCxFF,EQ9wCJrP,KAAAyQ,2BAAApB,EAA4CrP,KAAAyQ,2BAAAb,IAA8C,SAAAlD,GR+wClF,MQ/wCqFzJ,GAAAe,iBAAAsF,QAAHoD,KRixCtF2C,EQhxCJrP,KAAA0Q,0BAAArB,EAA2CrP,KAAA0Q,0BAAAd,IAA6C,SAAAlD,GRixChF,MQjxCmFzJ,GAAAe,iBAAAsF,QAAHoD,KRoxCpF0C,EQjxCJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,MRqxCGhB,GACTa,EAAM6B,QAELC,6BAA6B,GAAGC,uBAAuB,GAAGtI,uBAAuB,uBAAuB3F,WAAW,aAAakO,IAAI,SAASrb,EAAQkB,EAAOJ,GAC/J,YAiDA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA9DpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQyX,kBAAoBlS,MAE5B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MAI3IsF,EAAO,QAAS3F,GAAI4F,EAAQC,EAAUC,GACvB,OAAXF,IAAiBA,EAASG,SAAS5H,UAAU,IAAI6H,GAAOlG,OAAOmG,yBAAyBL,EAAQC,EAAU,IAAa3C,SAAT8C,EAAoB,CAClI,GAAIE,GAASpG,OAAOqG,eAAeP,EAAQ,OAAe,QAAXM,EAC3C,OAEOlG,EAAIkG,EAAQL,EAAUC,GAE9B,GAAI,SAAWE,GAClB,MAAOA,GAAK1G,KAEZ,IAAI8G,GAASJ,EAAKhG,GAAI,IAAekD,SAAXkD,EAEzB,MAAOA,GAAOxI,KAAKkI,ISl2C5BO,EAAAxJ,EAAA,YACAqN,EAAArN,EAAA,wBAIAsb,GAHAtb,EAAA,oCACAA,EAAA,yCACAA,EAAA,+BACAA,EAAA,oDACAub,EAAAvb,EAAA,uDTg4CwBc,GAAQyX,kBAAoB,SAAUiD,GAG1D,QAASjD,KAGL,MAFApR,GAAgB/D,KAAMmV,GAEflR,EAA2BjE,MAAOmV,EAAkBtQ,WAAahF,OAAOqG,eAAeiP,IAAoBjW,MAAMc,KAAMK,YAiIlI,MAtIA+D,GAAU+Q,EAAmBiD,GAQ7BlT,EAAaiQ,IACT5P,IAAK,OACLlG,MAAO,SAAc+W,EAAeC,GAChC,GSt4CA/J,IADsB8J,EAA1BiC,yBACajC,EAAbE,oBACIhO,EAAWgE,EAAAjN,MAAf,WTy4CIW,MSv4CJyI,sBAAAC,qBAAAJ,ETw4CI,ISv4CAgQ,GAAAhM,EAAgBjN,MAAA,aAAAuX,IAA8B,SAAAlD,GTw4C1C,MSx4C6CA,GAAHtQ,MTo5C9C,OAVAgT,GSz4CJmC,iBAAAC,IAAA,gBAAAF,GAEIjC,EAAArP,KAAJ6P,OT04CQR,ESz4CJrP,KAAA6P,QT04CIR,ESz4CJrP,KAAAsR,cAAAA,ET04CIjC,ESz4CJrP,KAAAyR,eAAgCrS,EAAAO,MAAA+R,KAAW,GAAAza,OAAUoY,EAAArP,KAAA2P,SAArB/Y,QAAhC,GT04CIyY,ESz4CJrP,KAAAyQ,2BAA4CrR,EAAAO,MAAA+R,KAAW,GAAAza,OAAUoY,EAAArP,KAAA2P,SAArB/Y,QAA5C,GT04CIyY,ESz4CJrP,KAAA0Q,0BAA2CtR,EAAAO,MAAA+R,KAAW,GAAAza,OAAUoY,EAAArP,KAAA2P,SAArB/Y,QAA3C,IAGG0O,EAAAjN,MAAP,mBT44CAkG,IAAK,gBACLlG,MAAO,SAAuB+W,EAAeuC,EAAYC,EAAWvC,GAOhE,IS54CA,GTs4CIpP,GS14CRjH,KAAIsM,EAAS8J,EAAbE,mBACIuC,EAAYvM,EAAAjN,MAAhB,aACI2H,EAAOoP,EAAX3J,UACIqM,KACIC,EAAR,EAAoBA,EAApBH,EAAAG,IAAmD,CT64C3C,GS54CAC,MACAC,ITw5CA,IAXAJ,ES54CJlZ,QAAkB,SAAA+T,GT64CV,IACI,GS54CAwF,GAAYjS,EAAAgE,qBAAAF,iBAAAkG,KAAgDyC,EAAhDyF,SAAA,EAAiE/S,EAAAO,MAAA8L,UAAgBzL,EAAjGkK,iBT64CI8H,GS54CJhW,KAA6BiH,EAAAe,iBAAAsF,QAA7B4I,IACH,MAAArc,GT64COoc,ES54CJjW,MT64CQoW,SS74CI1F,ET84CJ9U,MS94CR/B,OAOLoc,EAAHrb,OAAkB,CT44CV,GS34CAyb,IAAaR,aT+4Cb,MAHAI,GS34CJtZ,QAAe,SAAA9C,GT44CPwc,ES34CJR,UAAoBhc,EAAAuc,SAApBhW,MAAuCvG,EAAA+B,MAAvC2K,UAEE,GAAA4O,GAAAmB,wBAAA,oBAAND,GT64CAP,ES34CJ9V,KAAAgW,GT84CA,MS34CJF,MT84CAvT,IAAK,cACLlG,MAAO,SAAqB+W,EAAemD,EAAMC,EAAkBnD,GAC/D,GS54CArZ,GAAA0I,EAAAyP,EAAAjX,UAAA2G,WAAAhF,OAAAqG,eAAAiP,EAAAjX,WAAA,cAAA8B,MAAArC,KAAAqC,KAAAoW,EAAAmD,EAAJlD,GAEI/J,EAAS8J,EAAbE,mBACIC,EAAejK,EAAAjN,MAAnB,gBACIsX,EAAWP,EAAAiC,yBAAAtY,IAAf,WTg5CI,OAFAC,MS54CJyZ,kBAAAzc,EAAA2Z,EAAAJ,EAAAF,GAEArZ,KT+4CAuI,IAAK,oBACLlG,MAAO,SAA2BrC,EAAG2Z,EAAUJ,EAAcF,GACzD,GS74CAqD,KAAJ9F,EAAAA,GACI+F,EAAJ/F,EAAAA,EACIgG,KACAC,KAEAC,EAAU7P,EAAAe,iBAAAuG,SAAd,ET+4CIoF,GS74CJhX,QAAiB,SAAA6O,EAAAnR,GT84CT,GS74CA4Z,GAASja,EAAAoa,QAAb/Z,EACG+I,GAAAO,MAAAqQ,SAAHC,KT84CQA,ES74CJ6C,GAED7C,EAAH0C,GT84CQA,ES74CJ1C,ET84CI4C,GS74CJxc,IACK4Z,EAAA8C,OAAHJ,IT84CEE,ES74CJ7W,KAAA3F,GAED4Z,EAAHyC,GT84CQA,ES74CJzC,ET84CI2C,GS74CJvc,IACK4Z,EAAA8C,OAAHL,IT84CEE,ES74CJ5W,KAAA3F,GTg5CAgZ,ES74CJrP,KAAAyR,eAAApb,GAAmC4M,EAAAe,iBAAAqF,IAAqBgG,EAAArP,KAAAyR,eAArBpb,GAAuD4M,EAAAe,iBAAAmF,OAAA8G,EAA1FV,MTg5CAqD,ES74CJja,QAA0B,SAAAoX,GT84ClBV,ES74CJrP,KAAAyQ,2BAAAV,GAAyD9M,EAAAe,iBAAAqF,IAAqBgG,EAAArP,KAAAyQ,2BAArBV,GAA6E9M,EAAAe,iBAAAmF,OAAA,EAA2ByJ,EAAjKhc,WTg5CAic,ES74CJla,QAA2B,SAAAoX,GT84CnBV,ES74CJrP,KAAA0Q,0BAAAX,GAAwD9M,EAAAe,iBAAAqF,IAAqBgG,EAAArP,KAAA0Q,0BAArBX,GAA4E9M,EAAAe,iBAAAmF,OAAA,EAA2B0J,EAA/Jjc,cTi5CJ2H,IAAK,cACLlG,MAAO,SAAqB+W,EAAeC,GACvC,GAAIzJ,GS74CR5M,IT+4CIqW,GS/4CJrP,KAAAyR,eAAApC,EAAgCrP,KAAAyR,eAAA7B,IAAkC,SAAAlD,GTg5C1D,MSh5C6D9G,GAAA0D,QAAHoD,QTo5ClEnO,IAAK,UACLlG,MAAO,SAAiBqU,GACpB,MSj5CGzJ,GAAAe,iBAAAsF,QAAPoD,OTq5CGyB,GACT+C,EAAe8B,iBAEdC,8BAA8B,GAAGC,wCAAwC,GAAGC,mCAAmC,GAAGC,uDAAuD,GAAGC,kDAAkD,GAAG3K,uBAAuB,uBAAuB3F,WAAW,aAAauQ,IAAI,SAAS1d,EAAQkB,EAAOJ,GACtU,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ6c,uBAAyBtX,MAEjC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MUhiD/IgG,EAAAxJ,EAAA,YACAqW,EAAArW,EAAA,+BACAsW,EAAAtW,EAAA,wCV0jD6Bc,GAAQ6c,uBAAyB,SAAUpH,GAGpE,QAASoH,KAGL,MAFAxW,GAAgB/D,KAAMua,GAEftW,EAA2BjE,MAAOua,EAAuB1V,WAAahF,OAAOqG,eAAeqU,IAAyBrb,MAAMc,KAAMK;CAuB5I,MA5BA+D,GAAUmW,EAAwBpH,GAQlCjO,EAAaqV,IACThV,IAAK,kBACLlG,MAAO,WACHW,KUlkDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,KAAiCH,EAAAI,eAAjCC,OAAA,EAAA,IAAtB,KVmkDIvT,KUlkDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,WAAuCH,EAAAI,eAAvCC,OAAtB,IVmkDIvT,KUlkDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,WAAuCH,EAAAI,eAA7DE,UVmkDIxT,KUlkDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,cAA0CH,EAAAI,eAAhEE,aVqkDAjO,IAAK,oBACLlG,MAAO,WACHW,KUnkDJ6T,QVokDQE,GUnkDA3N,EAAAO,MADMqN,OVqkDN1L,SUrkDM,KVskDNC,UUtkDM,EVukDNC,aUvkDR,OV4kDG+R,GACTtH,EAAekB,iBAEdC,wCAAwC,GAAGC,8BAA8B,GAAGtK,WAAW,aAAayQ,IAAI,SAAS5d,EAAQkB,EAAOJ,GACnI,YAiCA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA9CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ+c,aAAexX,MAEvB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MWzmD/I+J,GAHAvN,EAAA,2BACAA,EAAA,qBACAA,EAAA,2BACAA,EAAA,uCAEA8d,GADA9d,EAAA,iCACAA,EAAA,+BACA+d,EAAA/d,EAAA,mBX0oDmBc,GAAQ+c,aAAe,SAAUG,GAGhD,QAASH,GWzoDT3F,EAAA7J,EAAAxC,GX0oDI1E,EAAgB/D,KW1oDoDya,EX4oDpE,IAAIhU,GAAQxC,EAA2BjE,MAAOya,EAAa5V,WAAahF,OAAOqG,eAAeuU,IAAe9c,KAAKqC,KW5oD9C,YAAA8U,GXkpDpE,OAJArO,GW5oDAoU,eAAA,EX6oDApU,EW5oDAwE,qBAAAA,EX6oDAxE,EW5oDAgC,sBAAAA,EX6oDAhC,EW5oDAgF,cAAqB,GAAAtB,GAL+CuB,cAMvEjF,EXsrDD,MArDArC,GAAUqW,EWvoDVG,GXqpDA1V,EAAauV,IACTlV,IAAK,YACLlG,MAAO,SAAmBgW,GACtB,GW/oDArO,GAAOqO,EAAX5I,UACIH,EAAS+I,EAAbyF,cACIxS,EAAWgE,EAAAjN,MAAf,YACIsJ,GAAJL,CXopDI,OWnpDJA,IXgpDQtI,KW/oDJyI,sBAAAC,qBAAAJ,GXipDAtI,KW/oDJ+a,mCAAA/T,EAAA2B,EAAwD2D,EAAAjN,MAAxD,YAAkFiN,EAAAjN,MAAlF,gBACAgW,KXkpDA9P,IAAK,qCACLlG,MAAO,SAA4C2H,EAAM2B,EAAUJ,EAAUC,GACzE,GAAIvB,GWhpDRjH,IXkpDIgH,GWlpDJ6F,sBAEGtE,GAAHC,IXmpDQxI,KWlpDJiL,qBAAA6B,gBAAA9F,EAAAuB,EAAAC,GXqpDAxB,EWlpDJ+F,WAAApN,QAAwB,SAAAqN,GXmpDhB,GWlpDAC,GAAKhG,EAAAwE,cAAAyB,SAA4BlG,EAAAmG,qBAArCH,GXmpDIhG,GWlpDJ6F,kBAAA7J,KAAAiK,GACIA,EAAJG,WXmpDQnG,EWlpDJwB,sBAAA4E,cAAAL,EAAArE,QXupDRpD,IAAK,sBACLlG,MAAO,SAA6BwU,GAChC,MWnpDG,IAAA6G,GAAAH,uBAAP1G,OXupDG4G,GACTE,EAAKK,OAEJC,qCAAqC,GAAGC,gCAAgC,GAAGC,mBAAmB,GAAGC,0BAA0B,GAAGC,0BAA0B,GAAGC,oBAAoB,GAAGC,6BAA6B,KAAKC,IAAI,SAAS5e,EAAQkB,EAAOJ,GACnP,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ+d,iCAAmCxY,MAE3C,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MYztD/IgG,EAAAxJ,EAAA,YACAqW,EAAArW,EAAA,+BACAsW,EAAAtW,EAAA,wCZmvDuCc,GAAQ+d,iCAAmC,SAAUtI,GAGxF,QAASsI,KAGL,MAFA1X,GAAgB/D,KAAMyb,GAEfxX,EAA2BjE,MAAOyb,EAAiC5W,WAAahF,OAAOqG,eAAeuV,IAAmCvc,MAAMc,KAAMK,YAgChK,MArCA+D,GAAUqX,EAAkCtI,GAQ5CjO,EAAauW,IACTlW,IAAK,kBACLlG,MAAO,WACHW,KY3vDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,KAAiCH,EAAAI,eAAjCC,OAAA,EAAA,IAAtB,KZ4vDIvT,KY3vDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,WAAuCH,EAAAI,eAA7DC,SZ4vDIvT,KY3vDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,4BAAwDH,EAAAI,eAA9EE,UZ4vDIxT,KY3vDJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,oBAAgDH,EAAAI,eAAtEE,UZ4vDIxT,KY3vDJoT,YAAApQ,KAAA,GAAAkQ,GAAAG,uBAAsB,aACd,GAAAH,GAAAG,uBAAA,OAAmCH,EAAAI,eADmBC,QAEtD,GAAAL,GAAAG,uBAAA,MAAkCH,EAAAI,eAFoBoI,QAGtD,GAAAxI,GAAAG,uBAAA,MAAkCH,EAAAI,eAHoBoI,QAAA,GAAAxI,GAAAG,uBAItD,SAAqCH,EAAAI,eAArCG,SAAAxT,IAAA,uBAAyF,SAAAyT,GZwvDzF,MYxvD8FA,IAAL,KAJ3E,EAAAE,EAAAA,IAAA,GAMlB,SAAAF,GZwvDI,MYxvDCA,GAAA,IAAWA,EAAhB,KACA,SAAAG,GZyvDI,MAAOzN,GAASO,MYzvDVmN,SAAAD,EAAuB,SAAAH,GZ0vDzB,MY1vD4BA,GAAH,aZgwDrCnO,IAAK,oBACLlG,MAAO,WACHW,KY7vDJ6T,QZ8vDQE,GY7vDA3N,EAAAO,MADMqN,OZ+vDNC,2BY/vDM,EZgwDNC,mBYhwDR,OZqwDGuH,GACTxI,EAAekB,iBAEdC,wCAAwC,GAAGC,8BAA8B,GAAGtK,WAAW,aAAa4R,IAAI,SAAS/e,EAAQkB,EAAOJ,GACnI,YAmCA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAhDpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQgY,uBAAyBzS,MAEjC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,Ma9yD/Iwb,EAAAhf,EAAA,2BACAif,EAAAjf,EAAA,yCACAkf,EAAAlf,EAAA,kCACA6X,EAAA7X,EAAA,8BACAsb,EAAAtb,EAAA,0BACA4N,EAAA5N,EAAA,4BACAwJ,EAAAxJ,EAAA,WACAA,GAAA,wBb60D6Bc,EAAQgY,uBAAyB,SAAUqG,GAGpE,QAASrG,Ga30DTZ,EAAA7J,EAAAxC,GAAwEpI,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAU,Cb80D9E0D,GAAgB/D,Ka90DiE0V,Ebg1DjF,IAAIjP,GAAQxC,EAA2BjE,MAAO0V,EAAuB7Q,WAAahF,OAAOqG,eAAewP,IAAyB/X,KAAKqC,Kah1DrD,uBAAA8U,EAAA7J,EAAAxC,Gbo1DjF,OAFAhC,Gah1DAsO,UAAA,Ebi1DAtO,Ean1DiFuV,YAIpFvV,Ebg+DD,MA3JArC,GAAUsR,Eaz0DVqG,Gbu1DA7W,EAAawQ,IACTnQ,IAAK,YACLlG,MAAO,WACHW,Kan1DJgV,QAAa,GAAA8G,GAAAG,qBAAyBjc,KAAzB8U,cAA6C9U,KAAAiL,qBAA1DF,mBbo1DI/K,Kan1DJgV,QAAa,GAAAP,GAAAQ,iBAAqBjV,KAAlC8U,gBbo1DI9U,Kan1DJkV,cAAqB,GAAAgD,GAAA8B,cAAkBha,KAAlB8U,cAAsC9U,KAAtCiL,qBAAiEjL,KAAjEyI,sBAA6FzI,KAAlH+U,Wbo1DI/U,Kan1DJgV,QAAahV,KAAbkV,kBbs1DA3P,IAAK,sBACLlG,MAAO,SAA6BwU,GAChC,Map1DG,IAAAgI,GAAAJ,iCAAP5H,Mbu1DAtO,IAAK,sBACLlG,MAAO,WACH,OACI6N,Sar1DM,SAAAlG,Gbs1DF,Mat1DE,KAAUA,EAAA+F,WAAAnP,Yb21DxB2H,IAAK,eACLlG,MAAO,SAAsB0V,GACzB/U,Kax1DJ+U,UAAAA,Eby1DI/U,Kax1DJkV,cAAA0D,UAAA7D,Kb21DAxP,IAAK,qBACLlG,MAAO,SAA4BgX,EAAWyE,GAC1C,Ga11DqCoB,KAAA7b,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GACrC3B,Ib41DA,Ia31DJwd,EAAe,Cb41DP,Ga31DAC,IAAU,gBAAd,Sb41DI9F,Ga31DJiC,cAAA3Y,QAAgC,SAAA5C,Gb41DxB,Ma51D2Bof,GAAAnZ,KAAHjG,Kb81D5Bof,Ea71DJnZ,KAAA,Ub81DItE,Ea71DJsE,KAAAmZ,Gbg2DA,Ga71DAC,KAAmBtB,EAAAjH,OAAvBuI,cbk3DI,Oaj3DJA,Ib81DQpc,Ka71DJoc,eAAA/F,Gbg2DAA,Ea71DJQ,KAAAlX,QAAuB,SAAAmX,Gb81Df,Ga71DAtI,GAAS6H,EAAAM,SAAmBG,EAAhCC,aACIsF,GAAYvF,EAAAC,YAAD,EAAoBvM,EAAAqE,OAAAyN,eAAA9N,EAA8BsM,EAAAjH,OAAjEI,2Bb81DI6C,Ga71DJ+B,UAAAlZ,QAAsB,SAAA+T,Gb81Dd,Ma91DkB2I,GAAArZ,KAAJ0Q,Kbg2DlB2I,Ea/1DJrZ,KAAc8T,EAAdG,Qbg2DIvY,Ea/1DJsE,KAAAqZ,GAEGvF,EAAHyF,abi2DQzF,Eah2DJ+B,UAAgB/B,EAAhByF,iBACOzF,GAAPyF,cAIR7d,Kbm2DA6G,IAAK,iBACLlG,MAAO,SAAwBgX,GAC3B,Gaj2DAmG,GAAAnG,EAAeiC,cAAA1B,IAA4B,Wbk2DvC,Mal2D2C,IAAJ6F,Mbq2D3CpG,Gan2DJQ,KAAAlX,QAAuB,SAAAmX,Gbo2DfA,Ean2DJyF,WAAiBzF,EAAA+B,UADS1a,Qbq2DtB2Y,Ean2DJ+B,UAAAlZ,QAAsB,SAAA+T,EAAArW,Gbo2Ddmf,Ean2DJnf,GAAAgT,IAAAqD,Mb+2DJ,KARA,Gan2DAgJ,GAAAF,EAAiB5F,IAAiB,SAAA3Z,Gbo2D9B,Map2DmCA,GAAL0f,OAClCC,EAAJ,GACIC,EAAJ,EACIC,EAAAzG,EAA2BiC,cAAA1B,IAA4B,SAAAlD,EAAArW,Gbs2DnD,Mat2DmDA,KACrDwf,GAAAD,GAA2BE,EAAjClf,QAAiE,Cbw2DzD4e,EAAeM,Eav2DJlG,IAA6B,Wbw2DpC,Max2DwC,IAAJ6F,Ob02DxCpG,Eaz2DJQ,KAAAlX,QAAuB,SAAAmX,Gb02DfgG,Eaz2DJnd,QAAiC,SAAAod,EAAAC,Gb22DzB,Gaz2DA9c,GAAM4W,EAAAyF,WAAVQ,Eb02DI7c,Gaz2DEkG,EAAAO,MAAAsW,MAAA/c,EAAN2c,Gb02DIL,Eaz2DJQ,GAAA3M,IAAAnQ,Gb22DI4W,Eaz2DJ+B,UAAAkE,GAAA7c,Kb62DJ,Iaz2DAgd,Kb02DAV,Gaz2DJ7c,QAAqB,SAAAwd,EAAAH,Gb02Db,Gaz2DAI,GAAkBV,EAAeI,EAArCE,GACGI,IAAiBD,EAApBR,Mb22DQO,Ea12DJla,KAAAga,KAGLE,EAAHtf,Sb42DQsf,Ea32DJG,Ub42DIH,Ea32DJvd,QAAwB,SAAAqd,Gb42DhBF,Ea32DJQ,OAAAN,EAAA,MAIXH,Qbm3DDtX,IAAK,cACLlG,MAAO,SAAqBgW,GAExB,Ma92DAA,GAAAC,eAAA1X,QAAJ,Gbg3DY2X,Ma/2DD,Ebg3DCC,Qah3DR,GAMGxV,KAAAiQ,MAAA,GAAAwF,YAA0BJ,EAAAC,eAAjC,Qbk3DGI,GACTkG,EAAW2B,aAEVC,2BAA2B,GAAGnC,0BAA0B,GAAGoC,wCAAwC,GAAGC,yBAAyB,GAAGC,6BAA6B,GAAGC,iCAAiC,GAAGlO,uBAAuB,uBAAuB3F,WAAW,aAAa8T,IAAI,SAASjhB,EAAQkB,EAAOJ,GAC3S,YA+BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA5CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsc,cAAgB/W,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,McngE/IgG,EAAAxJ,EAAA,YACAqN,EAAArN,EAAA,wBACAkhB,EAAAlhB,EAAA,oCACAuN,EAAAvN,EAAA,yCAEAub,GADAvb,EAAA,+BACAA,EAAA,wDdgiEoBc,GAAQsc,cAAgB,SAAU+D,GAGlD,QAAS/D,Gc/hETlF,EAAA7J,EAAAxC,EAAAsM,GdgiEIhR,EAAgB/D,KchiE+Dga,EdkiE/E,IAAIvT,GAAQxC,EAA2BjE,MAAOga,EAAcnV,WAAahF,OAAOqG,eAAe8T,IAAgBrc,KAAKqC,KcliErC,iBAAA8U,EAAAC,GduiE/E,OAHAtO,GcliEAwE,qBAAAA,EdmiEAxE,EcliEAgC,sBAAAA,EdmiEAhC,EcliEAgF,cAAqB,GAAAtB,GAJ0DuB,cAKlFjF,Ed0pED,MAlIArC,GAAU4V,Ec7hEV+D,Gd0iEA7Y,EAAa8U,IACTzU,IAAK,OACLlG,MAAO,SAAc+W,EAAeC,GAChC,GcpiEA/J,IADsB8J,EAA1BiC,yBACajC,EAAbE,oBACIhO,EAAWgE,EAAAjN,MAAf,WduiEIW,McriEJyI,sBAAAC,qBAAAJ,EdsiEI,IcriEAwQ,GAAiBzC,EAAArP,KAArB8R,eACIR,EAAAhM,EAAgBjN,MAAA,aAAAuX,IAA8B,SAAAlD,GdsiE1C,MctiE6CA,GAAHtQ,Md+iE9C,OAPAgT,GcviEJmC,iBAAAC,IAAA,gBAAAF,GAGKjC,EAAArP,KAAL6P,OduiEQR,EctiEJrP,KAAA6P,QduiEIR,EctiEJrP,KAAAsR,cAAAA,GAGGQ,EAAPlb,UdyiEA2H,IAAK,gBACLlG,MAAO,SAAuB+W,EAAeuC,EAAYC,EAAWvC,GAChE,GctiEAyC,GAAiBzC,EAAArP,KAArB8R,cduiEI,OctiEGA,GAAA3a,MAAAwa,EAAiCA,EAAxCC,MdyiEArT,IAAK,cACLlG,MAAO,SAAqB+W,EAAemD,GACvC,GAAItS,GctiERjH,KAAIsM,EAAS8J,EAAbE,mBACIhO,EAAWgE,EAAAjN,MAAf,YACI6U,EAAoB5H,EAAAjN,MAAxB,qBACI2H,EAAOoP,EAAX3J,UACIuR,EAAWhX,EAAA+F,WAAf,GACIuL,EAAgBlC,EAAAmC,iBAAAxY,IAApB,iBACI4W,EAAWP,EAAAiC,yBAAAtY,IAAf,Wd0iEIC,McxiEJiL,qBAAAgT,MAAAjX,GdyiEIhH,KcxiEJiL,qBAAA0F,eAAA3J,GdyiEIsR,EcxiEJ3Y,QAAsB,SAAAue,EAAA7gB,GdyiEd2J,EcxiEJkK,gBAAAgN,GAAqC3E,EAArClc,Kd2iEA2C,KcxiEJiL,qBAAA4F,uBAAA7J,EAAAgX,EdyiEI,IcxiEA/Q,GAAKjN,KAAAyL,cAAAyB,SAA4BlG,EAAAmG,qBAArC6Q,IAEIG,EAAQlR,EAAZG,Sd0iEI,KcxiED+Q,GAAHjK,EAA+B,CdyiEvB,GcxiEAmF,IdyiEIR,aAKJ,MAHAP,GcxiEJ3Y,QAAsB,SAAAue,EAAA7gB,GdyiEdgc,EcxiEJR,UAAAqF,GAAoC3E,EAApClc,KAEE,GAAA8a,GAAAmB,wBAAA,eAAND,Gd2iEA,GcxiEAjC,KdmjEA,OATAT,GcxiEJhX,QAAiB,SAAA6O,GdyiET,GcxiEAyI,GAAJ,KACAkH,KdyiEQlX,EcxiEJwB,sBAAA4E,cAAA2Q,GAAA,EAAAxP,GdyiEIyI,EcxiEK+G,EAAArM,cAAArJ,EAAT,Wd0iEA8O,EcxiEJpU,KAAAiU,Md4iEIN,ScziEDA,Ed0iECkC,Uc1iEDU,Ed2iECnC,Qc3iERA,Md+iEA7R,IAAK,aACLlG,MAAO,SAAoB+W,EAAetT,EAAOuT,GAC7C,GAAIzJ,GcziER5M,KAAIsM,EAAS8J,EAAbE,kBACgChK,GAAAjN,MAAhC,4Bd6iEIyD,Gc3iEJnD,QAAc,SAAA4Z,GACVA,Gd8iEIA,Ec3iEJ5C,SAAAhX,QAAsB,SAAA6O,EAAAnR,Gd4iEd,Gc3iEAwb,GAAAU,EAAYV,UAAAjC,IAAmB,SAAAlD,Gd4iE3B,Mc5iEgC9G,GAAA0D,QAALoD,KAE/BuD,EAASsC,EAAAnC,QAAb/Z,GACIyZ,Gd8iEIC,Yc9iEE1Z,Ed+iEFwb,Uc/iEEA,EdgjEF5B,Oc7iEI7Q,EAAAO,MAAAqQ,SAAAC,GAAAA,EAAkCrK,EAAA0D,QAH9C2G,GdkjEIZ,Gc7iEJrP,KAAA6P,KAAA7T,KAAA8T,UdkjERvR,IAAK,cACLlG,MAAO,SAAqB+W,EAAeC,Sc7iEpCA,GAAArP,KAAP8R,kBdijEAvT,IAAK,UACLlG,MAAO,SAAiBqU,GACpB,Mc9iEGzJ,GAAAe,iBAAAsF,QAAPoD,OdkjEGsG,GACT8D,EAAWM,aAEVnE,8BAA8B,GAAGC,wCAAwC,GAAGC,mCAAmC,GAAGC,uDAAuD,GAAG1K,uBAAuB,uBAAuB3F,WAAW,aAAasU,IAAI,SAASzhB,EAAQkB,EAAOJ,GACjR,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQuX,iBAAmBhS,MAE3B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,Me3rE/I6V,EAAArZ,EAAA,wBACAsZ,EAAAtZ,EAAA,8BACA0hB,EAAA1hB,EAAA,0CfqtEuBc,GAAQuX,iBAAmB,SAAUkB,GAGxD,QAASlB,GertETH,GfwtEI,MAFA/Q,GAAgB/D,KettEOiV,GfwtEhBhR,EAA2BjE,MAAOiV,EAAiBpQ,WAAahF,OAAOqG,eAAe+O,IAAmBtX,KAAKqC,KextE9F,gBAAA8U,IfgvE3B,MA7BA1Q,GAAU6Q,EentEVkB,Gf2tEAjR,EAAa+P,IACT1P,IAAK,YACLlG,MAAO,SAAmB+W,EAAeC,GACrC,GeztEArP,GAAOoP,EAAX3J,UACIuR,EAAWhX,EAAA+F,WAAf,GACIwR,EAAoB,GAAAD,GAAAE,kBAAxBR,GAEIrH,EAAW4H,EAAf5H,QfmuEI,OATAP,GeztEJiC,yBAAAG,IAAA,WAAA7B,GAEIN,EAAJrP,Of0tEQqP,EeztEJrP,Sf4tEAqP,EeztEJrP,KAAA2P,SAAAA,Ef2tEIP,EeztEJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,Mf6tEGnB,GACTgB,EAAM6B,QAEL2G,0CAA0C,GAAG1G,6BAA6B,GAAGC,uBAAuB,KAAK0G,IAAI,SAAS9hB,EAAQkB,EAAOJ,GACxI,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQue,qBAAuBhZ,MAE/B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MgBxwE/IgG,EAAAxJ,EAAA,YACAqZ,EAAArZ,EAAA,wBACAsZ,EAAAtZ,EAAA,8BACA+hB,EAAA/hB,EAAA,iChBmyE2Bc,GAAQue,qBAAuB,SAAU9F,GAGhE,QAAS8F,GgBnyETnH,EAAA/J,GhBoyEIhH,EAAgB/D,KgBpyEyBic,EhBsyEzC,IAAIxV,GAAQxC,EAA2BjE,MAAOic,EAAqBpX,WAAahF,OAAOqG,eAAe+V,IAAuBte,KAAKqC,KgBtyEzF,oBAAA8U,GhByyEzC,OADArO,GgBtyEAsE,iBAFyCA,EAG5CtE,EhB4zED,MA9BArC,GAAU6X,EgBjyEV9F,GhB4yEAjR,EAAa+W,IACT1W,IAAK,YACLlG,MAAO,SAAmB+W,EAAeC,GACrC,GgBzyEA/J,GAAS8J,EAAbE,mBACIuC,EAAYvM,EAAAjN,MAAhB,aAEIyZ,IhBkzEA,OARAD,GgBzyEJlZ,QAAkB,SAAA+T,GhB0yEVoF,EgBzyEJ9V,KAAoB2b,EAAA/O,kBAAAgP,SAA2BlL,EAA3B7D,IAAkC6D,EAAlC5D,IAAyC4D,EAA7D9V,WhB2yEAkb,EgBzyEa1S,EAAAO,MAAAkY,mBAAjB/F,GhB0yEIzC,EgBzyEJrP,MhB0yEQ8R,egB1yERA,GhB4yEI1C,EgBzyEJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,MhB6yEG6F,GACThG,EAAM6B,QAELgH,iCAAiC,EAAE/G,6BAA6B,GAAGC,uBAAuB,GAAGjO,WAAW,aAAagV,IAAI,SAASniB,EAAQkB,EAAOJ,GACpJ,YA+BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA5CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsc,cAAgB/W,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MiBx1E/IgG,EAAAxJ,EAAA,YACAqN,EAAArN,EAAA,wBAEAkhB,EAAAlhB,EAAA,oCACAuN,EAAAvN,EAAA,yCACA4N,EAAA5N,EAAA,+BACA0hB,EAAA1hB,EAAA,0CjBo3EoBc,GAAQsc,cAAgB,SAAU+D,GAGlD,QAAS/D,GiBn3ETlF,EAAA7J,EAAAxC,GjBo3EI1E,EAAgB/D,KiBp3EoDga,EjBs3EpE,IAAIvT,GAAQxC,EAA2BjE,MAAOga,EAAcnV,WAAahF,OAAOqG,eAAe8T,IAAgBrc,KAAKqC,KiBt3EhD,iBAAA8U,EAAA,GjB23EpE,OAHArO,GiBt3EAwE,qBAAAA,EjBu3EAxE,EiBt3EAgC,sBAAAA,EjBu3EAhC,EiBt3EAgF,cAAqB,GAAAtB,GAJ+CuB,cAKvEjF,EjBqgFD,MAzJArC,GAAU4V,EiBj3EV+D,GjB83EA7Y,EAAa8U,IACTzU,IAAK,OACLlG,MAAO,SAAc+W,EAAeC,GAChC,GAAIpP,GiBz3ERjH,KAAIgf,EAAsB5I,EAA1BiC,yBACI/L,EAAS8J,EAAbE,mBACIhO,EAAWgE,EAAAjN,MAAf,WjB63EIW,MiB33EJyI,sBAAAC,qBAAAJ,EjB43EI,IiB33EAwQ,GAAiBkG,EAAAjf,IAArB,kBACIuY,EAAAhM,EAAgBjN,MAAA,aAAAuX,IAA8B,SAAAlD,GjB43E1C,MiB53E6CA,GAAHtQ,MjB83E9CgT,GiB73EJmC,iBAAAC,IAAA,gBAAAF,EjB83EI,IiB73EAtR,GAAOoP,EAAX3J,SjB83EIzM,MiB73EJiL,qBAAAgT,MAAAjX,GjB83EIhH,KiB73EJiL,qBAAA0F,eAAA3J,EjB+3EI,IiB73EAiY,KjBk4EA,IAJA7Y,EAASO,MiB73EbuY,OAAalY,EAAbkK,gBAAmC,SAAAwC,EAAAyL,GjB83E3BF,EiB73EJE,GAAiBlY,EAAAqJ,QAAjBoD,MAGA2C,EAAJrP,KAAmB,CjB83EX,GiB73EAmV,IAAJ,SjB83EI7D,GiB73EJ3Y,QAAsB,SAAA5C,GjB83Ed,MiB93EiBof,GAAAnZ,KAAHjG,KjBg4ElBof,EiB/3EJnZ,KAAA,UjBg4EIqT,EiB/3EJrP,MjBg4EQmV,QiBh4ESA,EjBi4ETtF,QACAyB,ciBl4ESA,EjBm4ET2G,ciBn4ESA,EjBo4ETtI,SiB/3EMqI,EAAAjf,IALd,ajBw4EA,MiB/3EG+Y,GAAPlb,UjBk4EA2H,IAAK,gBACLlG,MAAO,SAAuB+W,EAAeuC,EAAYC,GACrD,GiB/3EAE,GAAiB1C,EAAAiC,yBAAAtY,IAArB,iBjBg4EI,OiB/3EG+Y,GAAA3a,MAAAwa,EAAiCA,EAAxCC,MjBk4EArT,IAAK,cACLlG,MAAO,SAAqB+W,EAAemD,EAAM6F,GAC7C,GAAIxS,GiBh4ER5M,KAAIsM,EAAS8J,EAAbE,mBACIhO,EAAWgE,EAAAjN,MAAf,YACI2H,EAAOoP,EAAX3J,UACIuR,EAAWhX,EAAA+F,WAAf,GACIuL,EAAgBlC,EAAAmC,iBAAAxY,IAApB,iBACIme,EAAe5F,EAAnB8G,GAIIC,IjBi6EA,OA/BA9F,GiBh4EJ5Z,QAAa,SAAA2f,GjBk4EL1S,EiBh4EJ3B,qBAAAgT,MAAAjX,GjBi4EI4F,EiBh4EJ3B,qBAAA0F,eAAA3J,GjBk4EIA,EiBh4EJkK,gBAAAgN,GAAAoB,EjBk4EI1S,EiBh4EJ3B,qBAAA4F,uBAAA7J,EAAAgX,EjBi4EI,IiBh4EA/Q,GAAKL,EAAAnB,cAAAyB,SAA4BlG,EAAAmG,qBAArC6Q,IACIG,EAAQlR,EAAZG,SjBk4EI,KiBh4EJ+Q,EjBi4EQ,MiBh4EJ,KjBm4EAvR,GiBh4EJnE,sBAAA4E,cAAA2Q,GAAA,EjBi4EI,IiBh4EAO,GAAoB,GAAAD,GAAAE,kBAAAR,EAAxB1V,GACIqO,EAAW4H,EAAf5H,SAEIM,EAAS+G,EAAArM,cAAArJ,EAAb,UAGItL,GjBg4EI2Z,SiBh4EAA,EjBi4EAuH,aiBj4EAA,EjBk4EAnB,ciBl4EAqC,EjBm4EAE,ciBn4EAA,EjBo4EArI,OiBp4ERA,EjBs4EIoI,GiB/3EJrc,KAAAhG,KAGJqiB,KjBk4EA9Z,IAAK,aACLlG,MAAO,SAAoB+W,EAAetT,EAAOuT,GAC7C,GAAI9I,GiB/3ERvN,KAEIuf,GAFSnJ,EAAbE,mBAEkBF,EAAAiC,yBAAAtY,IAAlB,gBACI4W,EAAWP,EAAAiC,yBAAAtY,IAAf,WjBm4EI+C,GiBj4EJnD,QAAc,SAAA6f,GACVA,GjBq4EIA,EiBj4EJ7f,QAAqB,SAAA4Z,GjBk4EbA,EiBj4EJ5C,SAAAhX,QAAsB,SAAA6O,GjBm4Ed,GiBj4EA6N,IAAY7R,EAAAqE,OAAAyN,eAAhB9N,GjBk4EI6H,GiBj4EJrP,KAAAsR,cAAA3Y,QAAqC,SAAA+T,GjBk4E7B,GiBj4EArU,GAAJ,SACGqU,IAAK6F,EAAR2E,ajBk4EQ7e,EiBj4EIkO,EAAA+C,QAAaiJ,EAArB+F,eACKjJ,EAAArP,KAAAiY,cAAAlW,eAAH2K,KjBk4EErU,EiBj4EIgX,EAAArP,KAAAiY,cAARvL,IjBm4EA2I,EiBj4EJrZ,KAAA3D,IjBm4EA,IiBj4EA4X,GAASsC,EAAbtC,MjBk4EIoF,GiBj4EJrZ,KAAcoD,EAAAO,MAAAqQ,SAAAC,GAAAA,EAAgC1J,EAAA+C,QAA9C2G,GjBk4EI,IiBj4EAH,IjBk4EI2I,MiBl4EEpD,EjBm4EFtF,YiBj4ESJ,EAAA+I,QAAiBH,EAAY/Q,EAF9CjJ,MjBq4EI8Q,GiBj4EJrP,KAAA6P,KAAA7T,KAAA8T,YjBu4EZvR,IAAK,UACLlG,MAAO,SAAiBqU,GACpB,MiB/3EGzJ,GAAAe,iBAAAsF,QAAPoD,OjBm4EGsG,GACT8D,EAAWM,aAEVK,0CAA0C,GAAGxE,8BAA8B,GAAGC,wCAAwC,GAAGC,mCAAmC,GAAGzK,uBAAuB,uBAAuB3F,WAAW,aAAa4V,IAAI,SAAS/iB,EAAQkB,EAAOJ,GACpQ,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQuX,iBAAmBhS,MAE3B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MkBviF/I6V,EAAArZ,EAAA,wBACAsZ,EAAAtZ,EAAA,8BACA0hB,EAAA1hB,EAAA,2CACAwJ,EAAAxJ,EAAA,WlBkkFuBc,GAAQuX,iBAAmB,SAAUkB,GAGxD,QAASlB,GkBlkFTH,GlBqkFI,MAFA/Q,GAAgB/D,KkBnkFOiV,GlBqkFhBhR,EAA2BjE,MAAOiV,EAAiBpQ,WAAahF,OAAOqG,eAAe+O,IAAmBtX,KAAKqC,KkBrkF9F,gBAAA8U,IlBwlF3B,MAxBA1Q,GAAU6Q,EkBhkFVkB,GlBwkFAjR,EAAa+P,IACT1P,IAAK,YACLlG,MAAO,SAAmB+W,EAAe1X,GACrC,GkBtkFAsI,GAAOoP,EAAX3J,UACIH,EAAS8J,EAAbE,mBAEI0H,GADW1R,EAAAjN,MAAf,YACe2H,EAAA+F,WAAf,IACIwR,EAAoB,GAAAD,GAAAE,kBAAxBR,ElB2kFI,OAHA5H,GkBtkFJiC,yBAAAG,IAAA,WAAuD+F,EAAvD5H,UlBukFIP,EkBtkFJiC,yBAAAG,IAAA,cAA0DpS,EAAAO,MAAAiZ,iBAAuBrB,EAAvB5H,SAAA,KAA1D,QlBukFIP,EkBtkFJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,MlB0kFGnB,GACTgB,EAAM6B,QAEL2G,0CAA0C,GAAG1G,6BAA6B,GAAGC,uBAAuB,GAAGjO,WAAW,aAAa8V,IAAI,SAASjjB,EAAQkB,EAAOJ,GAC9J,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQue,qBAAuBhZ,MAE/B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MmBhnF/I6V,GADArZ,EAAA,YACAA,EAAA,yBACAsZ,EAAAtZ,EAAA,8BACAqN,EAAArN,EAAA,uBnB4oF2Bc,GAAQue,qBAAuB,SAAU9F,GAGhE,QAAS8F,GmB5oFTnH,GnB+oFI,MAFA/Q,GAAgB/D,KmB7oFOic,GnB+oFhBhY,EAA2BjE,MAAOic,EAAqBpX,WAAahF,OAAOqG,eAAe+V,IAAuBte,KAAKqC,KmB/oFtG,oBAAA8U,InBsrF3B,MA5CA1Q,GAAU6X,EmB1oFV9F,GnBkpFAjR,EAAa+W,IACT1W,IAAK,YACLlG,MAAO,SAAmB+W,GACtB,GAAInP,GmBhpFRjH,KAAIsM,EAAS8J,EAAbE,mBACIuC,EAAYvM,EAAAjN,MAAhB,aAEIyZ,InB0pFA,OAPAD,GmBlpFJlZ,QAAkB,SAAA+T,GnBmpFVoF,EmBlpFJ9V,KAAoBiE,EAAA2X,SAAclL,EAAd7D,IAAqB6D,EAArB5D,IAA4B4D,EAAhD9V,WnBqpFAwY,EmBlpFJiC,yBAAAG,IAAA,iBAAAM,GnBopFI1C,EmBlpFJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,KnBqpFA7Q,IAAK,WACLlG,MAAO,SAAkBwQ,EAAKC,EAAKlS,GAM/B,ImBnpFC,GALDmS,GAASD,EAAbD,EACIK,EAAOH,GAAUnS,EAArB,GACIc,GAAJmR,GACIO,EAAJP,EAESxS,EAAT,EAAgBA,EAAIO,EAApB,EAAAP,InBopFQ+S,GmBnpFJF,EnBqpFIxR,EmBnpFJsE,KAAYiH,EAAAe,iBAAAsF,QAAyBrG,EAAAe,iBAAAiS,MAAA7M,EAArC,KnBspFA,OADA1R,GmBnpFJsE,KAAA8M,GACApR,MnBupFGud,GACThG,EAAM6B,QAELC,6BAA6B,GAAGC,uBAAuB,GAAGtI,uBAAuB,uBAAuB3F,WAAW,aAAa+V,IAAI,SAASljB,EAAQkB,EAAOJ,GAC/J,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQqiB,4BAA8B9c,MAEtC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MoB/sF/IgG,EAAAxJ,EAAA,YACAqW,EAAArW,EAAA,+BACAsW,EAAAtW,EAAA,wCpByuFkCc,GAAQqiB,4BAA8B,SAAU5M,GAG9E,QAAS4M,KAGL,MAFAhc,GAAgB/D,KAAM+f,GAEf9b,EAA2BjE,MAAO+f,EAA4Blb,WAAahF,OAAOqG,eAAe6Z,IAA8B7gB,MAAMc,KAAMK,YA4BtJ,MAjCA+D,GAAU2b,EAA6B5M,GAQvCjO,EAAa6a,IACTxa,IAAK,kBACLlG,MAAO,WACHW,KoBjvFJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,KAAiCH,EAAAI,eAAjCC,OAAA,EAAA,IAAtB,KpBkvFIvT,KoBjvFJoT,YAAApQ,KAAsB,GAAAkQ,GAAAG,uBAAA,WAAuCH,EAAAI,eAA7DC,SpBkvFIvT,KoBjvFJoT,YAAApQ,KAAA,GAAAkQ,GAAAG,uBAAsB,aACd,GAAAH,GAAAG,uBAAA,OAAmCH,EAAAI,eADmBC,QAEtD,GAAAL,GAAAG,uBAAA,MAAkCH,EAAAI,eAFoBoI,QAGtD,GAAAxI,GAAAG,uBAAA,MAAkCH,EAAAI,eAHoBoI,QAAA,GAAAxI,GAAAG,uBAItD,SAAqCH,EAAAI,eAArCG,SAAAxT,IAAA,uBAAyF,SAAAyT,GpB8uFzF,MoB9uF8FA,IAAL,KAJ3E,EAAAE,EAAAA,IAAA,GAMlB,SAAAF,GpB8uFI,MoB9uFCA,GAAA,KAAYA,EAAjB,KACA,SAAAG,GpB+uFI,MAAOzN,GAASO,MoB/uFVmN,SAAAD,EAAuB,SAAAH,GpBgvFzB,MoBhvF4BA,GAAH,apBsvFrCnO,IAAK,oBACLlG,MAAO,WACHW,KoBnvFJ6T,QpBovFQE,GoBnvFA3N,EAAAO,MADRqN,YpByvFG+L,GACT9M,EAAekB,iBAEdC,wCAAwC,GAAGC,8BAA8B,GAAGtK,WAAW,aAAaiW,IAAI,SAASpjB,EAAQkB,EAAOJ,GACnI,YA6BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA1CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQuiB,kBAAoBhd,MAE5B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MqBhyF/Iwb,EAAAhf,EAAA,2BACAkf,EAAAlf,EAAA,kCACA6X,EAAA7X,EAAA,8BACAsb,EAAAtb,EAAA,0BACAsjB,EAAAtjB,EAAA,mCrB4zFwBc,GAAQuiB,kBAAoB,SAAUlE,GAG1D,QAASkE,GqB3zFTnL,EAAA7J,EAAAxC,GrB4zFI1E,EAAgB/D,KqB5zFoDigB,ErB8zFpE,IAAIxZ,GAAQxC,EAA2BjE,MAAOigB,EAAkBpb,WAAahF,OAAOqG,eAAe+Z,IAAoBtiB,KAAKqC,KqB9zFxD,kBAAA8U,GrBm0FpE,OAHArO,GqB9zFAuO,QAAa,GAAA8G,GAAAG,qBAAbnH,IrB+zFArO,EqB9zFAuO,QAAa,GAAAP,GAAAQ,iBAAbH,IrB+zFArO,EqB9zFAuO,QAAa,GAAAkD,GAAA8B,cAAAlF,EAAA7J,EAJuDxC,IAKvEhC,ErBm2FD,MA/CArC,GAAU6b,EqBzzFVlE,GrBs0FA7W,EAAa+a,IACT1a,IAAK,sBACLlG,MAAO,SAA6BwU,GAChC,MqBj0FG,IAAAqM,GAAAH,4BAAPlM,MrBo0FAtO,IAAK,sBACLlG,MAAO,WACH,OACI6N,SqBl0FM,SAAAlG,GrBm0FF,MqBn0FE,KAAUA,EAAA+F,WAAAnP,YrB60FxB2H,IAAK,cACLlG,MAAO,SAAqBgW,GAExB,MqBv0FAA,GAAAC,eAAA1X,QAAJ,GrBy0FY2X,MqBx0FD,ErBy0FCC,QqBz0FR,GAMGxV,KAAAiQ,MAAA,GAAAwF,YAA0BJ,EAAAC,eAAjC,QrB20FG2K,GACTrE,EAAW2B,aAEVlC,0BAA0B,GAAGqC,yBAAyB,GAAGC,6BAA6B,GAAGC,iCAAiC,GAAGuC,mCAAmC,KAAKC,IAAI,SAASxjB,EAAQkB,EAAOJ,GACpM,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ0gB,UAAYnb,MAEpB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MsBn4F/I8V,EAAAtZ,EAAA,iBACAwJ,EAAAxJ,EAAA,YACAqZ,EAAArZ,EAAA,WACAyjB,EAAAzjB,EAAA,2CtB+5FIwhB,EAAY1gB,EAAQ0gB,UAAY,SAAUjI,GAG1C,QAASiI,GsBz5FThb,EAAA0R,EAAA8D,GtB05FI7U,EAAgB/D,KsB15FwBoe,EtB45FxC,IAAI3X,GAAQxC,EAA2BjE,MAAOoe,EAAUvZ,WAAahF,OAAOqG,eAAekY,IAAYzgB,KAAKqC,KsB55FpEoD,EAAA0R,GtB+5FxC,OADArO,GsB55FAmS,UAFwCA,EAG3CnS,EtBolGD,MAhMArC,GAAUga,EsBv5FVjI,GtBs6FAjR,EAAakZ,IACT7Y,IAAK,OACLlG,MAAO,SAAc+W,EAAeC,GAChC,KsBh6FE,qDAAuDrW,KAA7DoD,QtBw6FAmC,IAAK,gBACLlG,MAAO,SAAuB+W,EAAeuC,EAAYC,EAAWvC,GAChE,KsBn6FE,8DAAgErW,KAAtEoD,QtB46FAmC,IAAK,cACLlG,MAAO,SAAqB+W,EAAemD,EAAMC,EAAkBnD,GAC/D,KsBt6FE,4DAA8DrW,KAApEoD,QtB86FAmC,IAAK,aACLlG,MAAO,SAAoB+W,EAAetT,EAAOuT,OAOjD9Q,IAAK,cACLlG,MAAO,SAAqB+W,EAAeC,OAE3C9Q,IAAK,oBACLlG,MAAO,SAA2B+W,EAAexT,GAC7CwT,EsB16FJmC,iBAAAC,IAAmC4F,EAAnCkC,sBAAA1d,MtB66FA2C,IAAK,oBACLlG,MAAO,SAA2B+W,GAC9B,MsB36FGA,GAAAmC,iBAAAxY,IAAmCqe,EAA1CkC;ItB86FA/a,IAAK,sBACLlG,MAAO,SAA6B+W,EAAexT,GAC/CwT,EsB56FJmC,iBAAAC,IAAmC4F,EAAnCmC,wBAAA3d,MtB+6FA2C,IAAK,sBACLlG,MAAO,SAA6B+W,GAChC,MsB76FGA,GAAAmC,iBAAAxY,IAAmCqe,EAAnCmC,0BAAP,KtBg7FAhb,IAAK,YACLlG,MAAO,SAAmB+W,EAAeC,GACrC,GAAIpP,GsB76FRjH,ItB+6FI,OAAO1B,SsB/6FJC,UAAAY,KAAuB,WtBg7FtB,MsB/6FG8H,GAAAuZ,KAAApK,EAAPC,KtB86FO/X,SsB76FF,SAAAzB,GtBi7FD,KADAuJ,GAASiD,IsB/6FbzK,MAAU,oCAAsCqI,EAAhD7D,KAAAvG,GACAA,IAJGsC,KAKC,SAAAshB,GtBg7FA,MAAOniB,SsB/6FJC,UAAAY,KAAuB,WtBk7FtB,MAFA8H,GsB/6FJyZ,oBAAAtK,EAAwCnP,EAAA0Z,oBAAxCvK,ItBg7FInP,EsB/6FJ2Z,kBAAAxK,EAAAqK,GACOxZ,EAAA4Z,gBAAAzK,EAAPC,KtB46FO/X,SsB36FF,SAAAzB,GtBm7FD,KsBl7FCA,aAAAwjB,GAALS,yBtBg7FQ1a,EAASiD,IsB/6FbzK,MAAU,gCAAkCqI,EAA5C7D,KAAAvG,GAEJA,MAdDsC,KAgBC,WtBg7FA,MAAOb,SsB/6FJC,UAAAY,KAAuB,WtBg7FtB,MsB/6FG8H,GAAA8Z,YAAA3K,EAAPC,KtB86FO/X,SsB76FF,SAAAzB,GtBi7FD,KADAuJ,GAASiD,IsB/6FbzK,MAAU,qCAAuCqI,EAAjD7D,KAAAvG,GACAA,MArBDsC,KAuBC,WtBi7FA,MADAiX,GsB/6FJuB,WAA2BzB,EAAA0B,WAA3BC,UACAzB,OtBm7FJ7Q,IAAK,kBACLlG,MAAO,SAAyB+W,EAAeC,GAC3C,GAAIzJ,GsB/6FR5M,KAAIwZ,EAAmBxZ,KAAA2gB,oBAAvBvK,GACIqK,EAAiBzgB,KAAAghB,kBAArB5K,GACIwC,EAAYqI,KAAApR,IAAS7P,KAAT4Y,UAAyB6H,EAAzCjH,EtBk7FI,OsBj7FAA,IAAJiH,EACIrK,EtBm7FOpW,KsBj7FJkhB,uBAAA9K,GAAAjX,KAAgD,WtBm7F/C,GsBj7FAiX,EAAJ+K,ctBk7FQ,KsBj7FE,IAAAd,GAAAS,wBAAN,4BtBm7FA,OsBj7FJ1K,KALGjX,KAMC,WtBk7FA,MAAOb,SsBj7FJC,UAAAY,KAAuB,WtBk7FtB,MsBj7FGyN,GAAAwU,cAAAhL,EAAAoD,EAAAZ,EAAPvC,KtBg7FO/X,SsB/6FF,SAAAzB,GtBm7FD,KADAuJ,GAASiD,IsBj7FbzK,MAAU,yBAAA4a,EAAA,IAAAZ,EAAA,oBAAsFhM,EAAhGxJ,KAAAvG,GACAA,MAXDsC,KAaC,SAAAkiB,GtBk7FA,MAAO/iB,SsBj7FJC,UAAAY,KAAuB,WtBk7FtB,MsBj7FGyN,GAAA0U,aAAAlL,EAAAiL,EAAA7H,EAAPnD,KtBg7FO/X,SsB/6FF,SAAAzB,GtBm7FD,KADAuJ,GAASiD,IsBj7FbzK,MAAU,4BAAA4a,EAAA,IAAAZ,EAAA,oBAAyFhM,EAAnGxJ,KAAAvG,GACAA,MAlBDsC,KAoBC,SAAAoiB,GtBk7FA,MAAOjjB,SsBj7FJC,UAAAY,KAAuB,WtBk7FtB,MsBj7FGyN,GAAA4U,WAAApL,EAAAmL,EAAPlL,KtBg7FO/X,SsB/6FF,SAAAzB,GtBm7FD,KADAuJ,GAASiD,IsBj7FbzK,MAAU,0BAAA4a,EAAA,IAAAZ,EAAA,oBAAuFhM,EAAjGxJ,KAAAvG,GACAA,MAzBDsC,KA2BC,SAAAsiB,GtBo7FA,MAFAjI,IsBj7FJZ,EtBk7FIhM,EsBj7FJ8T,oBAAAtK,EAAAoD,GtBk7FW5M,EsBj7FJ8U,kBAAAtL,GAAAjX,KAA2C,WtBk7F1C,MsBj7FGyN,GAAAiU,gBAAAzK,EAAPC,UtBs7FR9Q,IAAK,eACLlG,MAAO,SAAsB+W,EAAeiL,EAAO7H,EAAkBnD,GACjE,GAAI9I,GsBn7FsDvN,ItBs7F1D,OAAOqhB,GsBr7FJzK,IAAU,SAAA2C,EAAAlc,GtBs7FT,MsBt7FoBkQ,GAAAoU,YAAAvL,EAAAmD,EAAsCC,EAAtCnc,EAAXgZ,QtB+7FjB9Q,IAAK,cACLlG,MAAO,SAAqB+W,GACxB,OACIb,MsB17FGvV,KAAAghB,kBADJ5K,GtB47FCZ,QsB17FKxV,KAAA2gB,oBAFbvK,OtBg8FA7Q,IAAK,oBACLlG,MAAO,SAA2B+W,GAC9B,GsB37FAwL,GAAW5hB,KAAA8U,cAAAlJ,aAAgCwK,EAAA7O,aAAAsa,YAAhCha,SAAA4N,YAA4FW,EAA3G7O,atB47FI,OsB37FGvH,MAAA8U,cAAAgN,2BAA8C1L,EAAA7O,aAA9CwM,GAAP6N,MtB87FArc,IAAK,yBACLlG,MAAO,SAAgC+W,GACnC,MsB57FGpW,MAAA8U,cAAAlJ,aAAgCwK,EAAA7O,aAAAsa,YAAhCha,SAAAka,oBAAoG3L,EAA3G7O,kBtBg8FG6W,GACTnI,EAAM6B,KAERsG,GAAUmC,wBAA0B,gCACpCnC,EAAUkC,sBAAwB,gCAE/B0B,0CAA0C,GAAGC,gBAAgB,GAAGC,UAAU,GAAGnY,WAAW,aAAaoY,IAAI,SAASvlB,EAAQkB,EAAOJ,GACpI,YAQA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAGpR,QAAS8d,GAAmBC,GACxB,QAASC,KACL,GAAIzf,GAAW0f,QAAQC,UAAUH,EAAKpkB,MAAMwkB,KAAKpiB,WAEjD,OADAR,QAAO+E,eAAe/B,EAAUhD,OAAOqG,eAAelG,OAC/C6C,EAkBX,MAfAyf,GAAkBpkB,UAAY2B,OAAO0E,OAAO8d,EAAInkB,WAC5CsG,aACInF,MAAOgjB,EACP5d,YAAY,EACZC,UAAU,EACVC,cAAc,KAIlB9E,OAAO+E,eACP/E,OAAO+E,eAAe0d,EAAmBD,GAEzCC,EAAkBzd,UAAYwd,EAG3BC,EA9CX,GAAIne,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GA8CW3B,GAAQglB,gBAAkB,SAAUC,GAGtD,QAASD,GuB9pGTnZ,EAAAvC,GvB+pGIjD,EAAgB/D,KuB/pGO0iB,EvBiqGvB,IAAIjc,GAAQxC,EAA2BjE,MAAO0iB,EAAgB7d,WAAahF,OAAOqG,eAAewc,IAAkB/kB,KAAKqC,KuBjqGjGuJ,GvB0qGvB,OAPA9C,GuBjqGAO,KAAAA,EvBkqGAP,EuBjqGArD,KAAYqD,EAAAjC,YAAZpB,KACA,kBAAW7F,OAAPqlB,kBvBkqGArlB,MuBjqGAqlB,kBAAAnc,EAA8BA,EAA9BjC,avBmqGAiC,EuBjqGAoc,MAAc,GAAAtlB,OAADgM,GAAbsZ,MAEPpc,EvBoqGD,MAjBArC,GAAUse,EuB5pGVC,GvB6qGOD,GACTN,EAAmB7kB,aAEfulB,IAAI,SAASlmB,EAAQkB,EAAOJ,GAClC,YAEAmC,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,GAGT,IAAI0jB,GAAmBnmB,EAAQ,qBwBzrG/BiD,QAAA+S,KAAAmQ,GAAApjB,QAAA,SAAA4F,GxB4rGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwB9rGJ,ExB+rGI1E,IAAK,WACH,MAAOgjB,GwBhsGbxd,OxBqsGA,IAAIyd,GAA2BpmB,EAAQ,+BwBpsGvCiD,QAAA+S,KAAAoQ,GAAArjB,QAAA,SAAA4F,GxBusGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwBzsGJ,ExB0sGI1E,IAAK,WACH,MAAOijB,GwB3sGbzd,OxBgtGA,IAAI0d,GAAuCrmB,EAAQ,4CwB/sGnDiD,QAAA+S,KAAAqQ,GAAAtjB,QAAA,SAAA4F,GxBktGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwBptGJ,ExBqtGI1E,IAAK,WACH,MAAOkjB,GwBttGb1d,OxB2tGA,IAAI2d,GAAuCtmB,EAAQ,4CwB1tGnDiD,QAAA+S,KAAAsQ,GAAAvjB,QAAA,SAAA4F,GxB6tGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwB/tGJ,ExBguGI1E,IAAK,WACH,MAAOmjB,GwBjuGb3d,OxBsuGA,IAAI8a,GAA2BzjB,EAAQ,8BwBruGvCiD,QAAA+S,KAAAyN,GAAA1gB,QAAA,SAAA4F,GxBwuGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwB1uGJ,ExB2uGI1E,IAAK,WACH,MAAOsgB,GwB5uGb9a,OxBivGA,IAAI4d,GAAiCvmB,EAAQ,qCwBhvG7CiD,QAAA+S,KAAAuQ,GAAAxjB,QAAA,SAAA4F,GxBmvGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwBrvGJ,ExBsvGI1E,IAAK,WACH,MAAOojB,GwBvvGb5d,OxB4vGA,IAAI6d,GAAuBxmB,EAAQ,0BwB3vGnCiD,QAAA+S,KAAAwQ,GAAAzjB,QAAA,SAAA4F,GxB8vGc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YwBhwGJ,ExBiwGI1E,IAAK,WACH,MAAOqjB,GwBlwGb7d,UxBuwGG8d,qBAAqB,GAAGC,+BAA+B,GAAGC,4CAA4C,GAAGC,4CAA4C,GAAGC,8BAA8B,GAAGC,qCAAqC,GAAGC,0BAA0B,KAAKC,IAAI,SAAShnB,EAAQkB,EAAOJ,GAC/R,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQ4b,wBAA0BrW,MyBrxGlC,IAAA8f,GAAAnmB,EAAA,qBzB2yG8Bc,GAAQ4b,wBAA0B,SAAUuK,GAGxE,QAASvK,KAGP,MAFAvV,GAAgB/D,KAAMsZ,GAEfrV,EAA2BjE,MAAOsZ,EAAwBzU,WAAahF,OAAOqG,eAAeoT,IAA0Bpa,MAAMc,KAAMK,YAG5I,MARA+D,GAAUkV,EAAyBuK,GAQ5BvK,GACPyJ,EAAiBL,mBAEhBW,qBAAqB,KAAKS,IAAI,SAASlnB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQqmB,wBAA0B9gB,M0B/zGlC,IAAA8f,GAAAnmB,EAAA,qB1Bq1G8Bc,GAAQqmB,wBAA0B,SAAUF,GAGxE,QAASE,KAGP,MAFAhgB,GAAgB/D,KAAM+jB,GAEf9f,EAA2BjE,MAAO+jB,EAAwBlf,WAAahF,OAAOqG,eAAe6d,IAA0B7kB,MAAMc,KAAMK,YAG5I,MARA+D,GAAU2f,EAAyBF,GAQ5BE,GACPhB,EAAiBL,mBAEhBW,qBAAqB,KAAKW,IAAI,SAASpnB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQumB,oCAAsChhB,M2Bz2G9C,IAAA8f,GAAAnmB,EAAA,qB3B+3G0Cc,GAAQumB,oCAAsC,SAAUJ,GAGhG,QAASI,KAGP,MAFAlgB,GAAgB/D,KAAMikB,GAEfhgB,EAA2BjE,MAAOikB,EAAoCpf,WAAahF,OAAOqG,eAAe+d,IAAsC/kB,MAAMc,KAAMK,YAGpK,MARA+D,GAAU6f,EAAqCJ,GAQxCI,GACPlB,EAAiBL,mBAEhBW,qBAAqB,KAAKa,IAAI,SAAStnB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQymB,oCAAsClhB,M4Bn5G9C,IAAA8f,GAAAnmB,EAAA,qB5By6G0Cc,GAAQymB,oCAAsC,SAAUN,GAGhG,QAASM,KAGP,MAFApgB,GAAgB/D,KAAMmkB,GAEflgB,EAA2BjE,MAAOmkB,EAAoCtf,WAAahF,OAAOqG,eAAeie,IAAsCjlB,MAAMc,KAAMK,YAGpK,MARA+D,GAAU+f,EAAqCN,GAQxCM,GACPpB,EAAiBL,mBAEhBW,qBAAqB,KAAKe,IAAI,SAASxnB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQojB,wBAA0B7d,M6B77GlC,IAAA8f,GAAAnmB,EAAA,qB7Bm9G8Bc,GAAQojB,wBAA0B,SAAU+C,GAGxE,QAAS/C,KAGP,MAFA/c,GAAgB/D,KAAM8gB,GAEf7c,EAA2BjE,MAAO8gB,EAAwBjc,WAAahF,OAAOqG,eAAe4a,IAA0B5hB,MAAMc,KAAMK,YAG5I,MARA+D,GAAU0c,EAAyB+C,GAQ5B/C,GACPiC,EAAiBL,mBAEhBW,qBAAqB,KAAKgB,IAAI,SAASznB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQ4mB,8BAAgCrhB,M8Bv+GxC,IAAA8f,GAAAnmB,EAAA,qB9B6/GoCc,GAAQ4mB,8BAAgC,SAAUT,GAGpF,QAASS,KAGP,MAFAvgB,GAAgB/D,KAAMskB,GAEfrgB,EAA2BjE,MAAOskB,EAA8Bzf,WAAahF,OAAOqG,eAAeoe,IAAgCplB,MAAMc,KAAMK,YAGxJ,MARA+D,GAAUkgB,EAA+BT,GAQlCS,GACPvB,EAAiBL,mBAEhBW,qBAAqB,KAAKkB,IAAI,SAAS3nB,EAAQkB,EAAOJ,GACzD,YAWA,SAASqG,GAAgBlB,EAAUzC,GACjC,KAAMyC,YAAoBzC,IACxB,KAAM,IAAI4D,WAAU,qCAIxB,QAASC,GAA2BN,EAAMhG,GACxC,IAAKgG,EACH,KAAM,IAAIO,gBAAe,4DAC1B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG7H,QAASyG,GAAUC,EAAUC,GAC3B,GAA0B,kBAAfA,IAA4C,OAAfA,EACtC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC7ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAxBlR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQ8mB,oBAAsBvhB,M+BjhH9B,IAAA8f,GAAAnmB,EAAA,qB/BuiH0Bc,GAAQ8mB,oBAAsB,SAAUX,GAGhE,QAASW,KAGP,MAFAzgB,GAAgB/D,KAAMwkB,GAEfvgB,EAA2BjE,MAAOwkB,EAAoB3f,WAAahF,OAAOqG,eAAese,IAAsBtlB,MAAMc,KAAMK,YAGpI,MARA+D,GAAUogB,EAAqBX,GAQxBW,GACPzB,EAAiBL,mBAEhBW,qBAAqB,KAAKoB,IAAI,SAAS7nB,EAAQkB,EAAOJ,GACzD,YAmBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAnB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQgnB,iBAAmBzhB,MAE3B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MgCjkH/IgG,EAAAxJ,EAAA,WhC6kHuBc,GAAQgnB,iBAAmB,WAC9C,QAASA,GgCvkHTC,GhCwkHI5gB,EAAgB/D,KgCxkHC0kB,GhC0kHjB1kB,KgC7kHJ4kB,OAAQ,EhC8kHJ5kB,KgC7kHJ2kB,WAGIA,IhC6kHI3kB,KgC5kHA2kB,QAAeve,EAAAO,MAAAke,MAAfF,IhCooHR,MApDAzf,GAAawf,IACTnf,IAAK,MACLlG,MAAO,SAAakG,EAAKlG,GACrB,GgC9kHAylB,GAAY9kB,KAAA2kB,QAAhBpf,EhC+kHI,IgC9kHJ,MAAIlG,EAAe,CACFW,KAAA2kB,QAAApf,GAAblG,ChC+kHIW,MgC9kHJ4kB,MAAa,MAAAE,GAAqB,MAAAA,GAAqBA,GAAvDzlB,aAGOW,MAAA2kB,QAAPpf,GhC8kHIvF,KgC7kHJ4kB,MAAA,MAAaE,KhCilHjBvf,IAAK,MACLlG,MAAO,SAAakG,GAChB,MgC9kHGvF,MAAA2kB,QAAPpf,MhCilHAA,IAAK,cACLlG,MAAO,SAAqBkG,GACxB,MgC/kHGvF,MAAA2kB,QAAA5b,eAAPxD,MhCklHAA,IAAK,SACLlG,MAAO,SAAgBkG,SgC/kHhBvF,MAAA2kB,QAAPpf,MhCmlHAA,IAAK,UACLlG,MAAO,SAAiB2H,GAEpB,MgCllHGhH,MAAAwY,IAAA,OAAPxR,MhCqlHAzB,IAAK,UACLlG,MAAO,WAEH,MgCplHGW,MAAAD,IAAP,WhCulHAwF,IAAK,SACLlG,MAAO,WACH,GgCrlHA0lB,GAAM3e,EAAAO,MAAA8L,UAAVzS,MACIgH,EAAOhH,KAAXyM,ShC0lHI,OgCzlHJzF,KhCslHQA,EgCrlHGA,EAAPS,ShCslHIsd,EgCrlHJJ,QAAA,KAAA3d,GAEJ+d,MhCylHGL,OAGR3a,WAAW,aAAaib,IAAI,SAASpoB,EAAQkB,EAAOJ,GACvD,YA+LA,SAASunB,GAAwBnmB,GAC/B,GAAIA,GAAOA,EAAIomB,WACb,MAAOpmB,EAEP,IAAIqmB,KAAY,IAAW,MAAPrmB,EAClB,IAAK,GAAIyG,KAAOzG,GACVe,OAAO3B,UAAU6K,eAAepL,KAAKmB,EAAKyG,KAAM4f,EAAO5f,GAAOzG,EAAIyG,GAEpD,OAArB4f,GAAAA,WAAiBrmB,EAAWqmB,EArMjCtlB,OAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQ0nB,WAAaniB,MAErB,IAAIoiB,GAAoBzoB,EAAQ,sBiCrpHhCiD,QAAA+S,KAAAyS,GAAA1lB,QAAA,SAAA4F,GjCwpHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiC1pHJ,EjC2pHI1E,IAAK,WACH,MAAOslB,GiC5pHb9f,OjCiqHA,IAAIoV,GAAO/d,EAAQ,QiChqHnBiD,QAAA+S,KAAA+H,GAAAhb,QAAA,SAAA4F,GjCmqHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCrqHJ,EjCsqHI1E,IAAK,WACH,MAAO4a,GiCvqHbpV,OjC4qHA,IAAI+f,GAAgB1oB,EAAQ,kBiC3qH5BiD,QAAA+S,KAAA0S,GAAA3lB,QAAA,SAAA4F,GjC8qHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiChrHJ,EjCirHI1E,IAAK,WACH,MAAOulB,GiClrHb/f,OjCurHA,IAAIggB,GAAoB3oB,EAAQ,uBiCtrHhCiD,QAAA+S,KAAA2S,GAAA5lB,QAAA,SAAA4F,GjCyrHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiC3rHJ,EjC4rHI1E,IAAK,WACH,MAAOwlB,GiC7rHbhgB,OjCksHA,IAAIigB,GAAwB5oB,EAAQ,2BiCjsHpCiD,QAAA+S,KAAA4S,GAAA7lB,QAAA,SAAA4F,GjCosHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCtsHJ,EjCusHI1E,IAAK,WACH,MAAOylB,GiCxsHbjgB,OjC6sHA,IAAIkgB,GAAe7oB,EAAQ,iBiC5sH3BiD,QAAA+S,KAAA6S,GAAA9lB,QAAA,SAAA4F,GjC+sHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCjtHJ,EjCktHI1E,IAAK,WACH,MAAO0lB,GiCntHblgB,OjCwtHA,IAAImgB,GAAmB9oB,EAAQ,sBiCvtH/BiD,QAAA+S,KAAA8S,GAAA/lB,QAAA,SAAA4F,GjC0tHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiC5tHJ,EjC6tHI1E,IAAK,WACH,MAAO2lB,GiC9tHbngB,OjCmuHA,IAAIogB,GAAe/oB,EAAQ,iBiCluH3BiD,QAAA+S,KAAA+S,GAAAhmB,QAAA,SAAA4F,GjCquHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCvuHJ,EjCwuHI1E,IAAK,WACH,MAAO4lB,GiCzuHbpgB,OjC8uHA,IAAI2N,GAA0BtW,EAAQ,6BiC7uHtCiD,QAAA+S,KAAAM,GAAAvT,QAAA,SAAA4F,GjCgvHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiClvHJ,EjCmvHI1E,IAAK,WACH,MAAOmT,GiCpvHb3N,OjCyvHA,IAAI0N,GAAiBrW,EAAQ,mBiCxvH7BiD,QAAA+S,KAAAK,GAAAtT,QAAA,SAAA4F,GjC2vHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiC7vHJ,EjC8vHI1E,IAAK,WACH,MAAOkT,GiC/vHb1N,OjCowHA,IAAI2Q,GAAatZ,EAAQ,eiCnwHzBiD,QAAA+S,KAAAsD,GAAAvW,QAAA,SAAA4F,GjCswHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCxwHJ,EjCywHI1E,IAAK,WACH,MAAOmW,GiC1wHb3Q,OjC+wHA,IAAIqW,GAAahf,EAAQ,eiC9wHzBiD,QAAA+S,KAAAgJ,GAAAjc,QAAA,SAAA4F,GjCixHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCnxHJ,EjCoxHI1E,IAAK,WACH,MAAO6b,GiCrxHbrW,OjC0xHA,IAAI0Q,GAAQrZ,EAAQ,SiCzxHpBiD,QAAA+S,KAAAqD,GAAAtW,QAAA,SAAA4F,GjC4xHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiC9xHJ,EjC+xHI1E,IAAK,WACH,MAAOkW,GiChyHb1Q,OjCqyHA,IAAIqgB,GAAiBhpB,EAAQ,mBiCpyH7BiD,QAAA+S,KAAAgT,GAAAjmB,QAAA,SAAA4F,GjCuyHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCzyHJ,EjC0yHI1E,IAAK,WACH,MAAO6lB,GiC3yHbrgB,OjCgzHA,IAAIsgB,GAAyBjpB,EAAQ,4BiC/yHrCiD,QAAA+S,KAAAiT,GAAAlmB,QAAA,SAAA4F,GjCkzHc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YiCpzHJ,EjCqzHI1E,IAAK,WACH,MAAO8lB,GiCtzHbtgB,OAjBA,IAAAugB,GAAAlpB,EAAA,gBjC80HIwoB,EAAaH,EAAwBa,EAczCpoB,GAAQ0nB,WAAaA,IAElBW,eAAe,GAAGC,sBAAsB,GAAGC,QAAQ,GAAGC,kBAAkB,GAAGC,uBAAuB,GAAGC,2BAA2B,GAAGC,iBAAiB,GAAGC,sBAAsB,GAAGC,iBAAiB,GAAGC,6BAA6B,GAAGC,mBAAmB,GAAGC,eAAe,GAAGC,eAAe,GAAGC,SAAS,GAAGC,mBAAmB,GAAGC,4BAA4B,KAAKC,IAAI,SAASnqB,EAAQkB,EAAOJ,GAChY,YAEAmC,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GkCl2HE3B,GAAAspB,oBlCq2HTC,KkCr2HG,alCw2HDC,IAAI,SAAStqB,EAAQkB,EAAOJ,GAClC,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAUpH1C,GAAQypB,qBAAuB,WACtD,QAASA,KACLpjB,EAAgB/D,KAAMmnB,GAgB1B,MAbAjiB,GAAaiiB,IACT5hB,ImCp4HJ,YnCu4HIlG,MAAO,SAAmBkI,OAK1BhC,IAAK,WACLlG,MAAO,SAAkBkI,QAGtB4f,UAGLC,IAAI,SAASxqB,EAAQkB,EAAOJ,GAClC,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAzB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ2pB,aAAepkB,MAEvB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MoCl6H/I8V,EAAAtZ,EAAA,gBACAgpB,EAAAhpB,EAAA,oBACAwJ,EAAAxJ,EAAA,YACAyoB,EAAAzoB,EAAA,sBpCk7HmBc,GAAQ2pB,aAAe,WACtC,QAASA,GoCh6HTxF,EAAA/G,EAAA/G,GpCi6HIhQ,EAAgB/D,KoCj6HwBqnB,GpCm6HxCrnB,KoC/6HJsV,kBpCg7HItV,KoC/6HJsnB,OAASpR,EAAA0B,WAAW2P,SpCg7HhBvnB,KoC/6HJ2X,WAAazB,EAAA0B,WAAW4P,QpCg7HpBxnB,KoC/6HJuY,iBAAmB,GAAA8M,GASyBX,iBpCu6HxC1kB,KoC96HJynB,UAAY,KpC+6HRznB,KoC96HJ0nB,WAAa,GAAAC,MpC+6HT3nB,KoC96HJ4nB,QAAU,KpC+6HN5nB,KoC96HJ6nB,YAAc,KpC+6HV7nB,KoC76HJ8nB,qBAGO,OAAA/T,GAAH9Q,SAAgB8Q,EpC66HZ/T,KoC56HA+T,GAAU3N,EAAAO,MAAVqN,OpC86HAhU,KoC56HA+T,GAAAA,EpC+6HJ/T,KoC56HA6hB,YAAAA,EpC66HA7hB,KoC56HA8a,cAAAA,EpC2/HJ,MAvEA5V,GAAamiB,IACT9hB,IAAK,sBACLlG,MAAO,SAA6B0oB,GAChC,GoC/6HA3R,GAAgB,GAAAwP,GAAAoC,cAAAD,EAApB/nB,KpCi7HI,OADAA,MoC/6HJsV,eAAAtS,KAAAoT,GACAA,KpCk7HA7Q,IAAK,YACLlG,MAAO,WACH,OoCh7HIW,KAAR4nB,WpCy7HAriB,IAAK,aACLlG,MAAO,WACH,MoCn7HGW,MAAAsnB,SAAgBpR,EAAA0B,WAAvBqQ,YpC27HA1iB,IAAK,OACLlG,MAAO,WACHW,KoCt7HJsV,eAAA3V,QAA4B,SAAAuoB,GpCu7HpBA,EoCt7HJ/G,eAAA,IpCw7HAnhB,KoCt7HJsnB,OAAcpR,EAAA0B,WAAdqQ,YpCy7HA1iB,IAAK,UACLlG,MAAO,WACH,MoCv7HGW,MAAAuY,iBAAP9L,apC07HAlH,IAAK,SACLlG,MAAO,WACH,GoCz7HD8oB,GAAA9nB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,MAAyB+nB,IAAA/nB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GACxBgoB,EAAcjiB,EAAAO,MAAlB2hB,apCg8HI,OoC/7HJF,KpC47HQC,EoC37HUjiB,EAAAO,MAAd4hB,WpC87HOniB,EAASO,MoC37Hb6hB,UAAAH,EAAiBroB,KAAkB,SAAAX,EAAAkG,EAAAI,EAAAkd,GpC47HlC,MoC37HAsF,GAAAzI,QAAAna,MACA,MAGA,gBAAA,oBAAAma,QAAAna,MACOlG,EAAPoI,SAEApI,YAAJ9B,OACW6I,EAAAO,MAAAyB,YAAP/I,GAGAA,YAAAumB,GAAJoC,cACW3oB,EAAAoI,QAAA,gBAAP2gB,GpC07HA,cAOLf,OAGRrB,sBAAsB,GAAGU,eAAe,GAAGG,mBAAmB,GAAG9c,WAAW,aAAa0e,IAAI,SAAS7rB,EAAQkB,EAAOJ,GACxH,YAMA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAN5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAUO3B,GAAQgrB,YqCriItB,QAAAA,GAAA3U,EAAAlM,GrCsiIA9D,EAAgB/D,KqCriIZ0oB,GrCuiIJ1oB,KqCviII+T,GAAAA,ErCwiIJ/T,KqCviII6H,QAAAA,QrC0iIF8gB,IAAI,SAAS/rB,EAAQkB,EAAOJ,GAClC,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAUzH1C,GAAQkrB,gBAAkB,WAC5C,QAASA,KACL7kB,EAAgB/D,KAAM4oB,GAkB1B,MAfA1jB,GAAa0jB,EAAiB,OAC1BrjB,IsC5kIJ,ctC+kIIlG,MAAO,SAAqByb,GACxB,GsC9kIApc,GAAJ,EtColII,OALAoc,GsC9kIJ1H,YAAAzT,QAAkC,SAAA6M,EAAAnP,GAC3BmP,EAAHqc,ctC+kIQnqB,GsC9kIM8N,EAAApJ,KAAA,IAAe0X,EAAAjH,OAAqBrH,EAApCpJ,MAAV,OAGR1E,MtCklIGkqB,UAGLE,IAAI,SAASlsB,EAAQkB,EAAOJ,GAClC,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCA3B5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQqrB,YAAc9lB,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MuC7mI/IgjB,EAAAxmB,EAAA,sCACAsZ,EAAAtZ,EAAA,gBACAwJ,EAAAxJ,EAAA,YACAumB,EAAAvmB,EAAA,iDACAomB,EAAApmB,EAAA,0CvC6nIkBc,GAAQqrB,YAAc,WACpC,QAASA,GuCvnITjU,EAAAkU,EAAAC,GvCwnIIllB,EAAgB/D,KuCvnIhB+oB,GvCynIA/oB,KuCznIA8U,cAAAA,EvC0nIA9U,KuCznIAgpB,UAAAA,EvC0nIAhpB,KuCznIAipB,oBAAAA,EvC4uIJ,MAhHA/jB,GAAa6jB,IACTxjB,IAAK,MACLlG,MAAO,SAAa6pB,EAAWphB,EAAqBd,GAChD,GuC1nIJmiB,GACArO,EvCynIQrU,EuC3nIuEzG,KAAzC8L,IAAAzL,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,EvCkoIlC,OAAO/B,SuC9nIJC,UAAAY,KAAuB,WvCooItB,GAJIgqB,EuC/nIJ/iB,EAAAO,MAAAqQ,SAAJkS,GACUziB,EAAAqO,cAAAlJ,aAANsd,GAEAA,GAEJC,EvC+nIQ,KuC9nIE,IAAA/F,GAAAoB,oBAAwB,gBAA9B0E,EvCmoIA,OAFApO,GuC9nIYqO,EAAAC,oBAAhBthB,GAEOrB,EAAAyG,SAAAic,EAAArO,EAAP9T,KAZG7H,KAaC,SAAAgf,GvC+nIA,MAAO1X,GuC9nIJqO,cAAAuU,mBAAsCF,EAAtC/lB,KAAA0X,EAAA9T,GAAA7H,KAA0E,SAAAoI,GvCgoIzE,GuC7nIDd,EAAHuiB,UvCgoIQ,MAFA5iB,GAASiD,IuC7nIbqH,MAAU,SAAWyY,EAAX/lB,KAAA,gBAAsCmE,EAAtCwM,GAAV,yBvC8nIItN,EuC7nIJuiB,UAAA/gB,WAA0BV,EAA1BwM,IACAxM,CvCgoIA,IuC7nIA+hB,GAAmB7iB,EAAA8iB,SAAAJ,EAAvB5hB,EvC8nII,OuC7nIJuE,GACIvE,EAEJ+hB,SvCkoIR/jB,IAAK,WACLlG,MAAO,SAAkB8pB,EAAKrO,EAAe9T,GACzC,MAAOhH,MuC9nIJ8U,cAAA0U,oBAAuCL,EAAvC/lB,KAAA0X,GAAA3b,KAAqE,SAAAsqB,GvC+nIpE,GuC9nIJ,MAAIA,EAAuB,CvC+nInB,IuC9nICN,EAALtO,cvC+nIQ,KuC9nIE,IAAAuI,GAAAoB,oBAAN,oDvCioIAiF,GuC9nIJnU,eAAA3V,QAAqC,SAAA0V,GvC+nI7B,GuC9nIAA,EAAAiS,QAAoBpR,EAAA0B,WAAxB4P,QvC+nIQ,KuC9nIE,IAAApE,GAAAoB,oBAAwB,SAAWnP,EAAX0S,SAA9B,4BvCkoIR,GuC9nIAoB,EAAAO,yBAA+BP,EAAAO,uBAAAxc,SAAnC4N,GvC+nIQ,KuC9nIE,IAAAqI,GAAAmB,8BAAkC,sDAAsD6E,EAA9F/lB,KvCioIA,IuC9nID+lB,EAAAQ,mBAAyBR,EAAAQ,iBAAAzc,SAA5BlG,GvC+nIQ,KuC9nIE,IAAAgc,GAAAe,wBAA4B,gDAAgDoF,EAAlF/lB,KvCioIA,QuC9nIJ,OvCqoIJmC,IAAK,UACLlG,MAAO,SAAiBuqB,GACpB,GAAI3iB,GuChoIRjH,IvCkoII,OAAO1B,SuCloIJC,UAAAY,KAAuB,WvCmoItB,MuCloIDiH,GAAAO,MAAAqQ,SAAH4S,GACW3iB,EAAA6N,cAAA+U,oBAAPD,GAEJA,IAJGzqB,KAKC,SAAAoI,GvCmoIA,IuCloIJA,EvCmoIQ,KuCloIE,IAAA6b,GAAAoB,oBAAwB,iBAAAoF,EAA9B,iBvCqoIA,IuCloIAriB,EAAA+f,SAAwBpR,EAAA0B,WAA5B2P,SvCmoIQ,KuCloIE,IAAAnE,GAAAoB,oBAAwB,iBAAmBjd,EAAnBwM,GAA9B,oBvCqoIA,IuCloIAlM,GAAUN,EAAAsa,YAAdha,QACIshB,EAAMliB,EAAA6N,cAAAlJ,aAAV/D,EvCmoII,KuCloIJshB,EvCmoIQ,KuCloIE,IAAA/F,GAAAoB,oBAAwB,gBAA9B3c,EvCqoIA,OuCloIIZ,GAAAsiB,SAAAJ,EAAR5hB,QvCsoIJhC,IAAK,WACLlG,MAAO,SAAkB8pB,EAAK5hB,GAC1B,GuCnoIAM,GAAUshB,EAAd/lB,IvCqoII,OADAgD,GAASiD,IuCnoIbygB,KAAS,SAAAjiB,EAAA,8CAAqEN,EAArEuT,cAAT,IAAgHvT,EAAhHkF,WvCooIW0c,EuCnoIJhhB,QAAAZ,GAAApI,KAA+B,SAAAoI,GvCqoI9B,MADAnB,GAASiD,IuCnoIbygB,KAAS,SAAAjiB,EAAA,+CAAsEN,EAAtEuT,cAAA,gCAAqIvT,EAArI+f,OAAT,KACA/f,IvCioIO4hB,SuChoIF,SAAAtsB,GvCqoID,KADAuJ,GAASiD,IuCnoIbzK,MAAU,SAAAiJ,EAAA,qEAA4FN,EAA5FuT,cAAV,IAAAje,GACAA,QvCwoIDksB,OAGRgB,0CAA0C,GAAGC,gDAAgD,GAAGC,qCAAqC,GAAGvD,eAAe,GAAG3c,WAAW,aAAamgB,IAAI,SAASttB,EAAQkB,EAAOJ,GACjN,YAmBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAnB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ2V,uBAAyB3V,EAAQ4V,eAAiBrQ,MAE1D,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MwC3wI/IgG,EAAAxJ,EAAA,YACa0W,EAAA5V,EAAA4V,gBxCuxITC,OwCvxI0B,SxCwxI1B4W,KwCxxI0B,OxCyxI1B1W,QwCzxI0B,UxC0xI1BiI,OwC1xI0B,QxC2xI1BlI,QwC3xI0B,UxC4xI1BG,kBwC5xI0B,oBxC6xI1ByW,UwC7xI0B,YxCgyID1sB,GAAQ2V,uBAAyB,WAC1D,QAASA,GwC3wITjQ,EAAAinB,GxC4wII,GwC5wIiDC,GAAAjqB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAY,EAAGkqB,EAAAlqB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAY,EAAGwoB,EAAAxoB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAAqBmqB,EAAAnqB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAuB,KAAMoqB,EAAApqB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAY,IxCkxI7I0D,GAAgB/D,KwClxImIqT,GxCoxInJrT,KwC7xIJ0qB,oBxC8xII1qB,KwC3xIJ2qB,UAAW,ExC6xIP3qB,KwCtxIAoD,KAAAA,EACIgD,EAAAO,MAAAikB,QAAJP,IxCuxIIrqB,KwCtxIA6qB,KAAYvX,EAAZ8W,UxCuxIApqB,KwCtxIA0qB,iBAAAL,GxCwxIArqB,KwCtxIA6qB,KAAAR,ExCwxIJrqB,KwCtxIAyqB,UAAAA,ExCuxIAzqB,KwCtxIAwqB,qBAAAA,ExCuxIAxqB,KwCtxIA6oB,YAAAA,ExCuxIA7oB,KwCtxIAsqB,UAAAA,ExCuxIAtqB,KwCtxIAuqB,UAAAA,ExCq2IJ,MA5EArlB,GAAamO,IACT9N,IAAK,MACLlG,MAAO,SAAakG,EAAKrF,GAErB,MADAF,MwCxxIJuF,GAAArF,EACAF,QxC2xIAuF,IAAK,WACLlG,MAAO,SAAkBA,GACrB,GwCzxIAurB,GAAUxkB,EAAAO,MAAAikB,QAAdvrB,ExC2xII,SwCzxIAW,KAAAuqB,UAAA,IAAJK,KAIAA,IAIIvrB,EAAAzB,OAAeoC,KAAfsqB,WAAiCjrB,EAAAzB,OAAeoC,KAApDuqB,eAIKlrB,EAAAiO,MAAYtN,KAAZ8qB,oBAAL9qB,SAIIA,KAAJyqB,WACWzqB,KAAAyqB,UAAPprB,KAZOW,KAAA8qB,oBAAPzrB,OxC2yIJkG,IAAK,sBACLlG,MAAO,SAA6BA,GAChC,IwC1xIC,OAAAA,GAAD4D,SAAmB5D,IAAwBW,KAAAsqB,UAA/C,ExC2xIQ,OwC1xIJ,CxC6xIA,IwC1xIAtqB,KAAA2qB,WAAkBtrB,GAAA,IAAUA,GAAeA,KAA/C,ExC2xIQ,OwC1xIJ,CxC6xIA,IwC1xIAiU,EAAAC,SAA0BvT,KAA1B6qB,OAAwCzkB,EAAAO,MAAAqQ,SAA5C3X,GxC2xIQ,OwC1xIJ,CxC4xIA,IwC1xIAiU,EAAA6W,OAAwBnqB,KAAxB6qB,OAAsCzkB,EAAAO,MAAAokB,OAA1C1rB,GxC2xIQ,OwC1xIJ,CxC4xIA,IwC1xIAiU,EAAAG,UAA2BzT,KAA3B6qB,OAAyCzkB,EAAAO,MAAAqkB,MAA7C3rB,GxC2xIQ,OwC1xIJ,CxC4xIA,IwC1xIAiU,EAAAoI,SAA0B1b,KAA1B6qB,OAAwCzkB,EAAAO,MAAAskB,SAA5C5rB,GxC2xIQ,OwC1xIJ,CxC6xIA,IwC1xIAiU,EAAA8W,YAA6BpqB,KAAjC6qB,KAA4C,CxC2xIpC,IwC1xICzkB,EAAAO,MAAAukB,SAAL7rB,GxC2xIQ,OwC1xIJ,CxC4xIA,KwC1xIAW,KAAC0qB,iBAAApd,MAA4B,SAAA6d,EAAA9tB,GxC2xIzB,MwC3xIyC8tB,GAAAje,SAAmB7N,EAAM8rB,EAAzC/nB,SxC6xIzB,OwC5xIJ,ExCgyIJ,OwC5xIApD,KAAJwqB,sBACWxqB,KAAAwqB,qBAAPnrB,OxCmyIDgU,OAGRtJ,WAAW,aAAaqhB,IAAI,SAASxuB,EAAQkB,EAAOJ,GACvD,YAqBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQyW,cAAgBlR,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MyCx5I/IgG,GADAxJ,EAAA,8BACAA,EAAA,azCs6IIuX,EAAgB,WAChB,QAASA,GyCj6ITN,GzCk6II9P,EAAgB/D,KyCl6IDmU,GzCo6IfnU,KyCv6IJoT,ezCw6IIpT,KyCv6IJ6T,UzCy6II7T,KyCt6IAqrB,kBzCu6IArrB,KyCt6IAsrB,oBACAzX,GzCu6IIzN,EAASO,MyCt6ITC,WAAiB5G,KAAjB6T,OAAAA,GzCs+IR,MA5DA3O,GAAaiP,IACT5O,IAAK,kBACLlG,MAAO,eAEPkG,IAAK,oBACLlG,MAAO,eAEPkG,IAAK,WACLlG,MAAO,WACH,GAAIoH,GyCt6IRzG,IzCw6II,OAAOA,MyCx6IJoT,YAAA9F,MAAuB,SAAAie,EAAAluB,GzCy6ItB,MyCz6IgCkuB,GAAAre,SAAazG,EAAAoN,OAAY0X,EAAnCnoB,YzCg7I9BmC,IAAK,QACLlG,MAAO,SAAemsB,EAAMC,GACxB,MyC76IJ,KAAIprB,UAAAzC,OACQwI,EAAAO,MAAA5G,IAAUC,KAAV6T,OAAA2X,EAAR,OzC+6IAplB,EAASO,MyC76Ib1G,IAAUD,KAAV6T,OAAA2X,EAAAC,GACAA,MzCg7IAlmB,IAAK,WACLlG,MAAO,WACH,GAAI4H,GyC96IRjH,KAAItB,EAAJ,gBzCi8II,OAfAsB,MyCh7IJoT,YAAAzT,QAAyB,SAAA6M,EAAAnP,GzCk7IjB,GyCh7IA6C,GAAM+G,EAAA4M,OAAYrH,EAAtBpJ,KzC07II1E,IyCh7IM8N,EAAApJ,KAAA,IAAAlD,EAAV,MzCk7IAxB,GyCh7IJ,OzCo7IA6G,IAAK,SACLlG,MAAO,WACH,OACIwU,OyCj7II7T,KADZ6T,YzCu7IGM,IAGXzW,GAAQyW,cAAgBA,IAErBqS,6BAA6B,GAAGzc,WAAW,aAAa2hB,IAAI,SAAS9uB,EAAQkB,EAAOJ,GACvF,YAqCA,SAASiuB,GAAuB7sB,GAC5B,MAAOA,IAAOA,EAAIomB,WAAapmB,GAAQ8sB,UAAS9sB,GAGpD,QAASiF,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtDpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQmuB,iBAAmB5oB,MAE3B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M0CtgJ/I0rB,EAAAlvB,EAAA,oBACAmvB,EAAAnvB,EAAA,O1C6gJIovB,EAAQL,EAAuBI,G0C5gJnC3lB,EAAAxJ,EAAA,YACA0oB,EAAA1oB,EAAA,oBACA6oB,EAAA7oB,EAAA,mBACAgpB,EAAAhpB,EAAA,qBACAyoB,EAAAzoB,EAAA,wBACAyJ,EAAAzJ,EAAA,Y1Cm7JIqvB,GAvYmBvuB,EAAQmuB,iBAAmB,SAAUK,GAGxD,QAASL,G0CjiJTM,G1CkiJI,G0CliJ4BC,GAAA/rB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,oBAAqBgsB,EAAAhsB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,E1CqiJ1D0D,GAAgB/D,K0CriJ4D6rB,E1CuiJ5E,IAAIplB,GAAQxC,EAA2BjE,MAAO6rB,EAAiBhnB,WAAahF,OAAOqG,eAAe2lB,IAAmBluB,K0CriJrHqC,M1CmjJA,OAZAyG,G0CviJA2lB,OAAAA,E1CwiJA3lB,E0CviJA0lB,mBAAAA,EACAE,E1CwiJI5lB,E0CviJA4lB,WAAAltB,KAAqB,W1CwiJjBsH,E0CviJA6lB,W1CsiJJ7lB,S0CriJS,SAAA5J,G1CwiJLuJ,EAASiD,I0CviJTzK,MAAA/B,G1CwiJA4J,E0CviJA6lB,W1C0iJJ7lB,E0CviJA6lB,SAEP7lB,E1Co5JD,MAnYArC,GAAUynB,E0C/hJVK,G1CwjJAhnB,EAAa2mB,IACTtmB,IAAK,SACLlG,MAAO,WACHW,K0C1iJJusB,UAAAP,EAAAA,WAAiB7oB,KAASnD,KAATosB,OAAA,EAAyB,SAAAI,G1C6iJlC,O0C1iJIA,EAAR/qB,Y1C2iJQ,I0C1iJJ,G1C2iJQ+qB,E0C1iJJpqB,kBAAA,gB1C2iJI,I0C1iJAqqB,GAAkBD,EAAApqB,kBAAtB,iB1C2iJIqqB,G0C1iJJzqB,YAAA,gBAAA,kBAAgE0qB,QAAhE,I1C2iJID,E0C1iJJzqB,YAAA,aAAA,cAAyD0qB,QAAzD,I1C2iJID,E0C1iJJzqB,YAAA,SAAA,UAAiD0qB,QAAjD,I1C2iJIF,E0C1iJJpqB,kBAAA,0B1C2iJIoqB,E0C1iJJpqB,kBAAA,sB1C2iJI,I0C1iJAuqB,GAAmBH,EAAApqB,kBAAvB,kB1C2iJIuqB,G0C1iJJ3qB,YAAA,iBAAA,kBAAkE0qB,QAAlE,G1C4iJI,I0C1iJAE,GAAcJ,EAAApqB,kBAAlB,c1C2iJIwqB,G0C1iJJ5qB,YAAA,gBAAA,kBAA4D0qB,QAA5D,G1C2iJA,K0C1iJJ,G1C2iJQF,E0C1iJJ9qB,YAAAQ,YAAA,iBAAAF,YAAA,KAAA,MAA4E0qB,QAfpF,O1C6jJA1sB,K0CziJJ6sB,eAAsB,GAAAZ,GAAA,gBAAoCjsB,KAA1DusB,W1C0iJIvsB,K0CziJJ8sB,gBAAuB,GAAAb,GAAA,iBAAqCjsB,KAA5DusB,W1C0iJIvsB,K0CziJJ+sB,wBAA+B,GAAAd,GAAA,yBAA6CjsB,KAA5EusB,W1C0iJIvsB,K0CziJJgtB,oBAA2B,GAAAf,GAAA,sBAA0CjsB,KAArEusB,W1C0iJIvsB,K0CziJJitB,iBAAwB,GAAAhB,GAAA,kBAAsCjsB,KAA9DusB,W1C0iJIvsB,K0CziJJktB,aAAoB,GAAAjB,GAAA,cAAkCjsB,KAAtDusB;I1C4iJAhnB,IAAK,WACLlG,MAAO,WACH,GAAI4H,G0C1iJRjH,I1C4iJI,OAAO1B,S0C5iJJC,UAAAY,KAAuB,SAAAguB,G1C6iJtB,M0C7iJyBnB,GAAAA,WAAAA,UAAW/kB,EAAdmlB,a1CijJ9B7mB,IAAK,oBACLlG,MAAO,SAA2BwiB,EAAa/G,GAC3C,GAAIlO,G0C9iJR5M,KAAIuF,EAAMvF,KAAAotB,uBAA4BvL,EAA5Bha,QAAViT,E1CijJI,OAAO9a,M0ChjJJ6sB,eAAAQ,OAAA9nB,GAAApG,KAAqC,W1CijJpCyN,E0ChjJJ0gB,kBAAAzL,GAAA,GAAA1iB,KAAgD,SAAAouB,G1CkjJxCA,E0CjjJJ5tB,QAAsBiN,EAAtB4gB,mBACH5gB,K1CmjJGA,E0CjjJJ6gB,uBAAA5L,GAAA1iB,KAA8C,SAAAkX,G1CkjJtC,M0CjjJGzJ,GAAA8gB,gBAAPrX,U1CsjJR9Q,IAAK,qBACLlG,MAAO,SAA4BkI,GAC/B,GAAIgG,G0CljJRvN,I1CojJI,OAAOA,M0CpjJJ8sB,gBAAAO,OAA4B9lB,EAA5BwM,IAAA5U,KAAkD,W1CqjJjD,MAAOoO,G0CpjJJogB,mBAAwBpmB,EAAxBwM,IAAA,GAAA5U,KAAqD,SAAAmW,G1CsjJpDA,E0CrjJJ3V,QAAuB4N,EAAvBqgB,oBACHrgB,U1CyjJLhI,IAAK,sBACLlG,MAAO,SAA6B+W,GAChC,M0CtjJGpW,MAAAitB,iBAAAI,OAA6BjX,EAApCrC,O1CyjJAxO,IAAK,kBACLlG,MAAO,SAAyBgX,GAC5B,M0CvjJGrW,MAAAktB,aAAAG,OAAyBhX,EAAhCtC,O1C0jJAxO,IAAK,eACLlG,MAAO,SAAsBwuB,GACzB,M0CrjJG7tB,MAAAktB,aAAAntB,IAAP8tB,M1CwjJAtoB,IAAK,yBACLlG,MAAO,SAAgCwiB,GACnC,M0CtjJG7hB,MAAAktB,aAAAY,WAAA,gBAA8CjM,EAArD9N,O1CyjJAxO,IAAK,gBACLlG,MAAO,SAAuBgX,GAC1B,MAAOrW,M0CvjJJktB,aAAAjtB,IAAsBoW,EAAtBtC,GAAAsC,GAAAlX,KAAoD,SAAAnC,G1CwjJnD,M0CxjJmDqZ,Q1C+jJ3D9Q,IAAK,iBACLlG,MAAO,SAAwBwI,EAASiT,GACpC,GAAI/M,G0C5jJR/N,KAAIuF,EAAMvF,KAAAotB,uBAAAvlB,EAAViT,E1C+jJI,OAAO9a,M0C9jJJ6sB,eAAA9sB,IAAAwF,GAAApG,KAAkC,SAAA4lB,G1C+jJjC,M0C/jJsCA,GAAMhX,EAAAggB,kBAANhJ,GAALA,O1CskJzCxf,IAAK,kBACLlG,MAAO,SAAyBwiB,EAAa/G,GACzC,G0CnkJAvV,GAAMvF,KAAAotB,uBAA4BvL,EAA5Bha,QAAViT,E1CokJI,OAAO9a,M0CnkJJ6sB,eAAA5sB,IAAAsF,EAAAsc,GAAA1iB,KAA+C,SAAAnC,G1CokJ9C,M0CpkJ8C6kB,Q1C2kJtDtc,IAAK,mBACLlG,MAAO,SAA0BkI,GAC7B,GAAI4G,G0CxkJRnO,KAAI+kB,EAAMxd,EAAVE,SACIumB,EAAqBjJ,EAAzBzP,c1C4kJI,OADAyP,G0C1kJJzP,eAAA,K1C2kJWtV,K0C1kJJ8sB,gBAAA7sB,IAAyBsH,EAAzBwM,GAAAgR,GAAA5lB,KAAoD,SAAAnC,G1C2kJnD,M0C3kJsDmR,GAAA8f,uBAAHD,KAApD7uB,KAA6G,SAAAnC,G1C6kJ5G,M0C7kJ4GuK,Q1CilJpHhC,IAAK,6BACLlG,MAAO,SAAoC6I,EAAgB0Z,GACvD,M0C/kJG5hB,MAAA+sB,wBAAA9sB,IAAAiI,EAAP0Z,M1CklJArc,IAAK,0BACLlG,MAAO,SAAiC6I,GACpC,M0ChlJGlI,MAAA+sB,wBAAAhtB,IAAPmI,M1CmlJA3C,IAAK,uBACLlG,MAAO,SAA8B6I,EAAgBgmB,GACjD,M0CjlJGluB,MAAAgtB,oBAAA/sB,IAAAiI,EAAPgmB,M1ColJA3oB,IAAK,sBACLlG,MAAO,SAA6B6I,GAChC,M0CllJGlI,MAAAgtB,oBAAAjtB,IAAPmI,M1CwlJA3C,IAAK,oBACLlG,MAAO,SAA2B+W,GAC9B,G0CrlJA2O,GAAM3O,EAAA3O,QAAV,gB1CslJI,OAAOzH,M0CrlJJitB,iBAAAhtB,IAA0BmW,EAA1BrC,GAAAgR,GAAA5lB,KAAsD,SAAAnC,G1CslJrD,M0CtlJqDoZ,Q1C0lJ7D7Q,IAAK,yBACLlG,MAAO,SAAgCiW,GACnC,GAAIjH,G0CzlJiDrO,KAAtBmuB,EAAA9tB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,K1C6lJ/B,I0C5lJAiV,EAAA1X,QAAyBuwB,EAA7BvwB,O1C6lJQ,M0C5lJGU,SAAAC,QAAP4vB,E1C8lJA,I0C5lJAC,GAAmB9Y,EAAe6Y,EAAtCvwB,O1C6lJI,OAAOoC,M0C5lJJitB,iBAAAhtB,IAA0BmuB,EAA1Bra,GAAAqa,GAAAjvB,KAAsE,W1C8lJrE,MADAgvB,G0C5lJJnrB,KAAAorB,GACO/f,EAAA4f,uBAAA3Y,EAAP6Y,Q1CgmJJ5oB,IAAK,sBACLlG,MAAO,SAA6B0U,GAChC,GAAItF,G0C7lJRzO,I1C+lJI,OAAOA,M0C/lJJ8sB,gBAAA/sB,IAAAgU,GAAA5U,KAAkC,SAAA4lB,G1CgmJjC,M0C/lJGtW,GAAA4f,2BAAPtJ,Q1CmmJJxf,IAAK,6BACLlG,MAAO,SAAoCivB,GACvC,GAAIC,G0CjmJ+CvuB,KAAfwuB,IAAAnuB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,E1CqmJpC,O0CpmJJiuB,G1CumJWtuB,K0CpmJJ2tB,mBAAwBW,EAAxBva,IAAA,GAAA5U,KAAwD,SAAA8Q,G1CsmJvD,MADAqe,G0CpmJJhZ,eAAArF,EACAue,EAGOD,EAAAE,mBAAPH,GAFIA,IALGhwB,QAAAC,QAAP,S1C+mJJgH,IAAK,8BACLlG,MAAO,SAAqCqvB,GACxC,GAAIC,G0CtmJkE3uB,KAA7BwuB,IAAAnuB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GAAeuuB,EAAAvuB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,K1C2mJxD,O0C1mJAquB,GAAA9wB,QAA8BgxB,EAAlChxB,OACWU,QAAAC,QAAPqwB,G1C4mJO5uB,K0C1mJJquB,2BAAgCK,EAAoBE,EAApDhxB,QAAA4wB,GAAArvB,KAAkF,SAAAoI,G1C6mJjF,MAFAqnB,G0C1mJJ5rB,KAAAuE,GAEOonB,EAAAE,4BAAAH,EAAAF,EAAPI,Q1C8mJJrpB,IAAK,qBACLlG,MAAO,SAA4B6I,GAC/B,GAAI4mB,G0C5mJsC9uB,KAAfwuB,IAAAnuB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,E1CgnJ3B,OAAOL,M0C/mJJitB,iBAAA8B,cAAA,iBAAA7mB,GAAA/I,KAA2E,SAAA6vB,G1CgnJ1E,M0C/mJJR,G1CknJWQ,E0C/mJJpY,IAAS,SAAAmO,G1CgnJR,M0ChnJa+J,GAAAG,oBAALlK,KAFZiK,O1C0nJRzpB,IAAK,oBACLlG,MAAO,SAA2BwiB,GAC9B,GAAIqN,G0CpnJmDlvB,KAAhCmvB,IAAA9uB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,E1CwnJvB,OAAOL,M0CvnJJ8sB,gBAAAiC,cAAA,gBAAoDlN,EAApD9N,IAAA5U,KAAyE,SAAA0U,G1CwnJxE,G0CvnJAub,GAAAvb,EAASwb,KAAY,SAAAjyB,EAAAkyB,G1CwnJjB,M0CvnJGlyB,GAAAsqB,WAAA6H,UAAyBD,EAAA5H,WAAhC6H,W1C0nJA,O0CvnJJJ,GAIOD,EAAAL,4BAAAO,GAAP,GAHIA,O1C8nJR7pB,IAAK,gCACLlG,MAAO,SAAuCwiB,GAC1C,GAAI2N,G0CxnJRxvB,I1C0nJI,OAAOA,M0C1nJJstB,kBAAAzL,GAAA,GAAA1iB,KAAgD,SAAAswB,G1C2nJ/C,M0C3nJ2DD,GAAAnB,2BAAgCoB,EAAWA,EAAA7xB,OAAvD,S1C+nJvD2H,IAAK,uBACLlG,MAAO,SAA8BwiB,EAAakG,GAC9C,MAAO/nB,M0C7nJJstB,kBAAAzL,GAAA1iB,KAAyC,SAAAouB,G1C8nJxC,G0C7nJAjY,K1C8nJAiY,G0C7nJJ5tB,QAAsB,SAAA4H,G1C8nJd,MAAOA,G0C9nJqB+N,eAAAoa,OAAmC,SAAAzyB,G1C+nJ3D,M0C/nJ8DA,GAAA8qB,WAAHA,IAAnCpoB,QAAuE,SAAA1C,G1CioJ/F,M0CjoJoGqY,GAAAtS,KAAL/F,M1CooJvG,I0CnoJA0yB,GAAJ,I1CyoJI,OALAra,G0CnoJJ3V,QAAuB,SAAA1C,IACf,MAAA0yB,GAAkBA,EAAAlI,UAAA8H,UAA6BtyB,EAAAwqB,UAAnD8H,a1CooJQI,E0CnoJJ1yB,KAGR0yB,O1CuoJJpqB,IAAK,oBACLlG,MAAO,SAA2B0lB,GAC9B,M0CpoJG,IAAAU,GAAAiD,YAAgB3D,EAAhBhR,GAAwBgR,EAA/Bld,Y1CuoJAtC,IAAK,yBACLlG,MAAO,SAAgC0lB,GACnC,G0CroJAxM,GAAmB,GAAA8M,GAAvBX,gB1CsoJInM,G0CroJJoM,QAA2BI,EAA3BJ,O1CsoJI,I0CroJA3d,GAAOuR,EAAX9L,S1CsoJI,I0CroJJzF,EAAU,C1CsoJF,G0CroJA4oB,GAAY,GAAAvpB,GAAhB2B,S1CsoJI4nB,G0CroJJC,YAAA7oB,EAA4BhH,KAA5BmsB,oB1CsoJI5T,E0CroJJuX,QAAAF,G1CuoJA,M0CroJJrX,M1CwoJAhT,IAAK,qBACLlG,MAAO,SAA4B0lB,GAC/B,GAAIgL,G0CroJR/vB,KAAImpB,EAAMnpB,KAAA4L,aAAkBmZ,EAAAlD,YAA5Bha,SACIga,EAAc7hB,KAAA+tB,kBAAuBhJ,EAAzClD,aACI/G,EAAgBqO,EAAAC,oBAAwBrE,EAAAjK,cAA5CjH,QACItM,EAAe,GAAA+d,GAAA+B,aAAAxF,EAAA/G,EAA6CiK,EAAhEhR,IACIwE,EAAmBvY,KAAAgwB,uBAA4BjL,EAAnDxM,iB1CwoJI,OAAOnS,GAASO,M0CvoJbspB,UAAA1oB,EAAAwd,EAAmC,SAAAmL,EAAAC,EAAA5qB,EAAAI,EAAAyqB,EAAAvN,G1CwoJlC,M0CvoJJ,gBAAItd,EACAsc,EAEJ,qBAAItc,EACAgT,EAEJ,kBAAIhT,EACAuV,EAEJ,iBAAIvV,EACAgC,EAGJ,mBAAIhC,E1CwoJW4qB,E0CvoJJvZ,IAAa,SAAAyZ,G1CwoJZ,M0CxoJuBN,GAAAd,oBAAAoB,EAAX9oB,K1CsoJpB,YAQRhC,IAAK,sBACLlG,MAAO,SAA6B0lB,EAAKxd,GACrC,G0C1oJA6O,GAAgB,GAAAwP,GAAAoC,cAAkBjD,EAAlBgD,SAAAxgB,EAA8Cwd,EAAlEhR,IACIwE,EAAmBvY,KAAAgwB,uBAA4BjL,EAAnDxM,iB1C2oJI,OAAOnS,GAASO,M0C1oJbspB,UAAA7Z,EAAA2O,EAAoC,SAAAmL,EAAAC,EAAA5qB,EAAAI,EAAAyqB,EAAAvN,G1C2oJnC,M0C1oJJ,iBAAItd,EACAgC,EAEJ,qBAAIhC,EACAgT,E1CyoJA,aAOLsT,GACTC,EAAewE,eAEI,WACjB,QAASrE,G0CxoJT7oB,EAAAmpB,G1CyoJIxoB,EAAgB/D,K0CxoJhBisB,G1C0oJAjsB,K0C1oJAoD,KAAAA,E1C2oJApD,K0C1oJAusB,UAAAA,E1CkuJJ,MArFArnB,GAAa+mB,IACT1mB,IAAK,MACLlG,MAAO,SAAakG,GAChB,GAAIgrB,G0C5oJRvwB,I1C8oJI,OAAOA,M0C9oJJusB,UAAAptB,KAAoB,SAAAqC,G1C+oJnB,M0C9oJGA,GAAAE,YAAe6uB,EAAfntB,MAAAlB,YACUquB,EADVntB,MAAArD,IAAPwF,Q1CkpJJA,IAAK,gBACLlG,MAAO,SAAuBmxB,EAAWjrB,GACrC,GAAIkrB,G0C9oJRzwB,I1CgpJI,OAAOA,M0ChpJJusB,UAAAptB,KAAoB,SAAAqC,G1CipJnB,M0ChpJGA,GAAAE,YAAe+uB,EAAfrtB,MAAAlB,YACUuuB,EADVrtB,MAAA3C,MAAA+vB,GAAA9tB,OAAP6C,Q1CopJJA,IAAK,aACLlG,MAAO,SAAoBmxB,EAAWjrB,GAClC,GAAImrB,G0ChpJR1wB,I1CkpJI,OAAOA,M0ClpJJusB,UAAAptB,KAAoB,SAAAqC,G1CmpJnB,M0ClpJGA,GAAAE,YAAegvB,EAAfttB,MAAAlB,YACUwuB,EADVttB,MAAA3C,MAAA+vB,GAAAzwB,IAAPwF,Q1CspJJA,IAAK,MACLlG,MAAO,SAAakG,EAAKrF,GACrB,GAAIywB,G0ClpJR3wB,I1CopJI,OAAOA,M0CppJJusB,UAAAptB,KAAoB,SAAAqC,G1CqpJnB,G0CppJEovB,GAAKpvB,EAAAE,YAAeivB,EAAfvtB,KAAX,Y1CspJI,OADAwtB,G0CppJJ1uB,YAAeyuB,EAAfvtB,MAAAoV,IAAAtY,EAAAqF,GACOqrB,EAAPxvB,c1CwpJJmE,IAAK,SACLlG,MAAO,SAAgBkG,GACnB,GAAIsrB,G0CrpJR7wB,I1CupJI,OAAOA,M0CvpJJusB,UAAAptB,KAAoB,SAAAqC,G1CwpJnB,G0CvpJEovB,GAAKpvB,EAAAE,YAAemvB,EAAfztB,KAAX,Y1CypJI,OADAwtB,G0CvpJJ1uB,YAAe2uB,EAAfztB,M1CupJIwtB,U0CvpJJrrB,GACOqrB,EAAPxvB,c1C2pJJmE,IAAK,QACLlG,MAAO,WACH,GAAIyxB,G0CxpJR9wB,I1C0pJI,OAAOA,M0C1pJJusB,UAAAptB,KAAoB,SAAAqC,G1C2pJnB,G0C1pJEovB,GAAKpvB,EAAAE,YAAeovB,EAAf1tB,KAAX,Y1C4pJI,OADAwtB,G0C1pJJ1uB,YAAe4uB,EAAf1tB,MAAA6a,QACO2S,EAAPxvB,c1C8pJJmE,IAAK,OACLlG,MAAO,WACH,GAAI0xB,G0C3pJR/wB,I1C6pJI,OAAOA,M0C7pJJusB,UAAAptB,KAAoB,SAAAqC,G1C8pJnB,G0C7pJEovB,GAAKpvB,EAAAE,YAAeqvB,EAA1B3tB,MACMwP,KACA7R,EAAQ6vB,EAAA1uB,YAAe6uB,EAA7B3tB,K1CuqJI,Q0CnqJHrC,EAAAiwB,kBAA0BjwB,EAA3BgC,eAAApF,KAAAoD,EAA4D,SAAAJ,GACxDA,I1C8pJIiS,E0C7pJJ5P,KAAUrC,EAAV4E,K1C8pJI5E,EAAAA,iBAGGiwB,E0C7pJJxvB,SAAAjC,KAAiB,W1C8pJhB,M0C9pJgByT,W1CoqJzBqZ,QAGRgF,uBAAuB,GAAGC,mBAAmB,GAAGC,kBAAkB,GAAGC,oBAAoB,GAAGC,mBAAmB,GAAGztB,IAAM,EAAEkG,WAAW,WAAWC,WAAW,aAAaunB,IAAI,SAAS10B,EAAQkB,EAAOJ,GACvM,YAuCA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAvC5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ4yB,cAAgBrtB,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M2CxiK/IslB,EAAA9oB,EAAA,wBACA6oB,EAAA7oB,EAAA,mBACAwJ,EAAAxJ,EAAA,YACA0oB,EAAA1oB,EAAA,oBACAqmB,EAAArmB,EAAA,yDACAsZ,EAAAtZ,EAAA,iBACAsmB,EAAAtmB,EAAA,yDACAyoB,EAAAzoB,EAAA,wBACAgpB,EAAAhpB,EAAA,qBACAyJ,EAAAzJ,EAAA,YACA20B,EAAA30B,EAAA,gB3C8jKoBc,GAAQ4yB,cAAgB,WACxC,QAASA,KACLvsB,EAAgB/D,KAAMswB,GAEtBtwB,KAAKwxB,aA4RT,MAzRAtsB,GAAaorB,IACT/qB,IAAK,cACLlG,MAAO,SAAqB8pB,GACxBnpB,K2CjkKJwxB,UAAerI,EAAf/lB,MAAA+lB,K3CokKA5jB,IAAK,eACLlG,MAAO,SAAsB+D,GACzB,M2ClkKGpD,MAAAwxB,UAAPpuB,M3CwkKAmC,IAAK,iBACLlG,MAAO,SAAwBwI,EAASiT,GACpC,K2CpkKL,4D3C0kKCvV,IAAK,kBACLlG,MAAO,SAAyBkG,EAAKsc,GACjC,K2CvkKJ,6D3C0kKAtc,IAAK,sBACLlG,MAAO,SAA6B0U,GAChC,K2CxkKJ,iE3C8kKAxO,IAAK,mBACLlG,MAAO,SAA0BkI,GAC7B,K2C3kKJ,6D3C8kKAhC,IAAK,6BACLlG,MAAO,SAAoC6I,EAAgB0Z,GACvD,K2C5kKJ,6D3C+kKArc,IAAK,0BACLlG,MAAO,SAAiC6I,GACpC,K2C7kKJ,qE3CglKA3C,IAAK,uBACLlG,MAAO,SAA8B6I,EAAgBgmB,GACjD,K2C9kKJ,kE3CilKA3oB,IAAK,sBACLlG,MAAO,SAA6B6I,GAChC,K2C/kKJ,iE3CqlKA3C,IAAK,oBACLlG,MAAO,SAA2B+W,GAC9B,K2CjlKJ,+D3CulKA7Q,IAAK,oBACLlG,MAAO,SAA2BwiB,GAC9B,K2CplKJ,+D3CulKAtc,IAAK,eACLlG,MAAO,SAAsBwuB,GACzB,K2CrlKJ,0D3CwlKAtoB,IAAK,yBACLlG,MAAO,SAAgCwiB,GACnC,K2CtlKJ,oE3CylKAtc,IAAK,gBACLlG,MAAO,SAAuBgX,GAC1B,K2CvlKJ,0D3C0lKA9Q,IAAK,oBACLlG,MAAO,SAA2BwiB,EAAa/G,GAC3C,K2CvlKJ,+D3C0lKAvV,IAAK,qBACLlG,MAAO,SAA4BkI,GAC/B,K2CxlKJ,gE3C2lKAhC,IAAK,sBACLlG,MAAO,SAA6B+W,GAChC,K2CzlKJ,iE3C4lKA7Q,IAAK,kBACLlG,MAAO,SAAyBgX,GAC5B,K2C1lKJ,6D3CgmKA9Q,IAAK,oBACLlG,MAAO,SAA2BwI,EAASiT,GACvC,G2C7lKA+G,GAAc,GAAA4D,GAAAiD,YAAgBtiB,EAAAO,MAAhBqN,OAAlBnM,E3C8lKI,O2C7lKG7H,MAAAyxB,gBAAA5P,EAAP/G,M3CmmKAvV,IAAK,sBACLlG,MAAO,SAA6BwI,EAASiT,GACzC,MAAO9a,M2ChmKJ0xB,eAAA7pB,EAAAiT,GAAA3b,KAAiD,SAAAT,G3CimKhD,Q2CjmKgDA,I3CgmK7CsB,S2ChmKuE,SAAApB,G3CmmK1E,O2CnmK0E,O3CumKlF2G,IAAK,yBACLlG,MAAO,SAAgCwI,EAASiT,GAC5C,M2CrmKGjT,GAAA,IAAgB6d,EAAAkD,gBAAA+I,YAAvB7W,M3C6mKAvV,IAAK,qBACLlG,MAAO,SAA4BwI,EAASiT,EAAe9T,GACvD,GAAIP,G2CvmKRzG,I3CymKI,OAAOA,M2CzmKJ0xB,eAAA7pB,EAAAiT,GAAA3b,KAAiD,SAAA0iB,G3C0mKhD,G2CzmKJ,MAAIA,E3C0mKI,MAAOpb,G2CzmKJ6mB,kBAAAzL,GAAA1iB,KAAyC,SAAAswB,G3C0mKxCA,E2CzmKJ9vB,QAAmB,SAAA0V,G3C0mKX,G2CzmKAA,EAAJuc,Y3C0mKQ,K2CzmKE,IAAA3O,GAAAgB,oCAAwC,oDAAsDpC,EAApGha,Q3C2mKA,I2CzmKAwN,EAAAiS,QAAoBpR,EAAA0B,WAApBC,WAA4CxC,EAAAiS,QAAoBpR,EAAA0B,WAApEia,U3C0mKQ,K2CzmKE,IAAA3O,GAAAiB,oCACF,gEAAArJ,EADJ,iE3C6mKJ,I2CvmKAvC,GAAmBkX,EAAWA,EAAA7xB,OAAX,GAAvB2a,gB3CymKI,Q2CvmKGsJ,EAAPtJ,I3C4mKJsJ,G2CvmKUpb,EAAAqrB,kBAAAjqB,EAAdiT,E3CwmKI,I2CvmKAvC,GAAmB,GAAA8M,GAAvBX,iBACIkL,EAAY,GAAAvpB,GAAhB2B,S3C0mKI,OAFA4nB,G2CvmKJmC,aAAuB/qB,EAAvBgrB,uB3CwmKIzZ,E2CvmKJuX,QAAAF,GACOtxB,QAAA2zB,KAAYpQ,EAAnBtJ,MA1BGpZ,KA2BC,SAAA+yB,G3CwmKA,G2CvmKA3qB,GAAe,GAAA+d,GAAA+B,aAAiB6K,EAAjB,GAAnBpX,E3C0mKI,OAFAvT,G2CvmKJgR,iBAAgC2Z,EAAhC,G3CwmKI3qB,E2CvmKJsgB,YAA2B,GAA3BF,MACOlhB,EAAA0rB,iBAAP5qB,K3C0kKOvH,S2CzkKF,SAAAnD,G3CwmKD,K2CvmKJA,Q3C2mKJ0I,IAAK,sBACLlG,MAAO,SAA6BwI,EAASiT,GACzC,GAAI7T,G2CxmKRjH,I3C0mKI,OAAOA,M2C1mKJ0xB,eAAA7pB,EAAAiT,GAAA3b,KAAiD,SAAA0iB,G3C2mKhD,M2C1mKJA,GAGO5a,EAAAmrB,8BAAPvQ,GAFI,U3CgnKRtc,IAAK,gCACLlG,MAAO,SAAuCwiB,GAC1C,MAAO7hB,M2C3mKJstB,kBAAAzL,GAAA1iB,KAAyC,SAAAswB,G3C4mKxC,M2C5mKoDA,GAAWA,EAAA7xB,OAAvB,Q3CgnKhD2H,IAAK,uBACLlG,MAAO,SAA8BwiB,EAAakG,GAC9C,MAAO/nB,M2C9mKJstB,kBAAAzL,GAAA1iB,KAAyC,SAAAouB,G3C+mKxC,G2C9mKAjY,K3C+mKAiY,G2C9mKJ5tB,QAAsB,SAAA4H,G3C+mKd,MAAOA,G2C/mKqB+N,eAAAoa,OAAmC,SAAAzyB,G3CgnK3D,M2ChnK8DA,GAAA8qB,WAAHA,IAAnCpoB,QAAuE,SAAA1C,G3CknK/F,M2ClnKoGqY,GAAAtS,KAAL/F,M3CqnKvG,I2CpnKA0yB,GAAJ,I3C0nKI,OALAra,G2CpnKJ3V,QAAuB,SAAA1C,IACf,MAAA0yB,GAAkBA,EAAAlI,UAAA8H,UAA6BtyB,EAAAwqB,UAAnD8H,a3CqnKQI,E2CpnKJ1yB,KAGR0yB,O3CwnKJpqB,IAAK,mBACLlG,MAAO,SAA0B+W,GAE7B,MADAA,G2CrnKJyR,YAA4B,GAA5BF,MACO3nB,KAAAqyB,kBAAPjc,M3CwnKA7Q,IAAK,SACLlG,MAAO,SAAgBnC,GAGnB,GAFAA,E2CtnKJ2qB,YAAgB,GAAhBF,MAEGzqB,YAAAooB,GAAH+B,a3CunKQ,M2CtnKGrnB,MAAAmyB,iBAAPj1B,E3CynKA,I2CtnKDA,YAAA0oB,GAAHoC,c3CunKQ,M2CtnKGhoB,MAAAqyB,kBAAPn1B,E3CynKA,M2CtnKE,yBAANA,K3CynKAqI,IAAK,SACLlG,MAAO,SAAgBnC,GAEnB,M2CvnKDA,aAAAooB,GAAH+B,aACWrnB,KAAAwtB,mBAAPtwB,GAGDA,YAAA0oB,GAAHoC,cACWhoB,KAAA4tB,oBAAP1wB,GAGDA,YAAAq0B,GAAHe,UACWtyB,KAAP0tB,kBAGGpvB,QAAAE,OAAe,yBAAtBtB,M3C0nKAqI,IAAK,oBACLlG,MAAO,SAA2B0lB,GAC9B,M2CvnKJA,M3C0nKAxf,IAAK,yBACLlG,MAAO,SAAgC0lB,GACnC,M2CxnKJA,M3C2nKAxf,IAAK,qBACLlG,MAAO,SAA4B0lB,GAC/B,M2CznKJA,M3C4nKAxf,IAAK,sBACLlG,MAAO,SAA6B0lB,EAAKxd,GACrC,M2C1nKJwd,O3C8nKGuL,OAGRiC,wDAAwD,GAAGC,wDAAwD,GAAGvB,uBAAuB,GAAGC,mBAAmB,GAAGC,kBAAkB,GAAGsB,uBAAuB,GAAGC,gBAAgB,GAAGzQ,gBAAgB,GAAGmP,oBAAoB,GAAGtnB,WAAW,WAAWC,WAAW,aAAa4oB,IAAI,SAAS/1B,EAAQkB,EAAOJ,GAC/V,YAuBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GApCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQk1B,oBAAsB3vB,MAE9B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M4C33K/I0rB,EAAAlvB,EAAA,oBACAwJ,EAAAxJ,EAAA,W5Co5K0Bc,GAAQk1B,oBAAsB,SAAU1G,GAG9D,QAAS0G,KACL,GAAIC,GAEAC,EAAOrsB,EAAOssB,CAElBhvB,GAAgB/D,KAAM4yB,EAEtB,KAAK,GAAII,GAAO3yB,UAAUzC,OAAQoB,EAAOf,MAAM+0B,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IACzEj0B,EAAKi0B,GAAQ5yB,UAAU4yB,EAG3B,OAAeH,GAASrsB,EAAQxC,EAA2BjE,MAAO6yB,EAAOD,EAAoB/tB,WAAahF,OAAOqG,eAAe0sB,IAAsBj1B,KAAKuB,MAAM2zB,GAAO7yB,MAAMkzB,OAAOl0B,KAAiByH,EAAM0sB,qBAAwB1sB,EAAM8mB,iBAAoB9mB,EAAM6O,kBAAqB7O,EAAM2sB,qBAAwB3sB,EAAM4sB,kBAAqB5sB,EAAM6sB,cAAjVP,EAAkWD,EAAQ7uB,EAA2BwC,EAAOssB,GA0JvZ,MAvKA3uB,GAAUwuB,EAAqB1G,GAgB/BhnB,EAAa0tB,IACTrtB,IAAK,oBACLlG,MAAO,SAA2BwiB,GAC9B,GAAI5a,G4C75KRjH,I5C46KI,OAbAoG,GAASO,M4C/5KbuY,OAAalf,KAAbmzB,kBAAsC,SAAAI,EAAAhuB,GAC/BguB,IAAH1R,SACW5a,GAAAksB,kBAAP5tB,K5Cm6KJvF,K4C/5KJutB,cAAAmC,OAA0B,SAAAnoB,G5Cg6KlB,M4Ch6KgCA,GAAAsa,YAAA9N,IAA+B8N,EAA7C9N,KAA1BsJ,UAAA1d,QAAyGK,KAAzGwtB,mBAAAxtB,M5Ck6KIA,K4Cj6KJszB,WAAA5D,OAAuB,SAAArZ,G5Ck6Kf,M4Cl6K0BA,GAAAwL,YAAA9N,IAA4B8N,EAAvC9N,KAAvBsJ,UAAA1d,QAAgGK,KAAhG0tB,gBAAA1tB,MAEO1B,QAAPC,a5Cs6KAgH,IAAK,qBACLlG,MAAO,SAA4BkI,GAC/B,G4Cp6KA9G,GAAQT,KAAAutB,cAAA7N,QAAZnY,E5C46KI,O4C36KD9G,O5Cq6KKT,K4Cp6KJutB,cAAAjQ,OAAA7c,EAAA,G5Cu6KAT,K4Cp6KJsV,eAAAoa,OAA2B,SAAAtZ,G5Cq6KnB,M4Cr6KkCA,GAAA7O,aAAAwM,KAAkCxM,EAAjDwM,KAA3BsJ,UAAA1d,QAA+GK,KAA/G4tB,oBAAA5tB,MACO1B,QAAPC,a5Cy6KAgH,IAAK,sBACLlG,MAAO,SAA6B+W,GAChC,G4Cv6KA3V,GAAQT,KAAAsV,eAAAoK,QAAZtJ,E5C26KI,O4C16KD3V,O5Cw6KKT,K4Cv6KJsV,eAAAgI,OAAA7c,EAAA,GAEGnC,QAAPC,a5C06KAgH,IAAK,kBACLlG,MAAO,SAAyBgX,GAC5B,G4Cx6KA5V,GAAQT,KAAAszB,WAAA5T,QAAZrJ,E5C46KI,O4C36KD5V,O5Cy6KKT,K4Cx6KJszB,WAAAhW,OAAA7c,EAAA,GAEGnC,QAAPC,a5C86KAgH,IAAK,iBACLlG,MAAO,SAAwBwI,EAASiT,GACpC,G4C16KAvV,GAAMvF,KAAAotB,uBAAAvlB,EAAViT,E5C26KI,O4C16KGxc,SAAAC,QAAgByB,KAAAmzB,kBAAvB5tB,O5Cg7KAA,IAAK,kBACLlG,MAAO,SAAyBwiB,EAAa/G,GACzC,G4C76KAvV,GAAMvF,KAAAotB,uBAA4BvL,EAA5Bha,QAAViT,E5C+6KI,OADA9a,M4C76KJmzB,kBAAA5tB,GAAAsc,EACOvjB,QAAAC,QAAPsjB,M5Cg7KAtc,IAAK,eACLlG,MAAO,SAAsBwuB,GACzB,MAAOvvB,S4C96KJC,QAAA6H,EAAAO,MAAgB6sB,KAAWxzB,KAAXszB,WAA4B,SAAAt2B,G5C+6K3C,M4C/6K8CA,GAAA+W,KAAH8Z,Q5Cm7KnDtoB,IAAK,yBACLlG,MAAO,SAAgCwiB,GACnC,MAAOvjB,S4Cj7KJC,QAAA6H,EAAAO,MAAgB6sB,KAAWxzB,KAAXszB,WAA4B,SAAAt2B,G5Ck7K3C,M4Cl7K8CA,GAAA6kB,YAAA9N,KAAmB8N,EAAtB9N,S5Cs7KnDxO,IAAK,gBACLlG,MAAO,SAAuBgX,GAE1B,MADArW,M4Cp7KJszB,WAAAtwB,KAAAqT,GACO/X,QAAAC,QAAP8X,M5Cu7KA9Q,IAAK,sBACLlG,MAAO,SAA6B0U,GAChC,MAAOzV,S4Cr7KJC,QAAA6H,EAAAO,MAAgB6sB,KAAWxzB,KAAXutB,cAA+B,SAAAkG,G5Cs7K9C,M4Ct7KkDA,GAAA1f,KAAJA,Q5C67KtDxO,IAAK,mBACLlG,MAAO,SAA0BkI,GAE7B,MADAvH,M4C17KJutB,cAAAvqB,KAAAuE,GACOjJ,QAAAC,QAAPgJ,M5C67KAhC,IAAK,6BACLlG,MAAO,SAAoC6I,EAAgB0Z,GAEvD,MADA5hB,M4C37KJozB,kBAAAlrB,GAAA0Z,EACOtjB,QAAAC,QAAPqjB,M5C87KArc,IAAK,0BACLlG,MAAO,SAAiC6I,GACpC,M4C57KG5J,SAAAC,QAAgByB,KAAAozB,kBAAvBlrB,O5C+7KA3C,IAAK,uBACLlG,MAAO,SAA8B6I,EAAgBgmB,GAEjD,MADAluB,M4C77KJqzB,eAAAnrB,GAAAgmB,EACO5vB,QAAAC,QAAP2vB,M5Cg8KA3oB,IAAK,sBACLlG,MAAO,SAA6B6I,GAChC,M4C97KG5J,SAAAC,QAAgByB,KAAAqzB,eAAvBnrB,O5Co8KA3C,IAAK,oBACLlG,MAAO,SAA2B+W,GAE9B,MADApW,M4Cj8KJsV,eAAAtS,KAAAoT,GACO9X,QAAAC,QAAP6X,M5Cu8KA7Q,IAAK,oBACLlG,MAAO,SAA2BwiB,GAC9B,MAAOvjB,S4Cp8KJC,QAAAyB,KAAgButB,cAAAmC,OAA0B,SAAA7yB,G5Cq8KzC,M4Cr8K4CA,GAAAglB,YAAA9N,IAAoB8N,EAAvB9N,KAA1Bsb,KAAsE,SAAAjyB,EAAAkyB,G5Cu8KrF,M4Ct8KGlyB,GAAAsqB,WAAA6H,UAAyBD,EAAA5H,WAAhC6H,iB5C28KDqD,GACT9G,EAAewE,iBAEde,mBAAmB,GAAGtnB,WAAW,aAAa2pB,IAAI,SAAS92B,EAAQkB,EAAOJ,GAC7E,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQi2B,qBAAuB1wB,MAE/B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M6C/kL/IgG,GADAxJ,EAAA,oBACAA,EAAA,aACAg3B,EAAAh3B,EAAA,0B7C0mL2Bc,GAAQi2B,qBAAuB,SAAUE,GAGhE,QAASF,KAGL,MAFA5vB,GAAgB/D,KAAM2zB,GAEf1vB,EAA2BjE,MAAO2zB,EAAqB9uB,WAAahF,OAAOqG,eAAeytB,IAAuBz0B,MAAMc,KAAMK,YAuHxI,MA5HA+D,GAAUuvB,EAAsBE,GAQhC3uB,EAAayuB,IACTpuB,IAAK,uBACLlG,MAAO,SAA8By0B,GACjC,G6ChnL6BC,GAAA1zB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAM,C7CknLnC,OAAO,I6CjnLJ/B,SAAY,SAAAC,G7CknLXy1B,W6CjnLO,W7CknLHz1B,E6CjnLJu1B,IADJC,Q7C0nLJxuB,IAAK,iBACLlG,MAAO,SAAwBwI,EAASiT,GACpC,G6CpnLAvV,GAAMvF,KAAAotB,uBAAAvlB,EAAViT,E7CqnLI,O6CpnLG9a,MAAAi0B,qBAA0Bj0B,KAAAmzB,kBAAjC5tB,O7C0nLAA,IAAK,kBACLlG,MAAO,SAAyBwiB,EAAa/G,GACzC,G6CvnLAvV,GAAMvF,KAAAotB,uBAA4BvL,EAA5Bha,QAAViT,E7CynLI,OADA9a,M6CvnLJmzB,kBAAA5tB,GAAAsc,EACO7hB,KAAAi0B,qBAAPpS,M7C0nLAtc,IAAK,eACLlG,MAAO,SAAsBwuB,GACzB,MAAO7tB,M6CxnLJi0B,qBAAA7tB,EAAAO,MAA0B6sB,KAAWxzB,KAAXszB,WAA4B,SAAAt2B,G7CynLrD,M6CznLwDA,GAAA+W,KAAH8Z,Q7C6nL7DtoB,IAAK,yBACLlG,MAAO,SAAgCwiB,GACnC,MAAO7hB,M6C3nLJi0B,qBAAA7tB,EAAAO,MAA0B6sB,KAAWxzB,KAAXszB,WAA4B,SAAAt2B,G7C4nLrD,M6C5nLwDA,GAAA6kB,YAAA9N,KAAmB8N,EAAtB9N,S7CgoL7DxO,IAAK,gBACLlG,MAAO,SAAuBgX,GAE1B,MADArW,M6C9nLJszB,WAAAtwB,KAAAqT,GACOrW,KAAAi0B,qBAAP5d,M7CioLA9Q,IAAK,sBACLlG,MAAO,SAA6B0U,GAChC,MAAO/T,M6C/nLJi0B,qBAAA7tB,EAAAO,MAA0B6sB,KAAWxzB,KAAXutB,cAA+B,SAAAkG,G7CgoLxD,M6ChoL4DA,GAAA1f,KAAJA,Q7CuoLhExO,IAAK,mBACLlG,MAAO,SAA0BkI,GAE7B,MADAvH,M6CpoLJutB,cAAAvqB,KAAAuE,GACOvH,KAAAi0B,qBAAP1sB,M7CuoLAhC,IAAK,6BACLlG,MAAO,SAAoC6I,EAAgB0Z,GAEvD,MADA5hB,M6CroLJozB,kBAAAlrB,GAAA0Z,EACO5hB,KAAAi0B,qBAAPrS,M7CwoLArc,IAAK,0BACLlG,MAAO,SAAiC6I,GACpC,M6CtoLGlI,MAAAi0B,qBAA0Bj0B,KAAAozB,kBAAjClrB,O7CyoLA3C,IAAK,uBACLlG,MAAO,SAA8B6I,EAAgBgmB,GAEjD,MADAluB,M6CvoLJqzB,eAAAnrB,GAAAgmB,EACOluB,KAAAi0B,qBAAP/F,M7C0oLA3oB,IAAK,sBACLlG,MAAO,SAA6B6I,GAChC,M6CxoLGlI,MAAAi0B,qBAA0Bj0B,KAAAqzB,eAAjCnrB,O7C8oLA3C,IAAK,oBACLlG,MAAO,SAA2B+W,GAE9B,MADApW,M6C3oLJsV,eAAAtS,KAAAoT,GACOpW,KAAAi0B,qBAAP7d,M7CipLA7Q,IAAK,oBACLlG,MAAO,SAA2BwiB,GAC9B,MAAO7hB,M6C9oLJi0B,qBAAAj0B,KAA0ButB,cAAAmC,OAA0B,SAAA7yB,G7C+oLnD,M6C/oLsDA,GAAAglB,YAAA9N,IAAoB8N,EAAvB9N,KAA1Bsb,KAAsE,SAAAjyB,EAAAkyB,G7CipL/F,M6ChpLGlyB,GAAAsqB,WAAA6H,UAAyBD,EAAA5H,WAAhC6H,gB7CopLJhqB,IAAK,SACLlG,MAAO,SAAgBsG,QAKpBguB,GACTC,EAAqBhB,uBAEpBvB,mBAAmB,GAAG6C,0BAA0B,GAAGnqB,WAAW,aAAaoqB,IAAI,SAASv3B,EAAQkB,EAAOJ,GAC1G,YAeA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAf5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ40B,UAAYrvB,M8ClvLpB,IAEAmD,IAFAxJ,EAAA,gBACAA,EAAA,oBACAA,EAAA,YACAA,GAAA,uB9CgwLgBc,EAAQ40B,U8CtvLpB,QAAAA,GAAAzQ,EAAA9N,G9CuvLAhQ,EAAgB/D,K8CvvLasyB,G9CyvL7BtyB,K8C7vLA6nB,YAAc,KAKP,OAAA9T,GAAH9Q,SAAgB8Q,E9C2vLhB/T,K8C1vLI+T,GAAU3N,EAAAO,MAAVqN,O9C4vLJhU,K8C1vLI+T,GAAAA,E9C6vLR/T,K8C1vLI6hB,YAAAA,K9C6vLLmE,sBAAsB,GAAGU,eAAe,GAAGG,mBAAmB,GAAG9c,WAAW,aAAaqqB,IAAI,SAASx3B,EAAQkB,EAAOJ,GACxH,YAEAmC,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,G+CrxLE3B,GAAAka,Y/CwxLTC,U+CxxLsB,Y/CyxLtB0P,S+CzxLsB,W/C0xLtB8M,Q+C1xLsB,U/C2xLtBpM,S+C3xLsB,W/C4xLtBqM,Q+C5xLsB,U/C6xLtBC,O+C7xLsB,S/C8xLtB/M,Q+C9xLsB,U/C+xLtBqK,U+C/xLsB,Y/CgyLtB2C,U+ChyLsB,kB/CmyLpBC,IAAI,SAAS73B,EAAQkB,EAAOJ,GAClC,YA+BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCA/B5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsd,IAAM/X,MAEd,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MgDjzL/IgG,EAAAxJ,EAAA,YACAsZ,EAAAtZ,EAAA,gBACAyjB,EAAAzjB,EAAA,0CACAumB,EAAAvmB,EAAA,iDACAomB,EAAApmB,EAAA,2CACA2oB,EAAA3oB,EAAA,wBACA20B,EAAA30B,EAAA,ehDs0LUc,GAAQsd,IAAM,WACpB,QAASA,GgDvzLT5X,EAAA0R,EAAA7J,EAAAxC,GhDwzLI1E,EAAgB/D,KgDxzL0Dgb,GhD0zL1Ehb,KgDl0LJiQ,ShDm0LIjQ,KgDj0LJ6a,eAAc,EhDk0LV7a,KgDj0LJ00B,sBhDm0LI10B,KgD7zLAoD,KAAAA,EhD8zLApD,KgD7zLA0pB,uBAA8B1pB,KAA9B20B,4BhD8zLA30B,KgD7zLA2pB,iBAAwB3pB,KAAxB40B,sBhD8zLA50B,KgD7zLA8U,cAAAA,EhD8zLA9U,KgD7zLAiL,qBAAAA,EhD8zLAjL,KgD7zLAyI,sBAAAA,EhDg/LJ,MAhLAvD,GAAa8V,IACTzV,IAAK,mBACLlG,MAAO,SAA0ByV,GAC7B9U,KgD/zLJ8U,cAAAA,KhDk0LAvP,IAAK,UACLlG,MAAO,SAAiBgW,GACpB,GAAI5O,GgDh0LRzG,IhDk0LIoG,GAASiD,IgDl0LbqH,MAAA,2BAAA2E,EhDm0LI,IgDl0LJgB,EhDm0LI,OAAOrW,MgDl0LJ+hB,oBAAA1M,GAAAlW,KAAyC,SAAAkW,GhDo0LxC,GgDl0LAA,EAAAiS,SAAqBpR,EAAA0B,WAAzBqQ,ShDu0LQ,MAHA5S,GgDl0LJiS,OAAmBpR,EAAA0B,WAAnB0c,QhDm0LIjf,EgDl0LJsC,WAAuBzB,EAAA0B,WAAvBC,UhDm0LIzR,EAASiD,IgDl0LbqH,MAAU,8BAAV2E,GACAA,ChDq0LA,IgDl0LA5O,EAAAijB,yBAAgCjjB,EAAAijB,uBAAAxc,SAAqCmI,EAAzEyF,ehDm0LQ,KgDl0LE,IAAAqI,GAAAmB,8BAAN,wChDq0LA,IgDl0LD7d,EAAAkjB,mBAA0BljB,EAAAkjB,iBAAAzc,SAA+BmI,EAA5D5I,WhDm0LQ,KgDl0LE,IAAAuW,GAAAe,wBAAN,kChDs0LA,OADA1O,GgDj0LJoS,UAAsB,GAAtBE,MhDk0LWrpB,QgDj0LJ2zB,KAAaxrB,EAAAouB,aAAAxf,EAA6Ba,EAAA0B,WAA9Byc,SAAmD5tB,EAAAquB,UAAnDzf,GAA8E5O,EAAAsuB,eAA1F1f,KAAAlW,KAAgI,SAAAsiB,GhD20L/H,MATApM,GgDj0LMoM,EAAV,GhDk0LIpL,EgDj0LQoL,EAAZ,GACApL,IhDk0LQA,EgDj0LQ,GAAAkb,GAAAe,UAAcjd,EAA1BwM,chDm0LApb,EgDj0LJiuB,mBAAA/0B,QAAgC,SAAAq1B,GhDk0LxB,MgDl0LkCA,GAAA1tB,UAAV+N,KAEzB5O,EAAAwuB,UAAA5f,EAAPgB,OA5BDlX,KA+BC,SAAAkW,GhDo0LA,MADAjP,GAASiD,IgDl0LbqH,MAAA,2BAAA2E,GACAA,IhDiyLOrV,SgDhyLF,SAAAnD,GhD60LD,MgD50LAA,aAAAwjB,GAAJS,yBhDm0LQ1a,EAASiD,IgDl0LbygB,KAAA,yCAAAjtB,GhDm0LIwY,EgDl0LJiS,OAAmBpR,EAAA0B,WAAnB0c,QhDm0LIjf,EgDl0LJsC,WAAuBzB,EAAA0B,WAAvB0c,UhDo0LIluB,EAASiD,IgDl0LbzK,MAAA,wCAAA/B,GhDm0LIwY,EgDl0LJiS,OAAmBpR,EAAA0B,WAAnB2c,OhDm0LIlf,EgDl0LJsC,WAAuBzB,EAAA0B,WAAvB2c,QhDo0LAlf,EgDl0LJyS,kBAAA9kB,KAAAnG,GACAwY,IA7CGlW,KA8CC,SAAAkW,GhDm0LA,MgDl0LJgB,GhDm0Le5P,EgDl0LJqO,cAAAogB,cAAA7e,GAAAlX,KAAiD,WhDm0LhD,MgDn0LgDkW,KAE5DA,IhDgxLOrV,SgD/wLF,SAAAnD,GhD20LD,MANAuJ,GAASiD,IgDp0LbzK,MAAA,6CAAA/B,GACAA,GhDq0LQwY,EgDp0LJyS,kBAAA9kB,KAAAnG,GhDs0LAwY,EgDp0LJiS,OAAmBpR,EAAA0B,WAAnB2c,OhDq0LIlf,EgDp0LJsC,WAAuBzB,EAAA0B,WAAvB2c,OACAlf,IA1DGlW,KA2DC,SAAAkW,GhDs0LA,MADAA,GgDp0LJuS,QAAoB,GAApBD,MhDq0LWrpB,QgDp0LJ2zB,KAAaxrB,EAAAqO,cAAAqgB,OAAD9f,GAAuC5O,EAAAsuB,eAAnD1f,KAAAlW,KAAyF,SAAAsiB,GhDq0LxF,MgDr0L6FA,GAAL,OA7D7FtiB,KA8DC,SAAAkW,GhDu0LA,IACI5O,EgDt0LJiuB,mBAAA/0B,QAAgC,SAAAq1B,GhDu0LxB,MgDv0LkCA,GAAAttB,SAAV2N,KAClC,MAAAxY,GhDy0LMuJ,EAASiD,IgDx0LbzK,MAAA,8CAAA/B,GhD00LA,MgDx0LJwY,QhD40LJ9P,IAAK,eACLlG,MAAO,SAAsBkI,EAAc+f,GAEvC,MADA/f,GgDx0LJ+f,OAAAA,EACOtnB,KAAA8U,cAAAqgB,OAAP5tB,MhD20LAhC,IAAK,iBACLlG,MAAO,SAAwBkI,GAC3B,MgDz0LGvH,MAAA8U,cAAAgN,2BAA8Cva,EAA9CwM,GAA+D/T,KAAAyV,YAAtElO,OhD+0LAhC,IAAK,YACLlG,MAAO,SAAmBgW,EAAWgB,GACjC,KgD50LE,+CAAiDrW,KAAvDoD,QhD+0LAmC,IAAK,4BACLlG,MAAO,WACH,OACI6N,SgD70LM,SAAAZ,GhD80LF,MgD90LcA,GAAZY,gBhDm1Ld3H,IAAK,sBACLlG,MAAO,WACH,OACI6N,SgDh1LM,SAAAlG,GhDi1LF,OgDj1LE,OhDs1LdzB,IAAK,UACLlG,MAAO,SAAiB6Q,GACpBlQ,KgDn1LJiQ,MAAAjN,KAAAkN,MhDs1LA3K,IAAK,sBACLlG,MAAO,SAA6BwU,GAChC,KgDn1LE,yDAA2D7T,KAAjEoD,QhD21LAmC,IAAK,cACLlG,MAAO,SAAqBgW,GACxB,OACIE,MgDv1LD,EhDw1LCC,QgDt1LKH,EAAAiS,SAAqBpR,EAAA0B,WAArBC,UAAA,EAFb,MhD41LAtS,IAAK,4BACLlG,MAAO,SAAmC21B,GACtCh1B,KgDv1LJ00B,mBAAA1xB,KAAAgyB,MhD01LAzvB,IAAK,sBACLlG,MAAO,SAA6BgW,GAChC,MAAOrV,MgDx1LJ8U,cAAAsgB,oBAAuC/f,EAAvCtB,IAAA5U,KAA0D,SAAA+uB,GhD41LzD,MgD31LD3I,GAAAyB,mBAAAC,OAAHiH,GhDy1LQ7Y,EgDx1LJggB,OAEJhgB,OhD41LJ9P,IAAK,YACLlG,MAAO,SAAmBgW,GACtB,MgDz1LGrV,MAAA8U,cAAA2Y,uBAA0CpY,EAAjDwM,gBhD41LAtc,IAAK,qBACLlG,MAAO,SAA4BgX,EAAWyE,GAC1C,KgD11LE,wDAA0D9a,KAAhEoD,ShD81LG4X,OAGR+O,0CAA0C,GAAGuL,yCAAyC,GAAGtL,gDAAgD,GAAG7D,uBAAuB,GAAGoP,eAAe,GAAG7O,eAAe,GAAG3c,WAAW,aAAayrB,IAAI,SAAS54B,EAAQkB,EAAOJ,GACjQ,YAmDA,SAAS+3B,GAAmBz3B,GACxB,GAAIC,MAAM2sB,QAAQ5sB,GAAM,CACpB,IAAK,GAAIX,GAAI,EAAGq4B,EAAOz3B,MAAMD,EAAIJ,QAASP,EAAIW,EAAIJ,OAAQP,IACtDq4B,EAAKr4B,GAAKW,EAAIX,EACjB,OAAOq4B,GAER,MAAOz3B,OAAMwkB,KAAKzkB,GAI1B,QAAS+F,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA1EpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ6f,UAAYta,MAEpB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MAI3IsF,EAAO,QAAS3F,GAAI4F,EAAQC,EAAUC,GACvB,OAAXF,IAAiBA,EAASG,SAAS5H,UAAU,IAAI6H,GAAOlG,OAAOmG,yBAAyBL,EAAQC,EAAU,IAAa3C,SAAT8C,EAAoB,CAClI,GAAIE,GAASpG,OAAOqG,eAAeP,EAAQ,OAAe,QAAXM,EAC3C,OAEOlG,EAAIkG,EAAQL,EAAUC,GAE9B,GAAI,SAAWE,GAClB,MAAOA,GAAK1G,KAEZ,IAAI8G,GAASJ,EAAKhG,GAAI,IAAekD,SAAXkD,EAEzB,MAAOA,GAAOxI,KAAKkI,IiD/iM5BO,EAAAxJ,EAAA,YACAsZ,EAAAtZ,EAAA,gBACA+d,EAAA/d,EAAA,SAEAyoB,EAAAzoB,EAAA,uBACAqZ,EAAArZ,EAAA,UACAyjB,EAAAzjB,EAAA,0CACAwmB,EAAAxmB,EAAA,qCACAA,GAAA,wBjD0lMgBc,EAAQ6f,UAAY,SAAU3C,GAG1C,QAAS2C,GiDtlMTna,EAAA0R,EAAA7J,EAAAxC,GjDylMI,MAFA1E,GAAgB/D,KiDvlM0Dud,GjDylMnEtZ,EAA2BjE,MAAOud,EAAU1Y,WAAahF,OAAOqG,eAAeqX,IAAY5f,KAAKqC,KiDzlM7BoD,EAAA0R,EAAA7J,EAAAxC,IjD+vM9E,MA3KArE,GAAUmZ,EiDplMV3C,GjD4lMA1V,EAAaqY,IACThY,IAAK,UACLlG,MAAO,SAAiB0oB,GACpB,MAAO3hB,GAASO,MiD1lMb6sB,KAAWxzB,KAAXiQ,MAAuB,SAAAhT,GjD2lMtB,MiD3lMyBA,GAAAmG,MAAH2kB,OjD+lM9BxiB,IAAK,YACLlG,MAAO,SAAmBgW,EAAWgB,GAEjC,MAAOrW,MiD7lMJ21B,eAAAtgB,EAAAgB,GAAAlX,KAA+C,SAAAy2B,GjD8lM9C,GiD7lMJ,MAAIA,EAAmC,CjD8lM/B,GiD7lMJC,EjD+lMIzvB,GAASiD,IiD/lMbqH,MAAA,iCAAAklB,GjDgmMIvgB,EiD/lMJiS,OAAmBsO,EAAnBtO,OjDgmMIjS,EiD/lMJsC,WAAuBie,EAAvBje,YjDgmMKke,EAAwBxgB,EiD/lM7ByS,mBAAA9kB,KAAA9D,MAAA22B,EAAAJ,EAAoCG,EAApC9N,oBjDimMA,MiD/lMJzS,QjDmmMJ9P,IAAK,iBACLlG,MAAO,SAAwBkI,EAAc8O,GACzC,GAAIpP,GiDjmMkEjH,KAAtC81B,EAAAz1B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,KAAM01B,EAAA11B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAkB,KACjE21B,EAAJ,CjDymMI,IiDxmMJF,IjDsmMQE,EiDrmMQh2B,KAAAiQ,MAAAyP,QAAAoW,GAAZ,GAEDE,GAAWh2B,KAAAiQ,MAAdrS,OjDsmMQ,MiDrmMGU,SAAAC,QAAPw3B,EjDumMA,IiDrmMA7lB,GAAOlQ,KAAAiQ,MAAX+lB,EjDsmMI,OAAOh2B,MiDrmMJi2B,WAAA/lB,EAAA3I,EAAA8O,GAAAlX,KAAoD,SAAAiX,GjDsmMnD,MiDrmMDA,GAAAkR,SAAyBpR,EAAA0B,WAA5BC,UACIzB,EAEGnP,EAAA0uB,eAAApuB,EAAA8O,EAAAnG,EAAPkG,QjD0mMJ7Q,IAAK,aACLlG,MAAO,SAAoB6Q,EAAM3I,EAAc8O,GAC3C,GAAIzJ,GiDvmMR5M,KAAI6hB,EAActa,EAAlBsa,WjD0mMI,OAAO7hB,MiDzmMJ+hB,oBAAAxa,GAAApI,KAA4C,SAAAoI,GjD0mM3C,GiDzmMAA,EAAJ2uB,ajD0mMQ,KiDzmME,IAAA7V,GAAAS,wBAAN,4BjD2mMA,OiDzmMGlU,GAAAkI,cAAAqhB,qBAAAtU,EAAqD3R,EAA5D9M,QAJGjE,KAMC,SAAAi3B,GACAxpB,EAAAypB,wCAAA9uB,EAAJ6uB,KjD0mMQhwB,EAASiD,IiDxmMbygB,KAAS,sDAAwD5Z,EAAxD9M,KAAT,aAA2Fye,EAA3Fha,SjDymMIuuB,EiDxmMJ,KjD2mMA,IiDxmMAE,GAAJF,CjD0mMI,KiDxmMCxpB,EAAA2pB,YAAAD,EAAA/uB,EAAL2I,GjDymMQ,MiDxmMJomB,EjD2mMAA,GiDxmMmB/uB,EAAAivB,oBAAiCtmB,EAAxD9M,KjD0mMI,IiDxmMAqzB,GAAc,MAAAL,GAA6BA,EAAA9O,SAA6BpR,EAAA0B,WAA5EC,UACI6e,EAAY,MAAAN,IAAhBK,EACIE,EAAgBF,GAAevmB,EAAnC0mB,wBjDynMI,OiDvnMJF,IjDymMQJ,EiDxmMJ/d,iBAAwC6d,EAAxC7d,iBACI6d,EAAA7d,iBAAAse,YAAJ,ajDymMQP,EiDxmMJ/d,iBAAA8U,OAAA,ajD4mMAiJ,EiDvmMJ/d,iBAAwC,GAAA8M,GAAxCX,iBAEJiS,IjDwmMQL,EiDvmMJ3e,WAAkCzB,EAAA0B,WAAlCC,UjDwmMIye,EiDvmMJhP,OAA8BpR,EAAA0B,WAA9BC,UjDwmMIye,EiDvmMJ/d,iBAAAC,IAAA,WAAA,IjD0mMO5L,EiDvmMJkI,cAAAgiB,iBAAAR,GAAAn3B,KAA+D,SAAA43B,GjDymM9D,MADAT,GiDvmMJS,EACAJ,GjDwmMQvwB,EAASiD,IiDvmMbygB,KAAS,uCAAyC5Z,EAAzC9M,KAAT,KACAkzB,IjDymMAlwB,EAASiD,IiDvmMbygB,KAAS,oBAAsB5Z,EAAtB9M,KAAT,KACO8M,EAAA/H,QAAAmuB,EAAPjgB,MAPGlX,KAQC,WjDymMA,MADAm3B,GiDvmMJ/d,iBAAAC,IAAA,YAAA,GACA8d,IjD6lMO1pB,SiD5lMD,SAAA/P,GjDymMF,MADA0K,GiDvmMJ+f,OAAsBpR,EAAA0B,WAAtB2c,OjDwmMW3nB,EiDvmMJkI,cAAAqgB,OAAA5tB,GAAApI,KAA6C,SAAAoI,GjDwmM5C,KiDxmM2D1K,SAtDpEsC,KAyDC,SAAAm3B,GjD8mMA,MiD7mMAA,GAAAhP,QAA+BpR,EAAA0B,WAA/BqQ,UACGqO,EAAAhP,QAA+BpR,EAAA0B,WADtC0c,UjD0mMQ/sB,EiDvmMJ+f,OAAsBpR,EAAA0B,WAAtBqQ,UjD0mMOrb,EiDvmMJmoB,eAAAxtB,GAAApI,KAAuC,WjDwmMtC,MiDxmMsCm3B,UjD6mMlD/wB,IAAK,0CACLlG,MAAO,SAAiDkI,EAAc6O,GAClE,MiDzmMG,OAAAA,GAAyBA,EAAA7O,aAAAwM,IAAiCxM,EAAjEwM,MjD4mMAxO,IAAK,cACLlG,MAAO,SAAqB+2B,EAAmB/gB,EAAWnF,GACtD,GiD1mMJ8mB,EjDinMI,IALIA,EiD3mMR,MAAIZ,EACalgB,EAAA0B,WAAb2P,SAGa6O,EAAb9O,OAGA0P,GAAc9gB,EAAA0B,WAAlB4P,QjD0mMQ,KiDzmME,IAAApE,GAAAoB,oBAAN,0CjD4mMA,OiDzmMGwS,IAAc9gB,EAAA0B,WAAdC,WAAsC3H,EAA7C2K,iBjD4mMAtV,IAAK,cACLlG,MAAO,SAAqBgW,GACxB,GiD1mMA4hB,GAAiB5hB,EAAAC,eAArB1X,MjD+mMI,OiD9mMDsY,GAAA0B,WAAAC,YAAyBxC,EAAAC,eAAyBD,EAAAC,eAAA1X,OAAzB,GAA5B0pB,QAEC2P,IAEMhW,KAAAhE,MAAW,IAAAga,EAAuBj3B,KAAAiQ,MAAzCrS,WjD6mMA2H,IAAK,UACLlG,MAAO,WACH,GiD3mMJ,IAAGgB,UAAAzC,OjD4mMK,MAAO8H,GAAK6X,EAAUrf,UAAU2G,WAAahF,OAAOqG,eAAeqX,EAAUrf,WAAY,UAAW8B,MAAMrC,KAAKqC,KiD3mM9FK,UAArB,GjD6mMA,IiD3mMA6P,GAAO,GAAA+F,GAAA6B,KAASzX,UAAT,GAAuBL,KAAlC8U,cjD6mMI,OADA5E,GiD3mMJ+kB,UAAiB50B,UAAjB,GjD4mMWqF,EAAK6X,EAAUrf,UAAU2G,WAAahF,OAAOqG,eAAeqX,EAAUrf,WAAY,UAAW8B,MAAMrC,KAAKqC,KiD3mMnHkQ,OjD+mMGqN,GACT5C,EAAKK,OAEJsa,yCAAyC,GAAGrL,qCAAqC,GAAGjE,sBAAsB,GAAGC,QAAQ,GAAGE,uBAAuB,GAAGO,eAAe,GAAGE,SAAS,GAAG7c,WAAW,aAAamtB,IAAI,SAASt6B,EAAQkB,EAAOJ,GACvO,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAUnH1C,GAAQy5B,sBAAwB,WACxD,QAASA,KACLpzB,EAAgB/D,KAAMm3B,GAgB1B,MAbAjyB,GAAaiyB,IACT5xB,IkD7yMJ,alDgzMIlG,MAAO,SAAoBkI,OAK3BhC,IAAK,YACLlG,MAAO,SAAmBkI,QAGvB4vB,UAGLC,IAAI,SAASx6B,EAAQkB,EAAOJ,GAClC,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAzB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQsqB,cAAgB/kB,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MmD30M/IgG,EAAAxJ,EAAA,YACAyoB,EAAAzoB,EAAA,uBACAsZ,EAAAtZ,EAAA,gBACA0oB,EAAA1oB,EAAA;AnD61MoBc,EAAQsqB,cAAgB,WACxC,QAASA,GmDz0MTD,EAAAxgB,EAAAwM,GnD00MIhQ,EAAgB/D,KmD10MoBgoB,GnD40MpChoB,KmDv1MJsnB,OAASpR,EAAA0B,WAAW2P,SnDw1MhBvnB,KmDv1MJ2X,WAAazB,EAAA0B,WAAW4c,UnDw1MpBx0B,KmDv1MJuY,iBAAmB,GAAA8M,GASqBX,iBnD+0MpC1kB,KmDt1MJynB,UAAY,GAAAE,MnDu1MR3nB,KmDt1MJ4nB,QAAU,KnDu1MN5nB,KmDt1MJ6nB,YAAc,KnDu1MV7nB,KmDr1MJmhB,eAAgB,EnDs1MZnhB,KmDr1MJ8nB,qBAGO,OAAA/T,GAAH9Q,SAAgB8Q,EnDq1MZ/T,KmDp1MA+T,GAAU3N,EAAAO,MAAVqN,OnDs1MAhU,KmDp1MA+T,GAAAA,EnDu1MJ/T,KmDp1MA+nB,SAAAA,EnDq1MA/nB,KmDp1MAuH,aAAAA,EnDq1MAvH,KmDp1MAkI,eAAsBX,EAAtBwM,GnDo4MJ,MA5CA7O,GAAa8iB,IACTziB,IAAK,mBACLlG,MAAO,WACH,MmDv1MGW,MAAAuH,aAAPuT,iBnD01MAvV,IAAK,yBACLlG,MAAO,WACH,MmDx1MGW,MAAAuH,aAAPgR,oBnD21MAhT,IAAK,UACLlG,MAAO,WACH,MmDz1MGW,MAAAuH,aAAPkF,anD41MAlH,IAAK,SACLlG,MAAO,WACH,GmD31MD8oB,GAAA9nB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,MAAuB+nB,IAAA/nB,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,GAEtBgoB,EAAcjiB,EAAAO,MAAlB2hB,anDi2MI,OmDh2MJF,KnD61MQC,EmD51MUjiB,EAAAO,MAAd4hB,WnD+1MOniB,EAASO,MmD51Mb6hB,UAAAH,EAAiBroB,KAAkB,SAAAX,EAAAkG,EAAAI,EAAAkd,GnD61MlC,MmD51MDsF,GAAAzI,QAAAna,MACC,MAED,oBAAAma,QAAAna,MACQlG,EAAPoI,SAEDpI,YAAH9B,OACW6I,EAAAO,MAAAyB,YAAP/I,GAGAA,YAAAimB,GAAJ+B,aACWhoB,EAAAoI,QAAA,kBAAP2gB,GnD21MA,cAOLJ,OAGRhC,sBAAsB,GAAGE,kBAAkB,GAAGQ,eAAe,GAAG3c,WAAW,aAAastB,IAAI,SAASz6B,EAAQkB,EAAOJ,GACvH,YAuBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAvB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQoa,KAAO7U,MAEf,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MoDt7M/I8V,EAAAtZ,EAAA,gBACAwJ,EAAAxJ,EAAA,YAEAyjB,EAAAzjB,EAAA,yCpDo8MWc,GAAQoa,KAAO,WACtB,QAASA,GoDx7MT1U,EAAA0R,GpDy7MI/Q,EAAgB/D,KoDz7Ma8X,GpD27M7B9X,KoDl8MJ6a,eAAgB,EpDm8MZ7a,KoDl8MJ42B,0BAAyB,EpDm8MrB52B,KoDl8MJiQ,SpDm8MIjQ,KoDl8MJ00B,sBpDo8MI10B,KoD/7MAoD,KAAAA,EpDg8MApD,KoD/7MA8U,cAAAA,EpDykNJ,MAvIA5P,GAAa4S,IACTvS,IAAK,mBACLlG,MAAO,SAA0ByV,GAC7B9U,KoDj8MJ8U,cAAAA,KpDu8MAvP,IAAK,UACLlG,MAAO,SAAiB+W,EAAeC,GACnC,GAAI5P,GoDp8MRzG,IpDs8MIoG,GAASiD,IoDt8MbqH,MAAU,wBAA0B1Q,KAApCoD,MpDu8MIgT,EoDt8MJqR,UAA0B,GAA1BE,MpDu8MIvR,EoDt8MJkR,OAAuBpR,EAAA0B,WAAvByc,OpDu8MI,IoDt8MJ1c,EpDu8MI,OAAO3X,MoDt8MJ8U,cAAAqgB,OAAA/e,GAAAjX,KAA8C,SAAAiX,GpD88M7C,MAPAuB,GoDt8MSzB,EAAA0B,WAAb4c,UpDw8MI/tB,EoDt8MJiuB,mBAAA/0B,QAAgC,SAAAq1B,GpDu8MxB,MoDv8MkCA,GAAAsC,WAAVlhB,KpDy8M5B3P,EoDx8MJtD,KAAUiT,EAAVmC,kBAEO9R,EAAAwuB,UAAA7e,EAAPC,KANGlX,KAOC,SAAAymB,GpD68MA,GAJAxP,EoDx8MJwP,EpDy8MIjO,EoDx8MSvB,EAAbuB,WAGIvB,EAAJ+K,cpDy8MQ,KoDx8ME,IAAAd,GAAAS,wBAAN,4BpD68MA,OAFA1K,GoDx8MJkR,OAAuBpR,EAAA0B,WAAvBC,UpDy8MIzR,EAASiD,IoDx8MbqH,MAAU,gCAAkCjK,EAA5CrD,MACAgT,IpDo7MOpW,SoDn7MF,SAAAnD,GpDk9MD,MATAuZ,GoDx8MJkR,OAAuB7gB,EAAA8wB,mBAAvB16B,GpDy8MI8a,EoDx8MSvB,EAAbkR,OpDy8MIlR,EoDx8MJ0R,kBAAA9kB,KAAAnG,GAEIuZ,EAAAkR,QAAwBpR,EAAA0B,WAA5B0c,QpDy8MQluB,EAASiD,IoDx8MbygB,KAAS,4CAA8CrjB,EAA9CrD,KAAA,YAAwEgT,EAAA7O,aAAAsa,YAAjFha,QAAAhL,GpD08MIuJ,EAASiD,IoDv8MbzK,MAAU,wCAA0C6H,EAA1CrD,KAAA,YAAoEgT,EAAA7O,aAAAsa,YAA9Eha,QAAAhL,GAEJuZ,IA9BGjX,KA+BC,SAAAiX,GpDw8MA,IACIA,EoDv8MJuB,WAAAA,EpDw8MIlR,EoDv8MJiuB,mBAAA/0B,QAAgC,SAAAq1B,GpDw8MxB,MoDx8MkCA,GAAAwC,UAAVphB,KAEpC,MAAAvZ,GpDy8MQuJ,EAASiD,IoDx8MbzK,MAAU,2CAA6C6H,EAA7CrD,KAAA,YAAuEgT,EAAA7O,aAAAsa,YAAjFha,QAAAhL,GpD88MA,MAHAuZ,GoDx8MJwR,QAAwB,GAAxBD,MpDy8MIvR,EoDx8MJuB,WAAAA,EAGOlR,EAAAqO,cAAAqgB,OAAP/e,KA5CGjX,KA6CC,SAAAiX,GpDw8MA,IACI3P,EoDv8MJgxB,MAAWrhB,EAAXmC,kBAEJ,MAAA1b,GpDu8MQuJ,EAASiD,IoDt8MbzK,MAAU,6DAA+D6H,EAA/DrD,KAAA,YAAyFgT,EAAA7O,aAAAsa,YAAnGha,QAAAhL,GpDu8MIuZ,EoDt8MJ0R,kBAAA9kB,KAAAnG,GpDy8MA,IACI4J,EoDt8MJgxB,MAAWrhB,EAAXmC,kBAEJ,MAAA1b,GpDs8MQuJ,EAASiD,IoDr8MbzK,MAAU,6DAA+D6H,EAA/DrD,KAAA,YAAyFgT,EAAA7O,aAAAsa,YAAnGha,QAAAhL,GpDs8MIuZ,EoDr8MJ0R,kBAAA9kB,KAAAnG,GpD28MA,MADAuJ,GAASiD,IoDr8MbqH,MAAU,4BAA8B0F,EAAxCrC,IACAqC,OpDy8MJ7Q,IAAK,qBACLlG,MAAO,SAA4BxC,GAC/B,MoDr8MAA,aAAAwjB,GAAJS,wBACW5K,EAAA0B,WAAP0c,QAGOpe,EAAA0B,WAAP2c,UpD88MJhvB,IAAK,YACLlG,MAAO,SAAmB+W,EAAeC,OAQzC9Q,IAAK,OACLlG,MAAO,SAAckZ,OAQrBhT,IAAK,QACLlG,MAAO,SAAekZ,OAOtBhT,IAAK,cACLlG,MAAO,SAAqB+W,GACxB,OACIb,MoD78MD,EpD88MCC,QoD58MKY,EAAAkR,SAAyBpR,EAAA0B,WAAzBC,UAAA,EAFb,OpDm9MGC,OAGRwd,yCAAyC,GAAG5O,eAAe,GAAG3c,WAAW,aAAa2tB,IAAI,SAAS96B,EAAQkB,EAAOJ,GACrH,YAmCA,SAASunB,GAAwBnmB,GAC/B,GAAIA,GAAOA,EAAIomB,WACb,MAAOpmB,EAEP,IAAIqmB,KAAY,IAAW,MAAPrmB,EAClB,IAAK,GAAIyG,KAAOzG,GACVe,OAAO3B,UAAU6K,eAAepL,KAAKmB,EAAKyG,KAAM4f,EAAO5f,GAAOzG,EAAIyG,GAEpD,OAArB4f,GAAAA,WAAiBrmB,EAAWqmB,EAzCjCtlB,OAAOC,eAAepC,EAAS,cAC7B2B,OAAO,IAET3B,EAAQi6B,OAAS10B,MAEjB,IAAIoH,GAAezN,EAAQ,iBqDnmN3BiD,QAAA+S,KAAAvI,GAAA1K,QAAA,SAAA4F,GrDsmNc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YqDxmNJ,ErDymNI1E,IAAK,WACH,MAAOsK,GqD1mNb9E,OrD+mNA,IAAIqyB,GAAah7B,EAAQ,eqD9mNzBiD,QAAA+S,KAAAglB,GAAAj4B,QAAA,SAAA4F,GrDinNc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,YqDnnNJ,ErDonNI1E,IAAK,WACH,MAAO63B,GqDrnNbryB,OAJA,IAAA7E,GAAA9D,EAAA,kBrDgoNI+6B,EAAS1S,EAAwBvkB,EAcrChD,GAAQi6B,OAASA,IAEdE,iBAAiB,GAAGC,eAAe,GAAGC,iBAAiB,KAAKC,IAAI,SAASp7B,EAAQkB,EAAOJ,GAC3F,YA2BA,SAASuG,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAGpR,QAASP,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAvC5B,GAAIG,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQwO,mBAAqBxO,EAAQu6B,yBAA2Bh1B,MAEhE,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MsDhqN/IolB,EAAA5oB,EAAA,mCACAsZ,EAAAtZ,EAAA,uBACA6oB,EAAA7oB,EAAA,yBACAwJ,EAAAxJ,EAAA,YtD2rNIq7B,EAA2Bv6B,EAAQu6B,yBsD9qNnC,QAAAA,GAAAzxB,GtD+qNAzC,EAAgB/D,KsD/qNIi4B,GtDirNpBj4B,KsD1rNAk4B,aAAe,atD4rNfl4B,KsD3rNAm4B,eAAiB,SAAAz5B,KtD6rNjBsB,KsD5rNAo4B,YAAc,SAAAnf,KtD8rNdjZ,KsD7rNAq4B,aAAe,atD+rNfr4B,KsD9rNAs4B,gBAAkB,atDgsNlBt4B,KsD/rNAu4B,WAAa,SAAA3W,KtDisNb5hB,KsD/rNAw4B,eAAiB,IAGbhyB,GtD+rNAJ,EAASO,MsD9rNLC,WAAA5G,KAAAwG,GtDosNa9I,GAAQwO,mBAAqB,SAAUusB,GAG5D,QAASvsB,GsDvrNT9E,EAAAsxB,EAAA3xB,GtDwrNIhD,EAAgB/D,KsDxrNoCkM,EtD0rNpD,IAAIzF,GAAQxC,EAA2BjE,MAAOkM,EAAmBrH,WAAahF,OAAOqG,eAAegG,IAAqBvO,KsD1rNrEqC,MtD0sNpD,OAdAyG,GsD9rNJmb,SAAW,KtDgsNPnb,EsD5rNAM,OAAc,GAAAkxB,GAAdlxB,GtD6rNAN,EsD5rNAW,WAAAA,EACIsxB,YAAAjT,GAAJiD,atD6rNIjiB,EsD5rNAob,YAAA6W,EtD6rNAjyB,EsD5rNA+iB,sBAAArqB,KAAgC,SAAA8M,GtD6rN5BxF,EsD5rNAkyB,oBtD+rNJlyB,EsD5rNAmyB,iBAAAF,EtD6rNAjyB,EsD5rNAob,YAAmBpb,EAAAmyB,iBAAnB/W,YtD6rNApb,EsD5rNAkyB,iBAEAlyB,EAAAmyB,mBAA0BnyB,EAAAmyB,iBAA9BhH,atD6rNInrB,EsD5rNAiB,SAAcjB,EAAdmyB,kBtD6rNO30B,EsD3rNVwC,KtD6rNDW,EsD5rNAC,6BAlBoDZ,GAmBvDA,GtD6zND,MA3JArC,GAAU8H,EsDrrNVusB,GtDktNAvzB,EAAagH,IACT3G,IAAK,gBACLlG,MAAO,WACH,GAAI4H,GsD9rNRjH,KAAI2D,EAAJ3D,MACIA,KAAA64B,YAAoB74B,KAAA44B,iBAApBhH,aAAJ,MAA6D5xB,KAAA84B,oBAAyB94B,KAAzB4hB,WtDmsNzD5hB,KsDhsNJoH,WAAAqO,YAA4BzV,KAA5B44B,kBAAAz5B,KAAwD,SAAAyiB,GtDisNhD3a,EsDhsNJ8xB,eAAsB,GAAtBpR,MACA/F,ItDisNQ3a,EsDhsNJ2a,SAAAA,EtDisNI3a,EsDhsNJF,OAAAwxB,WAAA56B,KAA4BsJ,EAAAF,OAAAiyB,kBAA5B/xB,EAAA2a,ItDmsNAoS,WsDhsNO,WtDisNHrwB,EsDhsNJg1B,iBACD1xB,EAAAF,OAFHyxB,qBtDssNJjzB,IAAK,YACLlG,MAAO,SAAmBkI,GsDhsNtBA,EAAAsa,YAAA9N,KAAgC/T,KAAA6hB,YAApC9N,KtDqsNI/T,KsDjsNJ44B,iBAAArxB,EtDksNIvH,KsDjsNJ+G,OAAAmxB,aAAAv6B,KAA8BqC,KAAA+G,OAAAiyB,kBAA9Bh5B,UtDosNAuF,IAAK,sBACLlG,MAAO,SAA6BuiB,GAChC,MsDlsNJA,GAGO,IAAAA,EAAApM,QAAyBoM,EAAhCrM,MAFI,KtDusNJhQ,IAAK,2BACLlG,MAAO,SAAkCkI,GACrC,GsDnsNA4hB,GAAMnpB,KAAAoH,WAAAwE,aAA6BrE,EAAAsa,YAAvCha,QtDosNI,OsDnsNGshB,GAAA1T,YAAPlO,MtDssNAhC,IAAK,WACLlG,MAAO,SAAkBkI,GACrB,GAAIqF,GsDpsNR5M,IAAIuH,GAAAsa,YAAA9N,KAAgC/T,KAAA6hB,YAApC9N,KtDysNI/T,KsDtsNJ44B,iBAAArxB,EACI2O,EAAA0B,WAAAC,YAAyBtQ,EAA7B+f,QtDusNQtnB,KsDtsNJoH,WAAA6xB,+BAAAj5B,MtDusNIA,KsDtsNJ4hB,SAAgB5hB,KAAAk5B,yBAAhB3xB,GtDusNIvH,KsDtsNJ+G,OAAAwxB,WAAA56B,KAA4BqC,KAAA+G,OAAAiyB,kBAA5Bh5B,KAAkEA,KAAlE4hB,UtDusNI5hB,KsDtsNJoH,WAAA0tB,UAA0BvtB,EAA1Bsa,aAAA1iB,KAAyD,SAAAT,GtDusNjDkO,EsDtsNJ7F,OAAAoxB,eAAAx6B,KAAgCiP,EAAA7F,OAAAiyB,kBAAhCpsB,EAAsElO,EAAtEsI,QtDqsNAhH,SsDpsNK,SAAAnD,GtDusNDuJ,EAASiD,IsDtsNbzK,MAAA/B,MAIGqZ,EAAA0B,WAAA2c,SAAsBhtB,EAA1B+f,OtDqsNCtnB,KsDpsNJ+G,OAAAqxB,YAAAz6B,KAA6BqC,KAAA+G,OAAAiyB,kBAA7Bh5B,KAAmEuH,EAAnEugB,mBAEO5R,EAAA0B,WAAA0c,UAAuB/sB,EAA3B+f,QtDosNCtnB,KsDnsNJ+G,OAAAsxB,aAAA16B,KAA8BqC,KAAA+G,OAAAiyB,kBAA9Bh5B,UtDusNJuF,IAAK,sBACLlG,MAAO,WACH,GAAIkO,GsDrsN6BvN,KAArBm5B,EAAA94B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,EtDysNZ,QsDxsNCL,KAAD44B,kBAAJO,EtDysNen5B,KsDxsNJoH,WAAA0N,cAAAsd,8BAA4DpyB,KAA5D6hB,aAAA1iB,KAAmF,SAAA8M,GtD0sNlF,MADAsB,GsDxsNJqrB,iBAAA3sB,EACAA,IAGD3N,QAAAC,QAAgByB,KAAvB44B,qBtD2sNArzB,IAAK,OACLlG,MAAO,WACH,GAAI0O,GsDzsNR/N,ItD2sNI,OAAOA,MsD3sNJwpB,sBAAArqB,KAAgC,WtD4sN/B,MsD3sNG4O,GAAA3G,WAAAiuB,KAAqBtnB,EAA5B6qB,uBtD+sNJrzB,IAAK,SACLlG,MAAO,WACH,GAAI8O,GsD5sNRnO,ItD8sNI,OAAOA,MsD9sNJwpB,sBAAArqB,KAAgC,WtD+sN/B,MAAOgP,GsD9sNJ/G,WAAA2E,IAAoBoC,EAAA0T,YAApBha,QAA8CsG,EAAAyqB,iBAAA9d,cAA9CjH,OAA0F1F,EAAAyqB,iBAA1FnsB,WAAAtN,KAAgI,SAAA8M,GtD+sN/HkC,EsD9sNJyqB,iBAAA3sB,EtD+sNIkC,EsD9sNJwqB,kBtD4sNOxqB,SsD3sNF,SAAAtR,GtD+sNDuJ,EAASiD,IsD9sNbzK,MAAA/B,UtDmtNR0I,IAAK,YACLlG,MAAO,WACH,GAAIgP,GsD/sNRrO,ItDitNI,OAAOA,MsDjtNJwpB,sBAAArqB,KAAgC,WtDktN/B,MAAOkP,GsDjtNJjH,WAAAgyB,UAA0B/qB,EAA1BwT,aAAA1iB,KAAiD,WtDstNhD,MAJAkP,GsDjtNJwqB,YAAA,EtDktNIxqB,EsDjtNJtH,OAAAuxB,gBAAA36B,KAAiC0Q,EAAAtH,OAAAiyB,kBAAjC3qB,EAAuEA,EAAvEuqB,kBtDktNIvqB,EsDjtNJjH,WAAA6xB,+BAEA5qB,GAAOA,EAAPuqB,qBtD2sNG54B,SsDzsNF,SAAAnD,GtDktNDuJ,EAASiD,IsDjtNbzK,MAAA/B,StDstNDqP,GACTsZ,EAAsB2B,wBAErBkS,kCAAkC,GAAGC,wBAAwB,GAAGC,sBAAsB,GAAGxvB,WAAW,aAAayvB,IAAI,SAAS58B,EAAQkB,EAAOJ,GAChJ,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAU/H1C,GAAQ+7B,UAAY,WAChC,QAASA,GuDv4NT9uB,EAAA+uB,EAAAC,GvDw4NI51B,EAAgB/D,KuDx4NsBy5B,GvD04NtCz5B,KuD74NJ45B,YvD+4NI,IuD34NI/2B,GAAJ7C,IvD44NAA,MuD34NAyK,OAAc,GAAAovB,QAAdlvB,GvD44NA3K,KuD34NA05B,gBAAuBA,GAAmB,aAC1CC,IvD44NI35B,KuD54NUyK,OAAA9L,QAAAg7B,GvD+4Nd35B,KuD74NAyK,OAAA5B,UAAwB,SAAApF,GvD84NpB,GuD74NIA,EAAAuD,eAAAnH,SACA4D,EAAAuD,KAAA+B,eADA,wBACoDtF,EAAAuD,KAAA+B,eADxD,wBAC2G,CvD64NvG,GuD54NIisB,GAAWnyB,EAAA+2B,UAAmBn2B,EAAAuD,KAAlCyC,qBACIzK,EAAOyE,EAAAuD,KAAX0C,oBACGsrB,GAAH8E,evD64NI96B,EuD54NOg2B,EAAA8E,aAAP96B,IvD84NJg2B,EuD54NA+E,GAAA76B,MAAkB81B,EAAlBgF,QAAAh7B,OvD84NAgB,MuD54NA05B,gBAAA/7B,KAAAkF,EAAoCY,EAApCuD,OvDq8NZ,MApDA9B,GAAau0B,IACTl0B,IAAK,YACLlG,MAAO,WACH,GuD74NAgB,UAAAzC,OAAJ,EvD84NQ,KuD74NE,IAAAoG,WAAN,kDvD+4NAhE,MuD74NJyK,OAAAjB,avD84NQR,YuD74NW3I,UADK,GvD+4NhB4I,euD74NchL,MAAAC,UAAAC,MAAAR,KAAA0C,UAFtB,QvDm5NAkF,IAAK,SACLlG,MAAO,SAAgBwI,EAASC,EAAqBC,GACjD/H,KuD94NJi6B,UAAA,SAAApyB,EAAAC,EAAAC,MvDi5NAxC,IAAK,aACLlG,MAAO,SAAoB6I,GACvBlI,KuD/4NJi6B,UAAA,aAAA/xB,MvDk5NA3C,IAAK,YACLlG,MAAO,SAAmB0I,EAASmyB,EAAW3xB,EAAUC,GACpDxI,KuDh5NJi6B,UAAA,YAAAlyB,EAAAmyB,EAAA3xB,EAAAC,MvDm5NAjD,IAAK,cACLlG,MAAO,SAAqBkK,GACxBvJ,KuDj5NJyK,OAAAjB,YAAAD,MvDo5NAhE,IAAK,YACLlG,MAAO,WACHW,KuDl5NJyK,OAAA2uB,evDq5NA7zB,IAAK,cACLlG,MAAO,SAAqB+D,EAAM4xB,EAAUgF,EAASF,GACjD95B,KuDn5NJ45B,UAAAx2B,IvDo5NQ22B,GuDp5Ne/E,EvDq5NfgF,QuDn5NKA,GAFUh6B,KvDs5Nf85B,auDt5NRA,MvD05NAv0B,IAAK,iBACLlG,MAAO,SAAwB+D,SuDn5NxBpD,MAAA45B,UAAPx2B,OvDw5NGq2B,UAGLU,IAAI,SAASv9B,EAAQkB,EAAOJ,GAClC,YA+CA,SAASuG,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAGpR,QAASP,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCA3D5B,GAAIG,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ4N,YAAc5N,EAAQ08B,kBAAoBn3B,MAElD,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MwD9+N/IgG,EAAAxJ,EAAA,YACA8X,EAAA9X,EAAA,kEACA+oB,EAAA/oB,EAAA,yBACAg7B,EAAAh7B,EAAA,gBACA4oB,EAAA5oB,EAAA,mCACAqW,EAAArW,EAAA,2BACAy9B,EAAAz9B,EAAA,8CACA2oB,EAAA3oB,EAAA,+BACA09B,EAAA19B,EAAA,4CACA29B,EAAA39B,EAAA,8FACA49B,EAAA59B,EAAA,kDACA69B,EAAA79B,EAAA,wDACAsZ,EAAAtZ,EAAA,uBxDohOIw9B,GwDnhOJx9B,EAAA,iDxDmhOwBc,EAAQ08B,kBwD1gO5B,QAAAA,GAAA5zB,GxD2gOAzC,EAAgB/D,KwD3gOIo6B,GxD6gOpBp6B,KwDjhOAuL,UAAY,KxDkhOZvL,KwDjhOAwL,eAAiB,MxDkhOjBxL,KwDjhOA6K,iBAAkB,EAGdrE,GxDihOAJ,EAASO,MwDhhOLC,WAAA5G,KAAAwG,IxDohOM9I,GAAQ4N,YAAc,SAAUmtB,GAG9C,QAASntB,GwDlgOTL,EAAAxC,EAAA1B,GxDmgOIhD,EAAgB/D,KwDngO6CsL,ExDqgO7D,IAAI7E,GAAQxC,EAA2BjE,MAAOsL,EAAYzG,WAAahF,OAAOqG,eAAeoF,IAAc3N,KwDrgO9CqC,MxD4hO7D,OArBAyG,GwD5gOJi0B,yBxD6gOIj0B,EwD3gOJk0B,oCxD4gOIl0B,EwD3gOJm0B,2BxD6gOIn0B,EwDzgOAqE,UAAA/D,GxD0gOAN,EwDzgOAsE,iBAAwBE,EAAxBF,iBxD0gOAtE,EwDzgOAwE,qBAAAA,ExD0gOAxE,EwDzgOAgC,sBAAAA,ExD2gOAhC,EwDxgOAo0B,YAAmBp0B,EAAAM,OAAnBwE,UACI9E,EAAJo0B,WxDygOIp0B,EwDxgOAq0B,WAAgBr0B,EAAAM,OAAhBwE,WxD2gOJ9E,EwDxgOAs0B,iBxD0gOAt0B,EwDxgOAu0B,exD0gOAv0B,EwDtgOAw0B,YAAA,GAAAtV,GAAAoD,YAAmCtiB,EAAhBqO,cAAoCrO,EAApCuiB,UAAoD,SAAAhiB,GxDugOnE,MwDvgO2EP,GAAAy0B,cAARl0B,KAC1EP,ExDsvOD,MA1QArC,GAAUkH,EwDhgOVmtB,GxD+hOAvzB,EAAaoG,IACT/F,IAAK,YACLlG,MAAO,SAAmB0H,GAEtB,MADA/G,MwD3gOJ+G,OAAc,GAAAqzB,GAAdrzB,GACA/G,QxD8gOAuF,IAAK,iBACLlG,MAAO,WwD3gOP,QAAGW,KAAA+G,OAAAyE,exD6gOKxL,KwD5gOJ8U,cAAqB,GAAAulB,GAAAxO,iBAAqB7rB,KAAA+K,iBAArBowB,iBAAA,oBAAkFn7B,KAAA+G,OAAvG8D,iBxD8gOI7K,KwD5gOJ8U,cAAqB,GAAA0lB,GAAA7G,qBAAyB3zB,KAAA+K,iBAA9CowB,qBxDshOJ51B,IAAK,gBACLlG,MAAO,SAAuB2H,GAC1B,MwD5gOGA,GAAAo0B,WAAA,GAAA,GAAA,EAAmCp7B,KAAA+K,iBAA1CswB,sBxD+gOA91B,IAAK,cACLlG,MAAO,SAAqBuqB,GACxB,GwD7gOA7V,GAAJ6V,CxDihOI,OwDhhOCxjB,GAAAO,MAAAqQ,SAAL4S,KxD8gOQ7V,EwD7gOC6V,EAAL7V,IAEG/T,KAAA8U,cAAAwmB,wBAAPvnB,MxDghOAxO,IAAK,YACLlG,MAAO,SAAmBwiB,GACtB,MwD9gOG7hB,MAAA8U,cAAA2Y,uBAAP5L,MxDihOAtc,IAAK,MACLlG,MAAO,SAAawI,EAASC,EAAqBd,GAC9C,GAAIC,GwDhhOqEjH,KAAzC8L,IAAAzL,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,ExDohOhC,OAAOL,MwDnhOJi7B,YAAAlvB,IAAAlE,EAAAC,EAAAd,EAAA8E,GAAA3M,KAAgG,SAAAoI,GxDohO/F,MwDnhOAuE,KAAqCvE,EAAzCqqB,YACIrqB,ExDuhOO,GwDnhOJjJ,SAAY,SAAAC,EAAAC,GxDohOXyI,EwDnhOJ0zB,iCAAsCpzB,EAAtCwM,IAAAxV,SxDwhORgH,IAAK,UACLlG,MAAO,SAAiBuqB,GACpB,MwDphOG5pB,MAAAi7B,YAAA9yB,QAAPyhB,MxDuhOArkB,IAAK,OACLlG,MAAO,SAAcuqB,GACjB,GAAIhd,GwDrhOR5M,KAAI+T,EAAJ6V,CxD4hOI,OwD3hOCxjB,GAAAO,MAAAqQ,SAAL4S,KxDwhOQ7V,EwDvhOC6V,EAAL7V,IxD0hOO/T,KwDvhOJ8U,cAAA+U,oBAAA9V,GAAA5U,KAAgD,SAAAoI,GxDwhO/C,MwDvhOJA,GAIKA,EAALqqB,YxD4hOWhlB,EwDvhOJkI,cAAAymB,qBAAwCh0B,EAAxCwM,GAAyDwR,EAAAyB,mBAAzDC,MAAA9nB,KAAuF,WxDwhOtF,MwDxhOsFoI,MxDmhOtFnB,EAASiD,IwDvhOb6I,KAAS,sCAAwC3K,EAAxC+f,OAAA,cAA8E/f,EAAvFqgB,SACArgB,IxDkhOInB,EAASiD,IwDvhObzK,MAAU,4BAAVgrB,GACA,WxDuiORrkB,IAAK,YACLlG,MAAO,SAAmBwiB,GACtB,GAAItU,GwD5hORvN,IxD8hOI,OAAOA,MwD9hOJ8U,cAAAsd,8BAAAvQ,GAAA1iB,KAAmE,SAAAoI,GxD+hOlE,GwD9hOJA,ExD+hOQ,MwD9hODA,GAAHqqB,YxD+hOerkB,EwD9hOJuH,cAAAymB,qBAAwCh0B,EAAxCwM,GAAyDwR,EAAAyB,mBAAzDC,MAAA9nB,KAAuF,WxD+hOtF,MwD/hOsFoI,KAEvFgG,EAAAuH,cAAA0mB,kBAAA3Z,EAAkDta,EAAzDuT,iBALL3b,KAQC,WxDiiOAoO,EwDhiOJqtB,wBAA6B/Y,EAA7B9N,IAAA8N,OxDoiOJtc,IAAK,eACLlG,MAAO,SAAsBwI,GACzB,MwDjiOG7H,MAAA8U,cAAAlJ,aAAP/D,MxDoiOAtC,IAAK,sBACLlG,MAAO,SAA6BwI,EAASC,GACzC,GwDjiOAqhB,GAAMnpB,KAAA8U,cAAAlJ,aAAV/D,ExDkiOI,OwDjiOGshB,GAAAC,oBAAPthB,MxDuiOAvC,IAAK,sBACLlG,MAAO,SAA6BwI,EAASiT,GACzC,MwDniOA9a,MAAJ66B,UACW76B,KAAPgpB,WAEElO,YAAA7H,GAANkB,gBxDoiOQ2G,EwDniOY9a,KAAAopB,oBAAhBtO,IAEG9a,KAAA8U,cAAA0U,oBAAA3hB,EAAPiT,OxDsiOAvV,IAAK,aACLlG,MAAO,SAAoBkM,GACvB,GAAIkwB,GwDriOUp7B,UxDsiOV0N,EwDriOR/N,IxDuiOIA,MwDviOJgpB,UAAA,GAAA4O,GAAA6B,UAAiBluB,EAAyB,WxDwiOlCnF,EAASiD,IwDviObzK,MAAA,kBACH68B,IxDwiOG,IwDviOAC,GAAmB,SAAA18B,GxDwiOf,OwDviOI+O,EAAA+G,cAAA2Z,mBAAsCzvB,EAA9C,KxD0iOAgB,MwDviOJgpB,UAAA2S,YAAA,YAAwC37B,KAAxCsH,UAAAtH,KAAA07B,GxDwiOI17B,KwDviOJgpB,UAAA2S,YAAA,WAAuC37B,KAAvC0H,SAAA1H,KAAA07B,GxDwiOI17B,KwDviOJgpB,UAAA2S,YAAA,gBAA4C37B,KAA5C47B,gBAAA57B,SxD0iOAuF,IAAK,eACLlG,MAAO,WAEH,GwDxiOAw8B,GAAyB,GAAAnnB,GAAAgB,uBAA2B1V,KAA3B8U,cAA+C9U,KAA/CiL,qBAA0EjL,KAAvGyI,uBACIqzB,EAAsC,GAAAvB,GAAAhmB,oCAAwCvU,KAAxC8U,cAA4D9U,KAA5DiL,qBAAuFjL,KAAjIyI,sBACIrC,GAAAO,MAAJQ,axDyiOQ00B,EwDxiOJE,aAAA,GxDyiOID,EwDxiOJC,aAAA,IxD2iOA/7B,KwDxiOJg8B,YAAAH,GxDyiOI77B,KwDxiOJg8B,YAAiB,GAAAvB,GAAAxa,kBAAsBjgB,KAAtB8U,cAA0C9U,KAA1CiL,qBAAqEjL,KAAtFyI,wBxDyiOIzI,KwDxiOJg8B,YAAAF,GxDyiOI97B,KwDxiOJg8B,YAAiB,GAAA1B,GAAA7f,aAAiBza,KAAjB8U,cAAqC9U,KAArCiL,qBAAgEjL,KAAjFyI,2BxD2iOAlD,IAAK,cACLlG,MAAO,SAAqB8pB,GACxBnpB,KwDziOJ8U,cAAAknB,YAAA7S,GxD0iOIA,EwDziOJ8S,0BAAAj8B,SxD4iOAuF,IAAK,+BACLlG,MAAO,SAAsC21B,GACzCh1B,KwD1iOJ06B,sBAAA13B,KAAAgyB,MxD6iOAzvB,IAAK,iCACLlG,MAAO,SAAwC21B,GAC3C,GwD3iOAv0B,GAAQT,KAAA06B,sBAAAhb,QAAZsV,EACIv0B,OxD4iOIT,KwD3iOJ06B,sBAAApd,OAAA7c,EAAA,MxD+iOJ8E,IAAK,YACLlG,MAAO,SAAmBkI,GACtBnB,EAASiD,IwD5iObqH,MAAA,YAAuB1Q,KAAvB66B,UAAAtzB,GxD6iOIvH,KwD5iOJ06B,sBAAA/6B,QAAmC,SAAAlC,GxD6iO3B,MwD7iO8BA,GAAA6J,UAAHC,QxDijOnChC,IAAK,WACLlG,MAAO,SAAkBkI,GACrBnB,EAASiD,IwD/iObqH,MAAA,WAAsB1Q,KAAtB66B,UAAAtzB,GxDgjOIvH,KwD/iOJ06B,sBAAA/6B,QAAmC,SAAAlC,GxDgjO3B,MwDhjO8BA,GAAAiK,SAAHH,IxDkjO/B,IwDjjOA20B,GAAiBl8B,KAAA26B,iCAAsCpzB,EAA3DwM,GACAmoB,IxDkjOQA,EwDjjOJ30B,GAGDvH,KAAA46B,wBAA6BrzB,EAAAsa,YAAhC9N,KxDkjOQ/T,KwDjjOJ8U,cAAA0mB,kBAAqCj0B,EAArCsa,YAA+Dta,EAA/DuT,kBxDqjOJvV,IAAK,kBACLlG,MAAO,SAAyB6I,EAAgBtJ,GAC5C,GAAIuP,GwDljORnO,KAAIk8B,EAAiBl8B,KAAA26B,iCAArBzyB,EACAg0B,IxDqjOQl8B,KwDpjOJ8U,cAAA+U,oBAAA3hB,GAAA/I,KAA4D,SAAAoI,GxD0jOpD,MALAA,GwDpjOJ+f,OAAsBpR,EAAA0B,WAAtB2c,OACA31B,GxDqjOQ2I,EwDpjOJugB,kBAAA9kB,KAAApE,GxDujOOuP,EwDpjOJ2G,cAAAqd,iBAAA5qB,GAAApI,KAAuD,WxDqjOtD+8B,EwDpjOJ30B,OxD6iOJvH,SwD3iOK,SAAAnD,GxDqjODuJ,EAASiD,IwDpjObzK,MAAA/B,KxDujOJuJ,EAASiD,IwDnjObqH,MAAA,kBAAAxI,EAAAtJ,OxDujOG0M,GACTka,EAAsB2B,wBAErBgV,6FAA6F,EAAEC,2CAA2C,GAAGC,iEAAiE,GAAGC,uDAAuD,GAAGC,8BAA8B,GAAGlD,kCAAkC,GAAGmD,wBAAwB,GAAGC,0BAA0B,GAAGC,6CAA6C,GAAGC,gDAAgD,GAAGC,iDAAiD,GAAGrD,sBAAsB,GAAGzB,eAAe,GAAG/tB,WAAW,aAAa8yB,IAAI,SAASjgC,EAAQkB,EAAOJ,GACloB,YAyBA,SAASunB,GAAwBnmB,GAC7B,GAAIA,GAAOA,EAAIomB,WACX,MAAOpmB,EAEP,IAAIqmB,KAAY,IAAW,MAAPrmB,EAChB,IAAK,GAAIyG,KAAOzG,GACRe,OAAO3B,UAAU6K,eAAepL,KAAKmB,EAAKyG,KAAM4f,EAAO5f,GAAOzG,EAAIyG,GAExD,OAArB4f,GAAAA,WAAiBrmB,EAAWqmB,EAIrC,QAASphB,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArC5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQyN,sBAAwBlI,MAEhC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MyDx0O/I08B,EAAAlgC,EAAA,WACAwJ,EAAAxJ,EAAA,YACAyJ,EAAAzJ,EAAA,YzDg1OImgC,EAAQ9X,EAAwB5e,EAoBR3I,GAAQyN,sBAAwB,WACxD,QAASA,GyD71OTJ,EAAAiyB,GzD81OIj5B,EAAgB/D,KyD91O0BmL,GzDg2O1CnL,KyDl2OJyW,czDo2OIzW,KyDj2OA+K,iBAAAA,CzDk2OA,IyDj2OI+E,GAAM,GAAAgtB,GAAAG,8BAAVlyB,GACImyB,EAAU,GAAAJ,GAAAK,YAAdpyB,GACIqyB,EAAU,GAAAN,GAAAO,YAAdtyB,GACI8E,EAAM,GAAAitB,GAAAQ,8BAAVvyB,GACIwyB,EAAU,GAAAT,GAAAU,YAAdzyB,GACI0yB,EAAU,GAAAX,GAAAY,YAAd3yB,EzDk2OA/K,MyDj2OAyW,WAAgB3G,EAAhB1M,MAAA0M,EzDk2OA9P,KyDj2OAyW,WAAgBymB,EAAhB95B,MAAA85B,EzDk2OAl9B,KyDj2OAyW,WAAgB2mB,EAAhBh6B,MAAAg6B,EzDk2OAp9B,KyDj2OAyW,WAAgB5G,EAAhBzM,MAAAyM,EzDk2OA7P,KyDj2OAyW,WAAgB8mB,EAAhBn6B,MAAAm6B,EzDk2OAv9B,KyDj2OAyW,WAAgBgnB,EAAhBr6B,MAAAq6B,EzDk2OAz9B,KyDj2OAmM,OAAa2D,EAAAD,EAAAqtB,EAAAE,EAAAG,EAAbE,GACAT,EzDk2OIh9B,KyDj2OA2L,YAAmB3L,KAAAyW,WAAnBumB,GzDm2OAh9B,KyDj2OA2L,YAAmB3L,KAAAmM,MAAnB,GzDs7OR,MAjFAjH,GAAaiG,IACT5F,IAAK,aACLlG,MAAO,SAAoBiJ,GACvB,QyDl2OMtI,KAAAyW,WAATnO,MzDq2OD/C,IAAK,uBACLlG,MAAO,SAA8BiJ,GACjCtI,KyDn2OJ2L,YAAmB3L,KAAAyW,WAAnBnO,MzDs2OA/C,IAAK,YACLlG,MAAO,SAAmBuwB,EAAWjnB,GACjC,GAAIlC,GyDr2OuCzG,KAApB29B,EAAAt9B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAe,KAEtConB,GAAY,GAAAE,OAAhB4H,SzDw2OInpB,GAASiD,IyDv2Obu0B,MAAU,2BAAVj1B,GzDy2OIinB,EyDv2OJ7iB,WAAApN,QAA6B,SAAA5C,GzDw2OrB0J,EyDv2OJ4G,cAAAtQ,EAAA4L,EAAAg1B,IzD02OA,IyDv2OAE,IAAS,GAAAlW,OAAA4H,UAAuB9H,EAApC,GzD02OI,OAFArhB,GAASiD,IyDv2Obu0B,MAAU,sBAAAC,EAAV,KAEA79B,QzD02OAuF,IAAK,gBACLlG,MAAO,SAAuB2N,EAAMrE,GAChC,GyDz2OsBg1B,GAAAt9B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAe,IzD22OrC+F,GAASiD,IyD12Obu0B,MAAA,iCAAA5wB,EzD42OI,IyD12OAya,IAAY,GAAAE,OAAhB4H,UAEIpjB,GAAUnM,KAAd2L,YACAhD,KzD22OQwD,EyD12OInM,KAARmM,OzD62OAA,EyD12OJxM,QAAc,SAAA6W,GzD22ONA,EyD12OJsnB,kBAAAH,GzD22OInnB,EyD12OJunB,cAAA/wB,GzD22OIwJ,EyD12OJwnB,eAAAhxB,GzD22OIwJ,EyD12OJynB,uBzD62OA,IyD12OAJ,KAAS,GAAAlW,OAAA4H,UAAD9H,GAAZ,GzD62OI,OAFArhB,GAASiD,IyD12Obu0B,MAAU,sBAAAC,EAAV,KAEA79B,QzD62OAuF,IAAK,sBACLlG,MAAO,SAA6ByO,EAAM1K,GACtC,MyD12OG0K,GAAA6D,cAAmB3R,KAAA2L,YAAnBvI,KAAPA,MzD62OAmC,IAAK,sBACLlG,MAAO,SAA6BxC,EAAGuG,GACnC,MyD12OJ,gBAAGA,EACIvG,EAAAqhC,qBAAwBnB,GAAAruB,OAA3BC,aACW9R,EAAA8U,cAAgB3R,KAAA2L,YAAhBvI,KAAP,eAEDvG,EAAAqhC,qBAAwBnB,GAAAruB,OAA3BoD,WACWjV,EAAPshC,0BAEJ,KAEJ,WAAG/6B,EACQvG,EAAPuhC,qBAEJ,YAAGh7B,EACQvG,EAAA8U,cAAgB3R,KAAA2L,YAAhBvI,KAAP,WzDy2OA,WAMD+H,OAGRkzB,UAAU,GAAGv0B,WAAW,WAAWC,WAAW,aAAau0B,IAAI,SAAS1hC,EAAQkB,EAAOJ,GAC1F,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQu/B,8BAAgCh6B,MAExC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M0Dr+O/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oB1DigPIqgC,G0DhgPJrgC,EAAA,Y1DggPoCc,EAAQu/B,8BAAgC,SAAUuB,GAGlF,QAASvB,G0D5/OTlyB,G1D+/OI,MAFAhH,GAAgB/D,K0D7/OSi9B,G1D+/OlBh5B,EAA2BjE,MAAOi9B,EAA8Bp4B,WAAahF,OAAOqG,eAAe+2B,IAAgCt/B,KAAKqC,K0D9/OzIi9B,EADmBwB,MAAA,EAAA1zB,I1D6hP7B,MAnCA3G,GAAU64B,E0D1/OVuB,G1DqgPAt5B,EAAa+3B,IACT13B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAI7G,G0DngPwCjH,KAA/BiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAO,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAmB,C1DwgP1CL,M0DvgPJ2+B,OAAA7wB,EAAA,WAAA,GACGA,YAAgBzH,GAAAqI,OAAnBkwB,c1DwgPQ5+B,K0DvgPJ2+B,OAAA7wB,EAAA,qBAAA4wB,G1D0gPA5wB,E0DvgPJkB,WAAArP,QAAwB,SAAA9C,IACfoK,EAAA+I,SAAc/I,EAAA03B,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAAwD9S,EAAA03B,OAAY9hC,EAAZqS,UAAxD,YAAiGpB,YAAgBzH,GAAAqI,OAAtHC,a1D2gPQ1H,E0DvgPJ03B,OAAA9hC,EAAA,WAAA,I1DogPIoK,E0DvgPJ03B,OAAA9hC,EAAA,WAAA,G1DwgPIoK,E0DvgPJ+2B,eAAoBnhC,EAApBqS,UAAiCjI,EAAA43B,WAAjChiC,GAAqDoK,EAAA63B,SAAAJ,EAAkCz3B,EAAA03B,OAAA9hC,EAAvF,wB1D+gPLogC,GACTsB,EAAeQ,eAEjB9B,GAA8BwB,KAAO,gCAElCO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAak1B,IAAI,SAASriC,EAAQkB,EAAOJ,GACnG,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ4/B,8BAAgCr6B,MAExC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M2D3jP/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oB3DulPI0gC,G2DtlPJ1gC,EAAA,Y3DslPoCc,EAAQ4/B,8BAAgC,SAAUkB,GAGlF,QAASlB,G2DllPTvyB,G3DqlPI,MAFAhH,GAAgB/D,K2DnlPSs9B,G3DqlPlBr5B,EAA2BjE,MAAOs9B,EAA8Bz4B,WAAahF,OAAOqG,eAAeo3B,IAAgC3/B,KAAKqC,K2DplPzIs9B,EADmBmB,MAAA,EAAA1zB,I3DmnP7B,MAnCA3G,GAAUk5B,E2DhlPVkB,G3D2lPAt5B,EAAao4B,IACT/3B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAI7G,G2DzlPwCjH,KAA/BiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAO,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAmB,C3D8lP1CL,M2D7lPJ2+B,OAAA7wB,EAAA,WAAA,GACGA,YAAgBzH,GAAAqI,OAAnBkwB,c3D8lPQ5+B,K2D7lPJ2+B,OAAA7wB,EAAA,qBAAA4wB,G3DgmPA5wB,E2D7lPJkB,WAAArP,QAAwB,SAAA9C,IACfoK,EAAA+I,SAAc/I,EAAA03B,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAAwD9S,EAAA03B,OAAY9hC,EAAZqS,UAAxD,YAAiGpB,YAAgBzH,GAAAqI,OAAtHC,a3DimPQ1H,E2D7lPJ03B,OAAA9hC,EAAA,WAAA,I3D0lPIoK,E2D7lPJ03B,OAAA9hC,EAAA,WAAA,G3D8lPIoK,E2D7lPJ+2B,eAAoBnhC,EAApBqS,UAAiCjI,EAAA43B,WAAjChiC,GAAqDoK,EAAA63B,SAAAJ,EAAkCz3B,EAAA03B,OAAA9hC,EAAvF,wB3DqmPLygC,GACTiB,EAAeQ,eAEjBzB,GAA8BmB,KAAO,gCAElCO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAam1B,IAAI,SAAStiC,EAAQkB,EAAOJ,GACnG,YAEAmC,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,GAGT,IAAIk/B,GAAiB3hC,EAAQ,mB4DxoP7BiD,QAAA+S,KAAA2rB,GAAA5+B,QAAA,SAAA4F,G5D2oPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4D7oPJ,E5D8oPI1E,IAAK,WACH,MAAOw+B,G4D/oPbh5B,O5DopPA,IAAI45B,GAAiCviC,EAAQ,qC4DnpP7CiD,QAAA+S,KAAAusB,GAAAx/B,QAAA,SAAA4F,G5DspPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4DxpPJ,E5DypPI1E,IAAK,WACH,MAAOo/B,G4D1pPb55B,O5D+pPA,IAAI65B,GAAiCxiC,EAAQ,qC4D9pP7CiD,QAAA+S,KAAAwsB,GAAAz/B,QAAA,SAAA4F,G5DiqPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4DnqPJ,E5DoqPI1E,IAAK,WACH,MAAOq/B,G4DrqPb75B,O5D0qPA,IAAI85B,GAAeziC,EAAQ,kB4DzqP3BiD,QAAA+S,KAAAysB,GAAA1/B,QAAA,SAAA4F,G5D4qPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4D9qPJ,E5D+qPI1E,IAAK,WACH,MAAOs/B,G4DhrPb95B,O5DqrPA,IAAI+5B,GAAe1iC,EAAQ,kB4DprP3BiD,QAAA+S,KAAA0sB,GAAA3/B,QAAA,SAAA4F,G5DurPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4DzrPJ,E5D0rPI1E,IAAK,WACH,MAAOu/B,G4D3rPb/5B,O5DgsPA,IAAIg6B,GAAe3iC,EAAQ,kB4D/rP3BiD,QAAA+S,KAAA2sB,GAAA5/B,QAAA,SAAA4F,G5DksPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4DpsPJ,E5DqsPI1E,IAAK,WACH,MAAOw/B,G4DtsPbh6B,O5D2sPA,IAAIi6B,GAAe5iC,EAAQ,kB4D1sP3BiD,QAAA+S,KAAA4sB,GAAA7/B,QAAA,SAAA4F,G5D6sPc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y4D/sPJ,E5DgtPI1E,IAAK,WACH,MAAOy/B,G4DjtPbj6B,U5DstPGk6B,qCAAqC,GAAGC,qCAAqC,GAAGC,kBAAkB,GAAGC,kBAAkB,GAAGC,kBAAkB,GAAGC,kBAAkB,GAAGd,mBAAmB,KAAKe,IAAI,SAASnjC,EAAQkB,EAAOJ,GAC3N,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ2/B,YAAcp6B,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M6D5uP/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oBACAwJ,EAAAxJ,EAAA,Y7DuwPIygC,EAAc3/B,EAAQ2/B,YAAc,SAAUmB,GAG9C,QAASnB,G6DnwPTtyB,G7DswPI,MAFAhH,GAAgB/D,K6DpwPSq9B,G7DswPlBp5B,EAA2BjE,MAAOq9B,EAAYx4B,WAAahF,OAAOqG,eAAem3B,IAAc1/B,KAAKqC,K6DrwPrGq9B,EADmBoB,MAAA,EAAA1zB,I7D0zP7B,MAzDA3G,GAAUi5B,E6DjwPVmB,G7DywPAt5B,EAAam4B,IACT93B,IAAK,0BACLlG,MAAO,SAAiCuO,EAAOoyB,EAAiBC,EAAWC,EAAkBC,GACzF,GAAIl5B,G6DtwPRjH,I7DwwPI4N,G6DxwPJjO,QAAc,SAAA9C,G7DywPNoK,E6DxwPJuJ,oBAAA3T,G7DywPIoK,E6DxwPJ03B,OAAA9hC,EAAA,cAA8BoK,EAAA03B,OAAY9hC,EAAZqS,UAAA,UAAA8wB,EAAA,EAA4D,EAA1FC,Q7D+wPJ16B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAIlB,G6D5wP6C5M,KAApCiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAqB,C7DixP9CL,M6DhxPJ2+B,OAAA7wB,EAAA,WAAA,GACIA,YAAgBzH,GAAAqI,OAApBkwB,c7DixPQ5+B,K6DhxPJ2+B,OAAA7wB,EAAA,qBAAA4wB,E7DmxPA,I6DhxPA0B,GAAJ,IACItyB,aAAgBzH,GAAAqI,OAApBoD,a7DixPQsuB,EAAch6B,EAASO,M6DhxPb05B,MAAYvyB,EAAZkB,WAA6B,SAAAnS,G7DixPnC,M6DjxPsC+P,GAAA+xB,OAAY9hC,EAAZqS,UAAH,a7DqxP3CpB,E6DlxPJkB,WAAArP,QAAwB,SAAA9C,G7DmxPhB,G6DlxPAyjC,IAAJ,C7DoxPQA,G6DnxPRF,EACgBxzB,EAAA+xB,OAAYyB,EAAZlxB,UAAA,UAAA6K,OAAoDnN,EAAA+xB,OAAY9hC,EAAZqS,UAAhE,cACkBtC,EAAAoD,SAAcpD,EAAA+xB,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAA0DnN,EAAA+xB,OAAY9hC,EAAZqS,UAA1D,YAAmGpB,YAAgBzH,GAAAqI,OAAlIC,cAEP2xB,G7DmxPQ1zB,E6DlxPJ+xB,OAAA9hC,EAAA,WAAA,G7DmxPI+P,E6DlxPJoxB,eAAoBnhC,EAApBqS,UAAiCtC,EAAAiyB,WAAjChiC,GAAqD+P,EAAAkyB,SAAAJ,EAAkC9xB,EAAA+xB,OAAA9hC,EAAvF,kB7DoxPI+P,E6DlxPJ+xB,OAAA9hC,EAAA,WAAA,S7DwxPLwgC,GACTkB,EAAeQ,cAEjB1B,GAAYoB,KAAO,aAEhBO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAaw2B,IAAI,SAAS3jC,EAAQkB,EAAOJ,GACnG,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQy/B,YAAcl6B,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M8Dx1P/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oBACAwJ,EAAAxJ,EAAA,Y9Dm3PIugC,EAAcz/B,EAAQy/B,YAAc,SAAUqB,GAG9C,QAASrB,G8D/2PTpyB,G9Dk3PI,MAFAhH,GAAgB/D,K8Dh3PSm9B,G9Dk3PlBl5B,EAA2BjE,MAAOm9B,EAAYt4B,WAAahF,OAAOqG,eAAei3B,IAAcx/B,KAAKqC,K8Dj3PrGm9B,EADmBsB,MAAA,EAAA1zB,I9Ds6P7B,MAzDA3G,GAAU+4B,E8D72PVqB,G9Dq3PAt5B,EAAai4B,IACT53B,IAAK,0BACLlG,MAAO,SAAiCuO,EAAOoyB,EAAiBC,EAAWC,EAAkBC,GACzF,GAAIl5B,G8Dn3PRjH,I9Dq3PI4N,G8Dr3PJjO,QAAc,SAAA9C,G9Ds3PNoK,E8Dr3PJuJ,oBAAA3T,G9Ds3PIoK,E8Dr3PJ03B,OAAA9hC,EAAA,cAA8BoK,EAAA03B,OAAY9hC,EAAZqS,UAAA,UAAAgxB,EAAA,EAA6D,EAA3FC,Q9D43PJ56B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAIlB,G8Dz3P6C5M,KAApCiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAqB,C9D83P9CL,M8D73PJ2+B,OAAA7wB,EAAA,WAAA,GACIA,YAAgBzH,GAAAqI,OAApBkwB,c9D83PQ5+B,K8D73PJ2+B,OAAA7wB,EAAA,qBAAA4wB,E9Dg4PA,I8D73PA0B,GAAJ,IACItyB,aAAgBzH,GAAAqI,OAApBoD,a9D83PQsuB,EAAch6B,EAASO,M8D73Pb65B,MAAY1yB,EAAZkB,WAA6B,SAAAnS,G9D83PnC,M8D93PsC+P,GAAA+xB,OAAY9hC,EAAZqS,UAAH,a9Dk4P3CpB,E8D/3PJkB,WAAArP,QAAwB,SAAA9C,G9Dg4PhB,G8D/3PAyjC,IAAJ,C9Di4PQA,G8Dh4PRF,EACgBxzB,EAAA+xB,OAAYyB,EAAZlxB,UAAA,UAAA6K,OAAoDnN,EAAA+xB,OAAY9hC,EAAZqS,UAAhE,cACkBtC,EAAAoD,SAAcpD,EAAA+xB,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAA0DnN,EAAA+xB,OAAY9hC,EAAZqS,UAA1D,YAAmGpB,YAAgBzH,GAAAqI,OAAlIC,cAEP2xB,G9Dg4PQ1zB,E8D/3PJ+xB,OAAA9hC,EAAA,WAAA,G9Dg4PI+P,E8D/3PJoxB,eAAoBnhC,EAApBqS,UAAiCtC,EAAAiyB,WAAjChiC,GAAqD+P,EAAAkyB,SAAAJ,EAAkC9xB,EAAA+xB,OAAA9hC,EAAvF,kB9Di4PI+P,E8D/3PJ+xB,OAAA9hC,EAAA,WAAA;O9Dq4PLsgC,GACToB,EAAeQ,cAEjB5B,GAAYsB,KAAO,aAEhBO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAa02B,IAAI,SAAS7jC,EAAQkB,EAAOJ,GACnG,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQggC,YAAcz6B,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M+Dp8P/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oBACAwJ,EAAAxJ,EAAA,Y/D+9PI8gC,EAAchgC,EAAQggC,YAAc,SAAUc,GAG9C,QAASd,G+D39PT3yB,G/D89PI,MAFAhH,GAAgB/D,K+D59PS09B,G/D89PlBz5B,EAA2BjE,MAAO09B,EAAY74B,WAAahF,OAAOqG,eAAew3B,IAAc//B,KAAKqC,K+D79PrG09B,EADmBe,MAAA,EAAA1zB,I/DkhQ7B,MAzDA3G,GAAUs5B,E+Dz9PVc,G/Di+PAt5B,EAAaw4B,IACTn4B,IAAK,0BACLlG,MAAO,SAAiCuO,EAAOoyB,EAAiBC,EAAWC,EAAkBC,GACzF,GAAIl5B,G+D/9PRjH,I/Di+PI4N,G+Dj+PJjO,QAAc,SAAA9C,G/Dk+PNoK,E+Dj+PJuJ,oBAAA3T,G/Dk+PIoK,E+Dj+PJ03B,OAAA9hC,EAAA,cAA8BoK,EAAA03B,OAAY9hC,EAAZqS,UAAA,UAAA8wB,EAAA,EAA4D,EAA1FC,Q/Dw+PJ16B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAIlB,G+Dr+P6C5M,KAApCiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAqB,C/D0+P9CL,M+Dz+PJ2+B,OAAA7wB,EAAA,WAAA,GACIA,YAAgBzH,GAAAqI,OAApBkwB,c/D0+PQ5+B,K+Dz+PJ2+B,OAAA7wB,EAAA,qBAAA4wB,E/D4+PA,I+Dz+PA0B,GAAJ,IACItyB,aAAgBzH,GAAAqI,OAApBoD,a/D0+PQsuB,EAAch6B,EAASO,M+Dz+Pb05B,MAAYvyB,EAAZkB,WAA6B,SAAAnS,G/D0+PnC,M+D1+PsC+P,GAAA+xB,OAAY9hC,EAAZqS,UAAH,a/D8+P3CpB,E+D3+PJkB,WAAArP,QAAwB,SAAA9C,G/D4+PhB,G+D3+PAyjC,IAAJ,C/D6+PQA,G+D5+PRF,EACgBxzB,EAAA+xB,OAAYyB,EAAZlxB,UAAA,UAAA6K,OAAoDnN,EAAA+xB,OAAY9hC,EAAZqS,UAAhE,cACkBtC,EAAAoD,SAAcpD,EAAA+xB,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAA0DnN,EAAA+xB,OAAY9hC,EAAZqS,UAA1D,YAAmGpB,YAAgBzH,GAAAqI,OAAlIC,cAEP2xB,G/D4+PQ1zB,E+D3+PJ+xB,OAAA9hC,EAAA,WAAA,G/D4+PI+P,E+D3+PJoxB,eAAoBnhC,EAApBqS,UAAiCtC,EAAAiyB,WAAjChiC,GAAqD+P,EAAAkyB,SAAAJ,EAAkC9xB,EAAA+xB,OAAA9hC,EAAvF,kB/D6+PI+P,E+D3+PJ+xB,OAAA9hC,EAAA,WAAA,S/Di/PL6gC,GACTa,EAAeQ,cAEjBrB,GAAYe,KAAO,aAEhBO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAa22B,IAAI,SAAS9jC,EAAQkB,EAAOJ,GACnG,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAtCpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ8/B,YAAcv6B,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MgEhjQ/IiG,EAAAzJ,EAAA,YACA2hC,EAAA3hC,EAAA,oBACAwJ,EAAAxJ,EAAA,YhE2kQI4gC,EAAc9/B,EAAQ8/B,YAAc,SAAUgB,GAG9C,QAAShB,GgEvkQTzyB,GhE0kQI,MAFAhH,GAAgB/D,KgExkQSw9B,GhE0kQlBv5B,EAA2BjE,MAAOw9B,EAAY34B,WAAahF,OAAOqG,eAAes3B,IAAc7/B,KAAKqC,KgEzkQrGw9B,EADmBiB,MAAA,EAAA1zB,IhE8nQ7B,MAzDA3G,GAAUo5B,EgErkQVgB,GhE6kQAt5B,EAAas4B,IACTj4B,IAAK,0BACLlG,MAAO,SAAiCuO,EAAOoyB,EAAiBC,EAAWC,EAAkBC,GACzF,GAAIl5B,GgE3kQRjH,IhE6kQI4N,GgE7kQJjO,QAAc,SAAA9C,GhE8kQNoK,EgE7kQJuJ,oBAAA3T,GhE8kQIoK,EgE7kQJ03B,OAAA9hC,EAAA,cAA8BoK,EAAA03B,OAAY9hC,EAAZqS,UAAA,UAAAgxB,EAAA,EAA6D,EAA3FC,QhEolQJ56B,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,GAAIlB,GgEjlQ6C5M,KAApCiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,EAAGq+B,EAAAr+B,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAqB,ChEslQ9CL,MgErlQJ2+B,OAAA7wB,EAAA,WAAA,GACIA,YAAgBzH,GAAAqI,OAApBkwB,chEslQQ5+B,KgErlQJ2+B,OAAA7wB,EAAA,qBAAA4wB,EhEwlQA,IgErlQA0B,GAAJ,IACItyB,aAAgBzH,GAAAqI,OAApBoD,ahEslQQsuB,EAAch6B,EAASO,MgErlQb65B,MAAY1yB,EAAZkB,WAA6B,SAAAnS,GhEslQnC,MgEtlQsC+P,GAAA+xB,OAAY9hC,EAAZqS,UAAH,ahE0lQ3CpB,EgEvlQJkB,WAAArP,QAAwB,SAAA9C,GhEwlQhB,GgEvlQAyjC,IAAJ,ChEylQQA,GgExlQRF,EACgBxzB,EAAA+xB,OAAYyB,EAAZlxB,UAAA,UAAA6K,OAAoDnN,EAAA+xB,OAAY9hC,EAAZqS,UAAhE,cACkBtC,EAAAoD,SAAcpD,EAAA+xB,OAAA7wB,EAAd,UAAAmJ,GAAA8C,OAA0DnN,EAAA+xB,OAAY9hC,EAAZqS,UAA1D,YAAmGpB,YAAgBzH,GAAAqI,OAAlIC,cAEP2xB,GhEwlQQ1zB,EgEvlQJ+xB,OAAA9hC,EAAA,WAAA,GhEwlQI+P,EgEvlQJoxB,eAAoBnhC,EAApBqS,UAAiCtC,EAAAiyB,WAAjChiC,GAAqD+P,EAAAkyB,SAAAJ,EAAkC9xB,EAAA+xB,OAAA9hC,EAAvF,kBhEylQI+P,EgEvlQJ+xB,OAAA9hC,EAAA,WAAA,ShE6lQL2gC,GACTe,EAAeQ,cAEjBvB,GAAYiB,KAAO,aAEhBO,mBAAmB,GAAGl1B,WAAW,WAAWC,WAAW,aAAa42B,IAAI,SAAS/jC,EAAQkB,EAAOJ,GACnG,YA2BA,SAAS+3B,GAAmBz3B,GACxB,GAAIC,MAAM2sB,QAAQ5sB,GAAM,CACpB,IAAK,GAAIX,GAAI,EAAGq4B,EAAOz3B,MAAMD,EAAIJ,QAASP,EAAIW,EAAIJ,OAAQP,IACtDq4B,EAAKr4B,GAAKW,EAAIX,EACjB,OAAOq4B,GAER,MAAOz3B,OAAMwkB,KAAKzkB,GAI1B,QAAS+F,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArC5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQqhC,cAAgB97B,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MiE1pQ/I6J,EAAArN,EAAA,wBACAyJ,EAAAzJ,EAAA,YAEA4N,GADA5N,EAAA,2BACAA,EAAA,yBACAA,GAAA,YjEqrQoBc,EAAQqhC,cAAgB,WACxC,QAASA,GiE5qQT37B,EAAA8T,EAAAnM,GjE6qQIhH,EAAgB/D,KiE5qQhB++B,GjE8qQA/+B,KiE9qQAoD,KAAAA,EjE+qQApD,KiE9qQAkX,aAAAA,EjE+qQAlX,KiE9qQA+K,iBAAAA,EjE02QJ,MAzLA7F,GAAa65B,IACTx5B,IAAK,oBACLlG,MAAO,SAA2Bs+B,GAC9B39B,KiEhrQJ29B,eAAAA,KjEmrQAp4B,IAAK,sBACLlG,MAAO,WACHW,KiEjrQJ29B,eAAA,QjEurQAp4B,IAAK,eACLlG,MAAO,SAAsBuhC,EAAcC,GACvC,GiEprQJC,EjEsrQQA,GiErrQL9gC,KAAHkX,aACWlX,KAAA8P,IAAA5Q,MAAAc,KAAAy1B,EAAPoL,IAEO7gC,KAAA6P,IAAA3Q,MAAAc,KAAAy1B,EAAPoL,GjEsrQA,IiEprQAE,KjE0rQA,OALAF,GiEprQJlhC,QAAwB,SAAAV,EAAA5B,GACpB,GAAG4M,EAAAe,iBAAAqH,QAAAyuB,EAAA7hC,IjEqrQK8hC,EiEprQJ/9B,KAAA3F,KAGR0jC,KjEurQAx7B,IAAK,gBACLlG,MAAO,SAAuBuhC,EAAcC,GACxC,GiErrQD7gC,KAAH29B,eAAuB,CjEsrQf,GiErrQA/uB,GAAWpE,EAAAqE,OAAAC,YAAmB9O,KAAnB29B,eAAfiD,EjEsrQI,OiErrQJhyB,IACYA,EAARK,kBjEyrQJ,MiErrQGjP,MAAAghC,aAAAJ,EAAPC,MjE2rQAt7B,IAAK,0BACLlG,MAAO,SAAiCuO,EAAOoyB,EAAiBC,EAAWC,EAAkBC,OAK7F56B,IAAK,gBACLlG,MAAO,SAAuByO,GAC1B,GAAIrH,GiE1rQqCzG,KAA7BiX,EAAA5W,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAO,EAAG4gC,EAAA5gC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAiB,EACvC6gC,EAAJ,CjE+rQI,IiE9rQApzB,EAAAkB,WAAJpR,OAA4B,CjE+rQpB,GiE9rQDkQ,YAAgBzH,GAAAqI,OAAnBC,aAAuC,CjEgsQ/B,GiE9rQAoyB,GAAA/gC,KAAkBmhC,cAAArzB,EAAAA,EAAyBkB,WAAA4H,IAAoB,SAAA/Z,GjE+rQ3D,MiE/rQ8D4J,GAAAs3B,cAAmBlhC,EAAnBqS,UAAgCzI,EAAAo4B,WAAhChiC,GAAoD4J,EAAA4J,IAAS5J,EAAAo4B,WAAThiC,GAAvDokC,MjEisQ/DnzB,GiEhsQJkB,WAAArP,QAAwB,SAAA9C,EAAAQ,GjEisQhBoJ,EiEhsQJ+J,oBAAA3T,GjEisQI4J,EiEhsQJk4B,OAAA9hC,EAAA,cAA8BkkC,EAAArhB,QAAAriB,GAAA,EAAA,EAA9B,SAGH,CjEgsQG,GiE/rQA+jC,KAAJxtB,EAAAA,GACIqsB,EAAJ,EACIoB,EAAJztB,EAAAA,EACIusB,EAAJ,CjEisQIryB,GiE/rQJkB,WAAArP,QAAwB,SAAA9C,GjEgsQhB,GiE/rQAykC,GAAc76B,EAAAs3B,cAAmBlhC,EAAnBqS,UAAgCzI,EAAAo4B,WAAhChiC,GAAoD4J,EAAA4J,IAAS5J,EAAAo4B,WAAThiC,GAAtEokC,GACGK,GAAHD,GjEgsQQA,EiE/rQJC,EjEgsQInB,EiE/rQJ,GACKmB,EAAAvnB,OAAHsnB,IAELlB,IACEmB,EAAHF,GjEgsQQA,EiE/rQJE,EjEgsQIrB,EiE/rQJ,GACKqB,EAAAvnB,OAAHqnB,IAELnB,IjEisQGx5B,EiE/rQJ+J,oBAAA3T,GjEgsQI4J,EiE/rQJk4B,OAAA9hC,EAAA,cAA8B4J,EAAA86B,gBAA9B1kC,MjEisQAmD,KiE/rQJwhC,wBAA6B1zB,EAA7BkB,WAAAoyB,EAAAnB,EAAAoB,EAAAlB,GjEksQA,GiE/rQAsB,GAAJ,CjEgsQI3zB,GiE/rQJkB,WAAArP,QAAwB,SAAA9C,GjEgsQhB4kC,EiE/rQMh7B,EAAA4J,IAAAoxB,EAAoBh7B,EAAAk4B,OAAA9hC,EAA9B,kBAID4kC,EAAH,GjEgsQQ3zB,EiE/rQJkB,WAAArP,QAAwB,SAAA9C,GjEgsQhBqkC,EiE/rQaz6B,EAAA4J,IAAA6wB,EAAyBz6B,EAAAq4B,SAAcr4B,EAAAk4B,OAAA9hC,EAAd,eAA4C4J,EAAAk4B,OAAY9hC,EAAZqS,UAA5C,WAAAwyB,IAA1CD,MjE8sQR,MAVAxqB,GiE7rQGjX,KAAAqQ,IAAA4G,EAAPiqB,GjE8rQIlhC,KiE7rQJwQ,oBAAA1C,GAEGA,YAAgBzH,GAAAqI,OAAnBkwB,cjE8rQQ5+B,KiE7rQJ2+B,OAAA7wB,EAAA,mBAAAmzB,GjE8rQIjhC,KiE7rQJ2+B,OAAA7wB,EAAA,qBAFkC,IjEisQ9B9N,KiE7rQJ2+B,OAAA7wB,EAAA,iBAAAozB,GAGGlhC,KAAA2+B,OAAA7wB,EAAA,SAAPmJ,MjEmsQA1R,IAAK,iBACLlG,MAAO,SAAwByO,GAC3B,KiEhsQE,qDAAqD9N,KAA3DoD,QjEssQAmC,IAAK,SACLlG,MAAO,SAAgBsG,EAAQg8B,EAAWtiC,GACtC,MiEnsQIsG,GAAAgM,cAAqB3R,KAArBoD,KAAAu+B,EAARtiC,MjEssQAkG,IAAK,kBACLlG,MAAO,SAAyBuiC,GAC5B,MiEpsQGA,GAAPzD,6BjEusQA54B,IAAK,aACLlG,MAAO,SAAoBuiC,GACvB,MiErsQGA,GAAPxD,wBjEwsQA74B,IAAK,sBACLlG,MAAO,SAA6BsG,GAChCA,EiEtsQJ6K,oBAA2BxQ,KAA3BoD,SjEysQAmC,IAAK,MACLlG,MAAO,SAAajC,EAAGkyB,GACnB,MiEvsQGrlB,GAAAe,iBAAAqF,IAAAjT,EAAPkyB,MjE0sQA/pB,IAAK,WACLlG,MAAO,SAAkBjC,EAAGkyB,GACxB,MiEzsQGrlB,GAAAe,iBAAAgF,SAAA5S,EAAPkyB,MjE4sQA/pB,IAAK,SACLlG,MAAO,SAAgBjC,EAAGkyB,GACtB,MiE3sQGrlB,GAAAe,iBAAAmF,OAAA/S,EAAPkyB,MjE8sQA/pB,IAAK,WACLlG,MAAO,SAAkBjC,EAAGkyB,GACxB,MiE5sQGrlB,GAAAe,iBAAA8zB,SAAA1hC,EAAPkyB,MjE+sQA/pB,IAAK,MACLlG,MAAO,WACH,MiE7sQG4K,GAAAe,iBAAA8E,IAAA5Q,MAAA+K,EAAAe,iBAAP3K,cjEgtQAkF,IAAK,MACLlG,MAAO,WACH,MiE9sQG4K,GAAAe,iBAAA6E,IAAA3Q,MAAA+K,EAAAe,iBAAP3K,ejEktQG0+B,OAGR8C,0BAA0B,GAAGC,wBAAwB,GAAGpyB,uBAAuB,uBAAuB5F,WAAW,WAAWC,WAAW,aAAag4B,IAAI,SAASnlC,EAAQkB,EAAOJ,GACnL,YA6BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAI5B,QAASC,GAA2BN,EAAMhG,GACtC,IAAKgG,EACD,KAAM,IAAIO,gBAAe,4DAC5B,QAAOvG,GAAyE,YAA/C,mBAATA,GAAuB,YAAcwG,EAAQxG,KAAuC,kBAATA,GAA8BgG,EAAPhG,EAG/H,QAASyG,GAAUC,EAAUC,GACzB,GAA0B,kBAAfA,IAA4C,OAAfA,EACpC,KAAM,IAAIN,WAAU,4DAAoF,mBAAfM,GAA6B,YAAcH,EAAQG,IAC/ID,GAASnG,UAAY2B,OAAO0E,OAAOD,GAAcA,EAAWpG,WAAasG,aAAenF,MAAOgF,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAcL,IAAYzE,OAAO+E,eAAiB/E,OAAO+E,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GA1CpR,GAAIH,GAA4B,kBAAXW,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUjG,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXgG,SAAyBhG,EAAI0F,cAAgBM,QAAUhG,IAAQgG,OAAO5G,UAAY,eAAkBY,GAEtQe,QAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQskC,YAAc/+B,MAEtB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MkE94Q/IiG,EAAAzJ,EAAA,YACAqN,EAAArN,EAAA,wBACAwJ,EAAAxJ,EAAA,YACAqlC,EAAArlC,EAAA,eACAuN,EAAAvN,EAAA,gClE26QIolC,EAActkC,EAAQskC,YAAc,SAAUE,GAG9C,QAASF,GkEr6QTh7B,EAAA+D,GlEs6QIhH,EAAgB/D,KkEt6QgBgiC,ElEw6QhC,IAAIv7B,GAAQxC,EAA2BjE,MAAOgiC,EAAYn9B,WAAahF,OAAOqG,eAAe87B,IAAcrkC,KAAKqC,KkEv6Q1GgiC,EAD0BG,OlE66QhC,OAHA17B,GkEx6QAO,KAAAA,ElEy6QAP,EkEx6QAsE,iBAAAA,ElEy6QAtE,EkEx6QAgF,cAAqB,GAAAtB,GAAAuB,cAJWX,GAKnCtE,ElE0lRD,MA5LArC,GAAU49B,EkEn6QVE,GlEg7QAh9B,EAAa88B,IACTz8B,IAAK,eACLlG,MAAO,SAAsBsG,GACzB,MkE36QGA,aAAkBU,GAAAqI,OAAzBoD,clE86QAvM,IAAK,aACLlG,MAAO,SAAoByO,GACvB,IkE56QC9N,KAAAoiC,aAALt0B,GlE66QQ,OkE56QJ,ClE+6QA,KkE56QC9N,KAAAyL,cAAAyB,SAA4BlN,KAAAgH,KAAAmG,qBAA5BW,IAALV,UlE86QQ,OkE76QJ,ClEg7QA,IkE76QAU,EAAAkB,WAAApR,OAAJ,ElE86QQ,OkE76QJ,ClEg7QA,IkEz6QJykC,GAHIC,EAAJ,KACIC,KACAC,EAAwB,GAA5B/lB,IlE86QI,SkE56QA3O,EAACkB,WAAA1B,MAAsB,SAAAzQ,GlE86QnB,GkE56QI4lC,GAAQ5lC,EAAZqS,SlE66QA,OkE56QMuzB,aAAiBp8B,GAAAqI,OAAvBoD,cAII0wB,EAAAE,IAA0B7lC,EAAAuG,KAA9Bu/B,UlEg7QAH,EkE76QAnyB,IAA0BxT,EAAAuG,KAA1Bu/B,QAEA,OAAIL,GlE86QAA,EkE76QsBG,EAAAzzB,WAAtBpR,SACI0kC,EAAJ,KlEg7QAG,EkE76QAzzB,WAAArP,QAAyB,SAAAijC,GlE86QrBL,EkE76QAv/B,KAA6B4/B,EAAAx/B,KAA7Bu/B,UlEg7QJN,EkE76Q6B,GAAA5lB,KAA7B8lB,GAEIF,EAAA1lB,OAAoC4lB,EAAxC3kC,SAOA6kC,EAAAzzB,WAAApR,QAAJ0kC,KAIIG,EAACzzB,WAAA1B,MAAuB,SAAAs1B,EAAAvlC,GlE+6QxB,MkE/6QiCklC,GAAAllC,KAA+BulC,EAAAx/B,KAAxCu/B,gBlE67QpCp9B,IAAK,UACLlG,MAAO,SAAiB2N,GACpB,GAAI/F,GkE/6QRjH,KAAI6iC,EAAY7iC,KAAAgH,KAAA87B,aAAA91B,GAAhB,GACI+1B,EAAoB/1B,EAAAgC,WAAxBpR,OACIolC,EAAyBh2B,EAAAgC,WAAA,GAAAE,UAAAF,WAA7BpR,OAEIqlC,EAAJD,EACIE,EAAJH,EAEII,EAAoBnjC,KAAAgH,KAAxBm8B,iBlEk7QInjC,MkEj7QJgH,KAAAm8B,mBAAA,ClEm7QI,IkEh7QAC,GAASp2B,EAAAgC,WAAA,GAAAE,UAAAm0B,SAAbC,EACIC,EAAOv2B,EAAAgC,WAAA,GAAAE,UAAAF,WAAA,GAAAE,UAAAm0B,SAAXG,EACIC,EAAUz2B,EAAAgC,WAAgB+zB,EAAhB,GAAA7zB,UAAAF,WAA4Dg0B,EAA5D,GAAA9zB,UAAAm0B,SAAdG,EAEIE,EAAUD,EAAdF,EACII,EAAQD,GAAWT,EAAvB,ElEk7QIj2B,GkEh7QJgC,WAAA7Q,QAAAwB,QAAgC,SAAA9C,GlEi7QxB,MkEj7Q4BoK,GAAAD,KAAA48B,WAAqB/mC,EAAzBqS,YlEo7Q5B,KkEj7QC,GAAI7R,GAAT,EAAgBA,EAAhB4lC,EAAA5lC,IAAyC,ClEk7QjC,GkEj7QAolC,GAAQ,GAAIp8B,GAAAqI,OAAJoD,WAAqB,GAAIzL,GAAAqI,OAAJm1B,MAAAT,EAAwBG,GAAQlmC,EAAD,GAAhEsmC,IACI/B,EAAO5hC,KAAAgH,KAAA88B,QAAArB,EAAXz1B,ElEk7QI40B,GkEj7QJx+B,KAAYy/B,EAAA7zB,WAAA,GAAAE,UAAAF,WAAA3R,GAAZ+F,KlEm7QIw+B,EkEj7QJ5vB,YAAA,ClEm7QI,KkEj7QC,GAAI+xB,GAAT,EAAgBA,EAAhBb,EAAAa,IAA8C,ClEk7QtC,GkEj7QAC,GAAanB,EAAA7zB,WAAA+0B,GAAA70B,UAAAF,WAAA3R,GAAjB6R,UAGI+0B,EAAiBjkC,KAAAgH,KAAAk9B,cAAAF,EAArBvB,ElEi7QIwB,GkEh7QJ7gC,KAAsBy/B,EAAA7zB,WAAA+0B,GAAtB3gC,KlEi7QI6gC,EkEh7QJhtB,OAAwBhN,EAAAe,iBAAAqF,IAAqBwyB,EAAA7zB,WAAA+0B,GAArB3F,qBAAmEyE,EAAA7zB,WAAA+0B,GAAA70B,UAAAF,WAAA3R,GAA3F+gC,sBlEk7QI6F,EkEh7QJjyB,YAA6B/H,EAAAe,iBAAA8zB,SAA0B+D,EAAA7zB,WAAA+0B,GAA1B5F,0BAA6E0E,EAAA7zB,WAAA+0B,GAAA70B,UAAAF,WAAA3R,GAA1G8gC,2BlEi7QIyD,EkEh7QJ5vB,YAAmB/H,EAAAe,iBAAAqF,IAAqBuxB,EAArB5vB,YAAuCiyB,EAA1DjyB,alEm7QA,GkEh7QAmyB,GAAkC,SAAAllC,GlEi7Q9B,MkEj7QmCgL,GAAAe,iBAAAmF,OAAAlR,EAA2B2iC,EAAhC5vB,alEm7QlC,IkEl7QA4vB,EAAA5vB,YAAA+H,OAAJ,GAAgC,ClEm7QxB,GkEl7QA5H,GAAOlI,EAAAe,iBAAAmF,OAAA,EAAX+yB,ElEm7QIiB,GkEl7Q8B,SAAAllC,GlEm7Q1B,MkEn7Q0BkT,IlEu7QlC,GkEp7QAb,GAAJ,ClEq7QImxB,GkEp7QJzzB,WAAArP,QAAyB,SAAAskC,GlEq7QjBA,EkEp7QJjyB,YAA6BmyB,EAAgCF,EAA7DjyB,alEq7QIV,EkEp7QarH,EAAAe,iBAAAqF,IAAAiB,EAAqC2yB,EAAtDjyB,alEq7QIiyB,EkEp7QJjyB,YAA6B/K,EAAA8D,iBAAAqwB,UAAgC6I,EAA7DjyB,elEu7QAhS,KkEp7QJokC,iCAAsC3B,EAAtCzzB,WAAAsC,GlEq7QIswB,EkEp7QJ5vB,YAAmBhS,KAAA+K,iBAAAqwB,UAAgCwG,EAAnD5vB,alEs7QAhS,KkEp7QJokC,iCAAsCp3B,EAAtCgC,YlEs7QIhP,KkEn7QJgH,KAAAm8B,kBAAAA,ElEo7QInjC,KkEn7QJgH,KAAAq9B,4BlEs7QA9+B,IAAK,mCACLlG,MAAO,SAA0C2P,EAAYsC,GACzD,GAAI1E,GkEp7QR5M,IlE47QI,IkE57QJsR,IlEu7QQA,EkEt7QJ,ElEu7QItC,EkEt7QJrP,QAAmB,SAAA9C,GlEu7QXyU,EkEt7QarH,EAAAe,iBAAAqF,IAAAiB,EAAqCzU,EAAtDmV,iBAGHV,EAAAyI,OAAL,GAAA,ClEu7QQ3T,EAASiD,IkEt7QbygB,KAAA,+DAAAxY,ElEu7QI,IkEt7QAgzB,GAAJ,EACIC,EAHuB,KAIvBC,EAAJ,ElEu7QIx1B,GkEt7QJrP,QAAmB,SAAA9C,GlEu7QXA,EkEt7QJmV,YAAgByyB,SAASx6B,EAAAe,iBAAAiS,MAAuBpgB,EAAvBmV,YAAAwyB,GAAzBD,GlEu7QID,GkEt7QoCznC,EAAxCmV,alEw7QA,IkEt7QA0yB,GAAOH,EAAXD,ClEu7QIl+B,GAASiD,IkEt7QbygB,KAAS,2CAAT0a,EAAAE,GlEu7QI11B,EkEt7QJ,GAAAgD,YAA4B/H,EAAAe,iBAAAqF,IAAAq0B,EAA2B11B,EAAA,GAAvDgD,alEu7QIsyB,EkEt7QJ,ElEu7QIt1B,EkEt7QJrP,QAAmB,SAAA9C,GlEu7QXA,EkEt7QJmV,YAAgBpF,EAAA7B,iBAAAqwB,UAAgCnxB,EAAAe,iBAAAmF,OAAwBs0B,SAAS5nC,EAAjCmV,aAAhDuyB,WlE47QLvC,GACTC,EAAW0C,UAEb3C,GAAYG,MAAQ,gBAEjByC,+BAA+B,GAAGC,cAAc,GAAGn1B,uBAAuB,uBAAuB5F,WAAW,WAAWC,WAAW,aAAa+6B,IAAI,SAASloC,EAAQkB,EAAOJ,GAC9K,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAW/H1C,GAAQinC,UAAY,WAChC,QAASA,GmEpoRTvhC,GnEqoRIW,EAAgB/D,KmEpoRhB2kC,GnEsoRA3kC,KmEtoRAoD,KAAAA,EnEgqRJ,MApBA8B,GAAay/B,IACTp/B,IAAK,eACLlG,MAAO,WACH,KmE1oRE,wDAAwDW,KAA9DoD,QnEgpRAmC,IAAK,aACLlG,MAAO,SAAoBsG,GACvB,KmE7oRE,sDAAsD3F,KAA5DoD,QnEgpRAmC,IAAK,UACLlG,MAAO,SAAiBsG,GACpB,KmE9oRE,mDAAmD3F,KAAzDoD,SnEkpRGuhC,UAGLI,IAAI,SAASnoC,EAAQkB,EAAOJ,GAClC,YAmBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAnB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ2N,kBAAoBpI,MAE5B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MoExrR/I4kC,EAAApoC,EAAA,iBpEosRwBc,GAAQ2N,kBAAoB,WAChD,QAASA,GoE7rRTrE,EAAA+D,GpE8rRIhH,EAAgB/D,KoE9rReqL,GpEgsR/BrL,KoEnsRJilC,cpEosRIjlC,KoEnsRJklC,mBpEqsRIllC,KoElsRAgH,KAAAA,EpEmsRAhH,KoElsRA+K,iBAAAA,EpEmsRA/K,KoElsRAmlC,kBAAuB,GAAAH,GAAAhD,YAAAh7B,EAAvB+D,IpEytRJ,MApBA7F,GAAamG,IACT9F,IAAK,oBACLlG,MAAO,SAA2B+lC,GAC9BplC,KoEpsRJilC,WAAAjiC,KAAAoiC,GpEqsRIplC,KoEpsRJklC,gBAAqBE,EAArBhiC,MAAAgiC,KpEusRA7/B,IAAK,qBACLlG,MAAO,SAA4B+D,GAC/B,MoEpsRGpD,MAAAklC,gBAAP9hC,MpEusRAmC,IAAK,sBACLlG,MAAO,SAA6BsG,GAChC,MAAO3F,MoErsRJilC,WAAAvV,OAAuB,SAAA2V,GpEssRtB,MoEtsR0BA,GAAAjD,aAAJz8B,SpE2sR3B0F,OAGRi6B,iBAAiB,KAAKC,IAAI,SAAS3oC,EAAQkB,EAAOJ,GACrD,YAgBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAhB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,GAGX,IAAI6F,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,KAUhI1C,GAAQ8nC,SAAW,WAE9B,QAASA,GqEzvRT13B,EAAAmB,GrE0vRIlL,EAAgB/D,KqE1vRawlC,GrE4vR7BxlC,KqE/vRJylC,YrEiwRIzlC,KqE7vRA8N,KAAAA,ErE8vRA9N,KqE7vRAiP,cAAAA,ErE8vRAjP,KqE7vRAuF,IAAWigC,EAAA7T,YAAX3xB,MrE00RJ,MA1EAkF,GAAasgC,IACTjgC,IAAK,cACLlG,MAAO,SAAqByO,EAAMmB,GAC9B,GqEzvRAL,GAAW,GAAA42B,GAAA13B,EAAfmB,ErE4vRI,OAFAjP,MqEzvRJylC,SAAAziC,KAAA4L,GrE0vRI5O,KqEzvRJuF,IAAWigC,EAAA7T,YAAX3xB,MACA4O,KrE4vRArJ,IAAK,cACLlG,MAAO,SAAqBuhC,GACxB,MqE1vRG4E,GAAA12B,YAAA9O,KAAP4gC,MrE6vRAr7B,IAAK,mBACLlG,MAAO,WACH,GqEltRSqmC,GAAArlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,ErEotRT,OqEntRGmlC,GAAAG,iBAAA3lC,KAAP0lC,QrEstRAngC,IAAK,cACLlG,MAAO,SAAqBuP,GACxB,GqEpxRqBg3B,GAAAvlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAY,MACjCxD,EAAI+R,EAAAd,KAAAkB,WAAyBJ,EAAjCK,eACI1J,EAAMqJ,EAAAd,KAAA83B,GAAA,KAAgC/oC,EAAA+oC,GAAgB/oC,EAAhB+oC,GAAiCh3B,EAAAK,cAA3E,ErEsxRI,OqErxRG1J,GAAAhD,QAAA,MAAP,QrEwxRAgD,IAAK,cACLlG,MAAO,SAAqBuP,EAAUgyB,GAClC,GqE3wRDhyB,EAAAd,OAAA8yB,GAAgChyB,EAAAd,KAAA+3B,MAAsBjF,EAAzDiF,IrE4wRQ,MqE3wRJj3B,ErE6wRA,KqE3wRA,GAAIvR,GAAR,EAAaA,EAAEuR,EAAA62B,SAAf7nC,OAAAP,IAA6C,CrE4wRrC,GqE3wRAmP,GAAIg5B,EAAA12B,YAAqBF,EAAA62B,SAArBpoC,GAARujC,ErE4wRI,IqE3wRJp0B,ErE4wRQ,MqE3wRJA,OrEgxRRjH,IAAK,mBACLlG,MAAO,SAA0BuP,GAC7B,GqE7wR0Bk3B,GAAAzlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAAgBulC,EAAAvlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAY,OAAQqlC,EAAArlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAS,GAEvEohB,EAAM+jB,EAAA7T,YAAA/iB,EAAVg3B,GACIG,EAAJ,ErEmyRI,OAlBAn3B,GqE/wRJ62B,SAAA9lC,QAA0B,SAAA6M,GACtBu5B,IrEixRYA,GqEhxRRD,EACmB,KAAfJ,EAEA,MrEkxRJK,GqE9wRWP,EAAAG,iBAAAn5B,EAAAs5B,EAAAF,EAAkDF,EAAjE,QAED92B,EAAA62B,SAAH7nC,SrEgxRYmoC,EqE/wRRD,EACmB,KAAAJ,EAAfK,EAEc,OAAAA,EAAd,KAODtkB,EAAPskB,MrE+wRGP,UAGLQ,IAAI,SAASppC,EAAQkB,EAAOJ,GAClC,YAyBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAzB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ8gB,kBAAoBvb,MAE5B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MsEr2R/IoK,EAAA5N,EAAA,YACAyJ,EAAAzJ,EAAA,YACAwJ,EAAAxJ,EAAA,YACAqpC,EAAArpC,EAAA,atEo3RwBc,GAAQ8gB,kBAAoB,WAChD,QAASA,GsE/2RTxR,EAAAk5B,GtEg3RI,GAAIz/B,GsEh3R6BzG,ItEk3RjC+D,GAAgB/D,KsEl3RiBwe,GtEo3RjCxe,KsEv3RJ2W,YtEw3RI3W,KsEv3RJsI,UAAS,EtEy3RLtI,KsEt3RAsI,SAAA49B,EtEu3RAlmC,KsEt3RAmmC,QAAAn5B,GAAArN,QAA2B,SAAAymC,EAAA/oC,GtEu3RvBoJ,EsEt3RAkQ,SAAA3T,KAAmB,GAAAwH,GAAAqE,OAAW,KAAKxR,EAAhB,GAAnB+oC,MAEJ,IAAGpmC,KAAA2W,SAAA/Y,StEu3RCoC,KsEt3RA2W,SAAA,GAAA5C,GAAA,WtEu6RR,MA7CA7O,GAAasZ,IACTjZ,IAAK,UACLlG,MAAO,SAAiB2N,GAMpB,IALA,GsEv3RJc,GtEu3RQ7G,EsEx3RRjH,KAAIqmC,GAAJr5B,GAEIs5B,KACED,EAANzoC,QtE23RQkQ,EsE13RGu4B,EAAPE,QAEGvmC,KAAAsI,WAAkBwF,EAAA6D,cAAmB3R,KAAnBsI,SAArB,aAIGwF,YAAgBzH,GAAAqI,OAAnBC,atE23RQ23B,EsE13RJtjC,KAAA8K,GtE83RAA,EsE13RJkB,WAAArP,QAAwB,SAAAiiC,EAAAvkC,GtE23RhBgpC,EsE13RJrjC,KAAe4+B,EAAf1yB,atE83RJ,OAAO9I,GAASO,MsE13RbkY,mBAAAynB,EAAyB1vB,IAAkB,SAAAgqB,GtE23R1C,GsE13RAwF,KtEw4RA,OAbAxF,GsE13RJ5xB,WAAArP,QAAgC,SAAAiiC,EAAAvkC,GtE43RxB,IsE13RD4J,EAAAqB,UAAkBs5B,EAAAjwB,cAAmB1K,EAAnBqB,SAArB,WtE03RI,CAIA,GsE13RAk+B,GAAiBv/B,EAAAk/B,QAAavE,EANK1yB,UtEi4RnCs3B,GsE13RJ7mC,QAAuB,SAAA8mC,GtE23Rf,GsE13RA73B,GAAW,GAAAq3B,GAAAT,SAAA5E,EAAfvjC,EtE23RI+oC,GsE13RJpjC,KAAA4L,GtE23RIA,EsE13RJ62B,SAAAgB,OAIRL,StE83RD5nB,OAGRkoB,aAAa,GAAGC,WAAW,GAAG78B,WAAW,WAAWC,WAAW,aAAa68B,IAAI,SAAShqC,EAAQkB,EAAOJ,GAC3G,YAmBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCAnB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQmR,OAAS5L,MAEjB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MuEv8R/I6lC,EAAArpC,EAAA,avEm9Rac,GAAQmR,OAAS,WAC1B,QAASA,GuE98RTkF,EAAAqyB,GvE+8RIriC,EAAgB/D,KuE/8RM6O,GvEi9RtB7O,KuEn9RJomC,avEq9RIpmC,KuEl9RA+T,GAAAA,EvEm9RA/T,KuEl9RAomC,UAAiBA,MvEm9RjBpmC,KuEl9RAuF,IAAWsJ,EAAA8iB,YAAX3xB,MvEgiSJ,MA3EAkF,GAAa2J,IACTtJ,IAAK,cACLlG,MAAO,SAAqByO,EAAMmB,GAC9B,GuEp9RAL,GAAW,GAAAq3B,GAAAT,SAAA13B,EAAfmB,EvEu9RI,OAFAjP,MuEp9RJomC,UAAApjC,KAAA4L,GvEq9RI5O,KuEp9RJuF,IAAWsJ,EAAA8iB,YAAX3xB,MACA4O,KvEu9RArJ,IAAK,SACLlG,MAAO,SAAgBmP,GACnB,GuEh9ROq4B,KAAAxmC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,KAAAA,UAAA,EvEk9RP,OuEj9RDL,MAAAuF,KAAYiJ,EAAfjJ,MAIOshC,GAAY7mC,KAAA+T,KAAYvF,EAA/BuF,OvEo9RAxO,IAAK,cACLlG,MAAO,SAAqBuhC,GACxB,MuEl9RG/xB,GAAAC,YAAA9O,KAAP4gC,MvEq9RAr7B,IAAK,iBACLlG,MAAO,WACH,GuEp7ROqmC,GAAArlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,EvEs7RP,OuEr7RGwO,GAAAyN,eAAAtc,KAAP0lC,QvEw7RAngC,IAAK,cACLlG,MAAO,SAAqBmP,GACxB,GuE5+RAjJ,GAAJ,EvEg/RI,OAHAiJ,GuE5+RJ43B,UAAAzmC,QAAyB,SAAA6M,GvE6+RjB,MuE7+RoBjH,KAAMA,EAAA,IAAD,IAAeiH,EAAvBjH,MACzBA,KvEi/RAA,IAAK,cACLlG,MAAO,SAAqBmP,EAAQoyB,GAChC,IuEn+RA,GAAIvjC,GAAR,EAAaA,EAAEmR,EAAA43B,UAAfxoC,OAAAP,IAA4C,CvEo+RpC,GuEn+RAuR,GAAWq3B,EAAAT,SAAA12B,YAAqBN,EAAA43B,UAArB/oC,GAAfujC,EvEo+RI,IuEn+RJhyB,EvEo+RQ,MuEn+RJA,GvEs+RJ,MuEn+RJ,SvEs+RArJ,IAAK,iBACLlG,MAAO,SAAwBmP,GAC3B,GuEr+RsBs3B,GAAAzlC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAAgBymC,EAAAzmC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,IAAAA,UAAA,GAEtCohB,EAAJ,EvEi/RI,OAVAjT,GuEt+RJ43B,UAAAzmC,QAAyB,SAAA6M,GACrBiV,IvEw+RYA,GuEv+RRqkB,EACI,KAEA,MvEy+RJrkB,GuEp+RGwkB,EAAAT,SAAAG,iBAAAn5B,EAAAs5B,EAAA,OAAP,QAEDgB,GAAH7jC,SAAgBuL,EAAAuF,GACLvF,EAAAuF,GAAA,IAAP0N,EAEJA,MvEw+RG5S,OAGR63B,aAAa,KAAKK,IAAI,SAASnqC,EAAQkB,EAAOJ,GACjD,YAqBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQspC,qBAAuB/jC,MAE/B,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MwE1jS/I6J,EAAArN,EAAA,uBACAA,GAAA,YxEwkS2Bc,EAAQspC,qBAAuB,WACtD,QAASA,GwEpkSTj8B,GxEqkSIhH,EAAgB/D,KwEpkShBgnC,GxEskSAhnC,KwEtkSA+K,iBAAAA,ExEulSJ,MAdA7F,GAAa8hC,IACTzhC,IAAK,WACLlG,MAAO,SAAkBA,GAErB,GwEvkSD,OAAAA,GAAH4D,SAAmB5D,ExEwkSX,OwEvkSJ,CxE0kSAA,GwEvkSI4K,EAAAe,iBAAAuG,SAARlS,ExEwkSI,IwEvkSA4nC,GAAiBC,OAAAC,kBARV,gBxEglSP,OwEvkSGl9B,GAAAe,iBAAAqH,QAAAhT,GAAA4nC,IAAA,GAAyDh9B,EAAAe,iBAAAqH,QAAAhT,EAAA4nC,IAAhE,MxE2kSGD,OAGRt3B,uBAAuB,uBAAuB3F,WAAW,aAAaq9B,IAAI,SAASxqC,EAAQkB,EAAOJ,GACrG,YAqBA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCArB5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQ2pC,0BAA4BpkC,MAEpC,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,MyE/mS/I6J,EAAArN,EAAA,uBACAA,GAAA,YzE6nSgCc,EAAQ2pC,0BAA4B,WAChE,QAASA,GyEznSTt8B,GzE0nSIhH,EAAgB/D,KyEznShBqnC,GzE2nSArnC,KyE3nSA+K,iBAAAA,EzE0oSJ,MAZA7F,GAAamiC,IACT9hC,IAAK,WACLlG,MAAO,SAAkBA,EAAOuiC,GAC5B,GyE7nSD,OAAAviC,GAAH4D,SAAmB5D,EzE8nSX,OyE7nSJ,CzEgoSA,IyE7nSAA,GAAQ4K,EAAAe,iBAAAuG,SAAZlS,EzE8nSI,OyE7nSGA,GAAAgT,QAAA,IAAA,GAAyBhT,EAAAgT,QAAA,IAAhC,MzEioSGg1B,OAGR33B,uBAAuB,uBAAuB3F,WAAW,aAAau9B,IAAI,SAAS1qC,EAAQkB,EAAOJ,GACrG,YA2BA,SAASqG,GAAgBlB,EAAUzC,GAC/B,KAAMyC,YAAoBzC,IACtB,KAAM,IAAI4D,WAAU,qCA3B5BnE,OAAOC,eAAepC,EAAS,cAC3B2B,OAAO,IAEX3B,EAAQgO,cAAgBzI,MAExB,IAAIiC,GAAe,WACf,QAASC,GAAiBC,EAAQC,GAC9B,IAAK,GAAIhI,GAAI,EAAGA,EAAIgI,EAAMzH,OAAQP,IAAK,CACnC,GAAIiI,GAAaD,EAAMhI,EAAGiI,GAAWb,WAAaa,EAAWb,aAAc,EAAMa,EAAWX,cAAe,EAAS,SAAWW,KAAYA,EAAWZ,UAAW,GAAK7E,OAAOC,eAAesF,EAAQE,EAAWC,IAAKD,IAE3N,MAAO,UAAUlF,EAAaoF,EAAYC,GACyF,MAA5HD,IAAYL,EAAiB/E,EAAYlC,UAAWsH,GAAgBC,GAAaN,EAAiB/E,EAAaqF,GAAoBrF,M0EjqS/IiG,GADAzJ,EAAA,YACAA,EAAA,aACAqN,EAAArN,EAAA,wBACA2qC,EAAA3qC,EAAA,iCACA4qC,EAAA5qC,EAAA,2B1EkrSoBc,GAAQgO,cAAgB,WACxC,QAASA,G0E7qSTX,G1E8qSIhH,EAAgB/D,K0E7qShB0L,G1E+qSA1L,K0E/qSA+K,iBAAAA,E1EgrSA/K,K0E/qSAynC,0BAAiC,GAAAF,GAAAF,0BAAjCt8B,G1EgrSA/K,K0E/qSA0nC,qBAA4B,GAAAF,GAAAR,qBAA5Bj8B,G1E+uSJ,MA7DA7F,GAAawG,IACTnG,IAAK,WACLlG,MAAO,SAAkBqO,GACrB,GAAIjH,G0EhrSRzG,KAAI2nC,EAAmB,GAAAthC,GAAvBuhC,gB1EwrSI,OAJAl6B,G0ElrSJ/N,QAAc,SAAA5C,G1EmrSN0J,E0ElrSJohC,aAAA9qC,EAAA4qC,KAGJA,K1EqrSApiC,IAAK,eACLlG,MAAO,SAAsByO,GACzB,GAAI7G,G0EprSkDjH,KAA3C2nC,EAAAtnC,UAAAzC,OAAA,GAAAqF,SAAA5C,UAAA,GAAAA,UAAA,GAAmB,GAAAgG,GAAwBuhC,gB1EwrStD,M0EtrSA95B,YAAgBzH,GAAAqI,OAApBkwB,c1EsrSI,C0EnrSC9wB,EAAAkB,WAALpR,Q1EurSQ+pC,E0EtrSJG,SAAA,iBAAAh6B,E1EyrSA,I0EtrSAwD,GAAiBrH,EAAAe,iBAAAuG,SAArB,E1EotSI,OA5BAzD,G0EtrSJkB,WAAArP,QAAwB,SAAA9C,EAAAQ,G1E0rShB,GAHAR,E0EtrSJkrC,iBAAA,eAAA,G1EurSIlrC,E0EtrSJkrC,iBAAA,UAAA,GAEIj6B,YAAgBzH,GAAAqI,OAApBoD,WAAsC,C1EurS9B,G0EtrSAE,GAAcnV,EAAlBshC,yBACKl3B,GAAAwgC,0BAAAv6B,SAAL8E,G1E4rSQV,E0ErrSarH,EAAAe,iBAAAqF,IAAAiB,EAAjBU,GANI/H,EAAAe,iBAAA+G,OAAwBlV,EAA5BmV,e1EurSQ21B,E0EtrSJG,UAA2B1kC,KAAD,qBAA6B4D,MAAOghC,OAAU3qC,EAAxE,IAAAyQ,G1EurSIjR,E0EtrSJkrC,iBAAA,eAAA,I1E4rSR,G0ErrSA9wB,GAASpa,EAAbuhC,oBACKn3B,GAAAygC,qBAAAx6B,SAAL+J,K1EsrSQ0wB,E0ErrSJG,UAA2B1kC,KAAD,gBAAwB4D,MAAOghC,OAAU3qC,EAAnE,IAAAyQ,G1EurSIjR,E0ErrSJkrC,iBAAA,UAAA,MAKJj6B,YAAgBzH,GAAAqI,OAApBoD,cACQm2B,MAAA32B,IAA0BA,EAAAyI,OAA9B,I1EorSQ4tB,E0EnrSJG,SAAA,2BAAAh6B,IAKR65B,O1EsrSGj8B,OAGRw8B,2BAA2B,GAAGC,gCAAgC,GAAGz4B,uBAAuB,uBAAuB5F,WAAW,WAAWC,WAAW,aAAaq+B,mBAAmB,SAASxrC,EAAQkB,EAAOJ,GAC3M,YAEAmC,QAAOC,eAAepC,EAAS,cAC7B2B,OAAO,GAGT,IAAIqB,GAAS9D,EAAQ,c2EtwSrBiD,QAAA+S,KAAAlS,GAAAf,QAAA,SAAA4F,G3EywSc,YAARA,GAA6B,eAARA,GACzB1F,OAAOC,eAAepC,EAAS6H,GAC7Bd,Y2E3wSJ,E3E4wSI1E,IAAK,WACH,MAAOW,G2E7wSb6E,U3EkxSG8iC,cAAc","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":55,\"./jobs/jobs-manager\":57,\"./objective/objective-rules-manager\":58,\"./operations/operations-manager\":69,\"./policies/policy\":72,\"./validation/tree-validator\":75,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    if (e.isFieldValid('payoff', true, false)) {\n                        try {\n                            e.computedValue(null, 'payoff', _this2.expressionEngine.evalPayoff(e));\n                        } catch (err) {\n                            //   Left empty intentionally\n                        }\n                    }\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":54}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../sensitivity-analysis/sensitivity-analysis-job\":14,\"../sensitivity-analysis/steps/init-policies-step\":16,\"./probabilistic-sensitivity-analysis-job-parameters\":7,\"./steps/compute-policy-stats-step\":9,\"./steps/prob-calculate-step\":10}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _calculateStep = require(\"../../sensitivity-analysis/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../policies/policy\":72,\"../../../../validation/tree-validator\":75,\"../../../engine/batch/batch-step\":23,\"../../../engine/exceptions/job-computation-exception\":26,\"../../sensitivity-analysis/steps/calculate-step\":15,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":75,\"../../engine/batch/batch-step\":23,\"../../engine/job\":49,\"../../engine/job-status\":48,\"../../engine/simple-job\":50,\"../../engine/step\":53,\"./recompute-job-parameters\":11}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":72,\"../../engine/simple-job\":50,\"./sensitivity-analysis-job-parameters\":13,\"./steps/calculate-step\":15,\"./steps/init-policies-step\":16,\"./steps/prepare-variables-step\":17,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":72,\"../../../../validation/tree-validator\":75,\"../../../engine/batch/batch-step\":23,\"../../../engine/exceptions/job-computation-exception\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = [];\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":71,\"../../../engine/job-status\":48,\"../../../engine/step\":53}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../computations-utils\":4,\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":71,\"../../../../policies/policy\":72,\"../../../../validation/tree-validator\":75,\"../../../engine/batch/batch-step\":23,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":71,\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":50,\"./steps/calculate-step\":18,\"./steps/init-policies-step\":19,\"./steps/prepare-variables-step\":20,\"./tornado-diagram-job-parameters\":21}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":30,\"../job-status\":48,\"../step\":53,\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = exports.ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message, data) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n        _this.data = data;\n        _this.name = _this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":24,\"./job-data-invalid-exception\":27,\"./job-execution-already-running-exception\":28,\"./job-instance-already-complete-exception\":29,\"./job-interrupted-exception\":30,\"./job-parameters-invalid-exception\":31,\"./job-restart-exception\":32}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],33:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":25,\"./execution-context\":33,\"./job\":49,\"./job-execution\":37,\"./job-execution-flag\":35,\"./job-execution-listener\":36,\"./job-instance\":38,\"./job-key-generator\":39,\"./job-launcher\":40,\"./job-parameter-definition\":41,\"./job-parameters\":42,\"./job-status\":48,\"./simple-job\":50,\"./step\":53,\"./step-execution\":52,\"./step-execution-listener\":51}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":33,\"./job-status\":48,\"./step-execution\":52,\"sd-utils\":\"sd-utils\"}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":27,\"./exceptions/job-parameters-invalid-exception\":31,\"./exceptions/job-restart-exception\":32,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":41,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":33,\"../job-execution\":37,\"../job-instance\":38,\"../step-execution\":52,\"./job-repository\":44,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":28,\"../exceptions/job-instance-already-complete-exception\":29,\"../execution-context\":33,\"../job-execution\":37,\"../job-instance\":38,\"../job-key-generator\":39,\"../job-result\":47,\"../job-status\":48,\"../step-execution\":52,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":44,\"./simple-job-repository\":45,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":33,\"./job-status\":48,\"./step-execution\":52,\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":27,\"./exceptions/job-interrupted-exception\":30,\"./exceptions/job-parameters-invalid-exception\":31,\"./job-execution-flag\":35,\"./job-result\":47,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":30,\"./exceptions/job-restart-exception\":32,\"./execution-context\":33,\"./job\":49,\"./job-execution-flag\":35,\"./job-status\":48,\"./step\":53,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":33,\"./job-execution\":37,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":30,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":34,\"./job-worker\":56,\"./jobs-manager\":57}],55:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":36,\"./engine/job-instance\":38,\"./engine/job-status\":48,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],57:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":8,\"./configurations/recompute/recompute-job\":12,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":14,\"./configurations/tornado-diagram/tornado-diagram-job\":22,\"./engine/job-execution-flag\":35,\"./engine/job-execution-listener\":36,\"./engine/job-launcher\":40,\"./engine/job-parameters\":42,\"./engine/job-repository/idb-job-repository\":43,\"./engine/job-repository/simple-job-repository\":45,\"./engine/job-repository/timeout-job-repository\":46,\"./engine/job-status\":48,\"./job-worker\":56,\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n\n        this.expressionEngine = expressionEngine;\n        var max = new _rules.ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new _rules.MaxiMinRule(expressionEngine);\n        var maxiMax = new _rules.MaxiMaxRule(expressionEngine);\n        var min = new _rules.ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new _rules.MiniMinRule(expressionEngine);\n        var miniMax = new _rules.MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name] = max;\n        this.ruleByName[maxiMin.name] = maxiMin;\n        this.ruleByName[maxiMax.name] = maxiMax;\n        this.ruleByName[min.name] = min;\n        this.ruleByName[miniMin.name] = miniMin;\n        this.ruleByName[miniMax.name] = miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedBasePayoff();\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":61,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":59,\"./expected-value-minimization-rule\":60,\"./maxi-max-rule\":62,\"./maxi-min-rule\":63,\"./mini-max-rule\":64,\"./mini-min-rule\":65,\"./objective-rule\":66}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],65:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":66,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _decision = require('../../policies/decision');\n\nvar _policy = require('../../policies/policy');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        _classCallCheck(this, ObjectiveRule);\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: 'setDecisionPolicy',\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: 'clearDecisionPolicy',\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: '_makeDecision',\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: 'computePayoff',\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.cValue(e.childNode, 'payoff')).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: 'cValue',\n        value: function cValue(object, fieldName, value) {\n            return object.computedValue(this.name, fieldName, value);\n        }\n    }, {\n        key: 'baseProbability',\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: 'basePayoff',\n        value: function basePayoff(edge) {\n            return edge.computedBasePayoff();\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: 'add',\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: 'subtract',\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: 'divide',\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: 'max',\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: 'min',\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/decision\":70,\"../../policies/policy\":72,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":75,\"./operation\":68,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],69:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":67}],70:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":70,\"./policy\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],72:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":70}],73:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],74:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],75:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _probabilityValueValidator = require('./probability-value-validator');\n\nvar _payoffValueValidator = require('./payoff-value-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: 'validate',\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: 'validateNode',\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n                e.setValueValidity('payoff', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n                var payoff = e.computedBasePayoff();\n                if (!_this2.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                    // console.log('invalidPayoff', e);\n                    e.setValueValidity('payoff', false);\n                }\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":73,\"./probability-value-validator\":74,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                if(e.isFieldValid('payoff', true, false)){\n                    try{\n                        e.computedValue(null, 'payoff', this.expressionEngine.evalPayoff(e))\n                    }catch (err){\n                        //   Left empty intentionally\n                    }\n                }\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../sensitivity-analysis/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {CalculateStep} from \"../../sensitivity-analysis/steps/calculate-step\";\nimport {JobComputationException} from \"../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult)\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {JobComputationException} from \"../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data=[]\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError extends Error {\n    data;\n    constructor(message, data) {\n        super(message);\n        this.data = data;\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {ExpectedValueMaximizationRule, ExpectedValueMinimizationRule, MaxiMinRule, MaxiMaxRule, MiniMinRule, MiniMaxRule} from \"./rules\";\nimport {log} from \"sd-utils\"\nimport * as model from \"sd-model\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName={};\n\n    constructor(expressionEngine, currentRuleName){\n        this.expressionEngine=expressionEngine;\n        var max = new ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new MaxiMinRule(expressionEngine);\n        var maxiMax = new MaxiMaxRule(expressionEngine);\n        var min = new ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new MiniMinRule(expressionEngine);\n        var miniMax = new MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name]=max;\n        this.ruleByName[maxiMin.name]=maxiMin;\n        this.ruleByName[maxiMax.name]=maxiMax;\n        this.ruleByName[min.name]=min;\n        this.ruleByName[miniMin.name]=miniMin;\n        this.ruleByName[miniMax.name]=miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if(currentRuleName){\n            this.currentRule = this.ruleByName[currentRuleName];\n        }else{\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedBasePayoff();\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {domain as model} from 'sd-model'\nimport {Decision} from \"../../policies/decision\";\nimport {Policy} from \"../../policies/policy\";\nimport {Utils} from \"sd-utils\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule{\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    constructor(name, maximization, expressionEngine){\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n    }\n\n    setDecisionPolicy(decisionPolicy){\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    clearDecisionPolicy(){\n        this.decisionPolicy=null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs){\n        var best;\n        if(this.maximization){\n            best = this.max(...childrenPayoffs);\n        }else{\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=>{\n            if(ExpressionEngine.compare(best, p) == 0){\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs){\n        if(this.decisionPolicy){\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if(decision){\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=0, aggregatedPayoff=0){\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            }else{\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=>{\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if(childPayoff < worstChild){\n                        worstChild = childPayoff;\n                        worstCount=1;\n                    }else if(childPayoff.equals(worstChild)){\n                        worstCount++\n                    }\n                    if(childPayoff > bestChild){\n                        bestChild = childPayoff;\n                        bestCount=1;\n                    }else if(childPayoff.equals(bestChild)){\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if(sumweight>0){\n                node.childEdges.forEach(e=>{\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'),this.cValue(e.childNode, 'payoff')).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff=this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node){\n        throw 'computeOptimal function not implemented for rule: '+this.name\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldName, value){\n        return  object.computedValue(this.name, fieldName, value);\n    }\n\n    baseProbability(edge){\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge){\n        return edge.computedBasePayoff();\n    }\n\n    clearComputedValues(object){\n        object.clearComputedValues(this.name);\n    }\n\n    add(a,b){\n        return ExpressionEngine.add(a,b)\n    }\n    subtract(a,b){\n        return ExpressionEngine.subtract(a,b)\n    }\n    divide(a,b){\n        return ExpressionEngine.divide(a,b)\n    }\n\n    multiply(a,b){\n        return ExpressionEngine.multiply(a,b)\n    }\n\n    max(){\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min(){\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {Utils} from 'sd-utils'\nimport {domain as model, ValidationResult} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n            e.setValueValidity('payoff', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if(!ExpressionEngine.isHash(e.probability)){\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n            var payoff = e.computedBasePayoff();\n            if (!this.payoffValueValidator.validate(payoff)) {\n                validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                // console.log('invalidPayoff', e);\n                e.setValueValidity('payoff', false);\n            }\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
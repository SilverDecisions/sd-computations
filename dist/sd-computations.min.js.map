{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/compute-policy-stats-step.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prob-calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","extendedPolicyDescription","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_initPoliciesStep","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","jobRepository","batchSize","addStep","InitPoliciesStep","calculateStep","ProbCalculateStep","ComputePolicyStatsStep","execution","stepExecutions","total","current","getProgress","SensitivityAnalysisJob","../sensitivity-analysis/sensitivity-analysis-job","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","9","_step","_jobStatus","_Step","stepExecution","jobResult","getJobParameters","numberOfRuns","rule","ruleByName","payoffsPerPolicy","policies","map","rows","row","policyIndex","isString","payoff","maximization","medians","payoffs","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","exitStatus","JOB_STATUS","COMPLETED","Step","../../../engine/job-status","../../../engine/step","10","_calculateStep","_CalculateStep","getJobExecutionContext","variableNames","executionContext","put","expectedValues","fill","startIndex","chunkSize","variables","variableValues","runIndex","singleRunVariableValues","evaluated","formula","item","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","CalculateStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","../../sensitivity-analysis/steps/calculate-step","11","RecomputeJobParameters","12","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","checkValidityAndRecomputeObjective","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/simple-job","../../engine/step","./recompute-job-parameters","13","SensitivityAnalysisJobParameters","NUMBER","14","_simpleJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_SimpleJob","initSteps","PrepareVariablesStep","withHeaders","headers","rowCells","toPolicyString","SimpleJob","../../../policies/policy","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","./steps/prepare-variables-step","15","_batchStep","_BatchStep","treeRoot","clear","variableName","valid","BatchStep","16","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","17","_computationsUtils","sequence","cartesianProductOf","../../../../computations-utils","18","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","variableIndex","policyByKey","itemsWrapper","cells","indexOf","19","getObjectByIdMap","20","round","21","TornadoDiagramJobParameters","22","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","23","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","24","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","captureStackTrace","stack","25","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","26","JobDataInvalidException","_ExtendableError","27","JobExecutionAlreadyRunningException","28","JobInstanceAlreadyCompleteException","29","30","JobParametersInvalidException","31","JobRestartException","32","ExecutionContext","context","dirty","clone","prevValue","dto","33","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","34","JOB_EXECUTION_FLAG","STOP","35","JobExecutionListener","36","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","37","JobInstance","38","JobKeyGenerator","identifying","39","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","40","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","41","initDefinitions","initDefaultValues","def","path","_value","42","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","jobInstanceDao","dbPromise","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","_","jobResultId","getByIndex","generateJobInstanceKey","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","revive","findStepExecutions","reviveJobExecution","jobExecutionDtoList","fetched","fetchJobExecutionsRelations","_this9","getAllByIndex","dtos","reviveStepExecution","_this10","fetchRelationsAndRevive","sorted","sort","b","getTime","_this11","findJobExecutions","executions","jobExecutions","filter","latest","dataModel","loadFromDTO","setData","_this12","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this13","indexName","_this14","_this15","_this16","tx","_this17","_this18","_this19","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","43","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","44","SimpleJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","find","ex","45","TimeoutJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","46","JobResult","47","STARTED","STOPPED","FAILED","EXECUTING","48","_jobResult","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","getJobResultByInstance","./exceptions/job-interrupted-exception","./job-result","49","handleNextStep","lastExecutedStepExecution","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","remove","addStepExecution","_currentStepExecution","stepStatus","completedSteps","50","StepExecutionListener","51","52","beforeStep","determineJobStatus","afterStep","close","53","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","54","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","errors","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","55","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","56","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","splice","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","57","_rules","model","currentRuleName","ExpectedValueMaximizationRule","maxiMin","MaxiMinRule","maxiMax","MaxiMaxRule","ExpectedValueMinimizationRule","miniMin","MiniMinRule","miniMax","MiniMaxRule","decisionPolicy","trace","time","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","computedBasePayoff","./rules","58","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","basePayoff","multiply","ObjectiveRule","./objective-rule","59","60","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","61","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","62","minBy","63","64","65","_toConsumableArray","arr2","decisionNode","childrenPayoffs","indexesOf","makeDecision","aggregatedPayoff","childrenPayoff","selectedIndexes","_makeDecision","bestChild","worstChild","childPayoff","baseProbability","modifyChanceProbability","sumweight","div","fieldName","edge","../../policies/decision","../../policies/policy","66","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","Set","child","has","trim","ge","size","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","67","68","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","69","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","70","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","71","ignoreId","prependId","72","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","73","ProbabilityValueValidator","74","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":54,\"./jobs/jobs-manager\":56,\"./objective/objective-rules-manager\":57,\"./operations/operations-manager\":68,\"./policies/policy\":71,\"./validation/tree-validator\":74,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    if (e.isFieldValid('payoff', true, false)) {\n                        try {\n                            e.computedValue(null, 'payoff', _this2.expressionEngine.evalPayoff(e));\n                        } catch (err) {\n                            //   Left empty intentionally\n                        }\n                    }\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":53}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":40,\"../../engine/job-parameters\":41,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../sensitivity-analysis/sensitivity-analysis-job\":14,\"../sensitivity-analysis/steps/init-policies-step\":16,\"./probabilistic-sensitivity-analysis-job-parameters\":7,\"./steps/compute-policy-stats-step\":9,\"./steps/prob-calculate-step\":10}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":47,\"../../../engine/step\":52,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _calculateStep = require(\"../../sensitivity-analysis/steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                variables.forEach(function (v) {\n                    var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                });\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../policies/policy\":71,\"../../../../validation/tree-validator\":74,\"../../../engine/batch/batch-step\":23,\"../../sensitivity-analysis/steps/calculate-step\":15,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":40,\"../../engine/job-parameters\":41,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":74,\"../../engine/batch/batch-step\":23,\"../../engine/job\":48,\"../../engine/job-status\":47,\"../../engine/simple-job\":49,\"../../engine/step\":52,\"./recompute-job-parameters\":11}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":40,\"../../engine/job-parameters\":41,\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n            });\n\n            return result;\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":71,\"../../engine/simple-job\":49,\"./sensitivity-analysis-job-parameters\":13,\"./steps/calculate-step\":15,\"./steps/init-policies-step\":16,\"./steps/prepare-variables-step\":17}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":71,\"../../../../validation/tree-validator\":74,\"../../../engine/batch/batch-step\":23,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = [];\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":70,\"../../../engine/job-status\":47,\"../../../engine/step\":52}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../computations-utils\":4,\"../../../engine/job-status\":47,\"../../../engine/step\":52,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":70,\"../../../../policies/policy\":71,\"../../../../validation/tree-validator\":74,\"../../../engine/batch/batch-step\":23,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":70,\"../../../engine/job-status\":47,\"../../../engine/step\":52,\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":47,\"../../../engine/step\":52,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":40,\"../../engine/job-parameters\":41,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":49,\"./steps/calculate-step\":18,\"./steps/init-policies-step\":19,\"./steps/prepare-variables-step\":20,\"./tornado-diagram-job-parameters\":21}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":29,\"../job-status\":47,\"../step\":52,\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = exports.ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n        _this.name = _this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":24,\"./job-data-invalid-exception\":26,\"./job-execution-already-running-exception\":27,\"./job-instance-already-complete-exception\":28,\"./job-interrupted-exception\":29,\"./job-parameters-invalid-exception\":30,\"./job-restart-exception\":31}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],32:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":25,\"./execution-context\":32,\"./job\":48,\"./job-execution\":36,\"./job-execution-flag\":34,\"./job-execution-listener\":35,\"./job-instance\":37,\"./job-key-generator\":38,\"./job-launcher\":39,\"./job-parameter-definition\":40,\"./job-parameters\":41,\"./job-status\":47,\"./simple-job\":49,\"./step\":52,\"./step-execution\":51,\"./step-execution-listener\":50}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":32,\"./job-status\":47,\"./step-execution\":51,\"sd-utils\":\"sd-utils\"}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":26,\"./exceptions/job-parameters-invalid-exception\":30,\"./exceptions/job-restart-exception\":31,\"./job-status\":47,\"sd-utils\":\"sd-utils\"}],40:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":40,\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n\n        _this.jobInstanceDao = new ObjectStoreDao('job-instances', _this.dbPromise);\n        _this.jobExecutionDao = new ObjectStoreDao('job-executions', _this.dbPromise);\n        _this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', _this.dbPromise);\n        _this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', _this.dbPromise);\n\n        _this.stepExecutionDao = new ObjectStoreDao('step-executions', _this.dbPromise);\n        _this.jobResultDao = new ObjectStoreDao('job-results', _this.dbPromise);\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 1, function (upgradeDB) {\n                upgradeDB.createObjectStore('job-instances');\n                var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                upgradeDB.createObjectStore('job-execution-progress');\n                upgradeDB.createObjectStore('job-execution-flags');\n                var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                var jobResultOS = upgradeDB.createObjectStore('job-results');\n                jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n            });\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this3.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this4 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this4.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this5 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this5.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this6 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this6.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this7 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this7.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this8 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this8.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this9.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this10 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this10.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this11 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this11.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this12 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this12.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this13 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this13.name).objectStore(_this13.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this14 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this14.name).objectStore(_this14.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this16.name, 'readwrite');\n                tx.objectStore(_this16.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this17.name, 'readwrite');\n                tx.objectStore(_this17.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name);\n                var keys = [];\n                var store = tx.objectStore(_this19.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":32,\"../job-execution\":36,\"../job-instance\":37,\"../step-execution\":51,\"./job-repository\":43,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {//TODO\n            // if(o instanceof JobExecution){\n            //     return this.removeJobExecution(o);\n            // }\n            //\n            // if(o instanceof StepExecution){\n            //     return this.removeStepExecution(o);\n            // }\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":27,\"../exceptions/job-instance-already-complete-exception\":28,\"../execution-context\":32,\"../job-execution\":36,\"../job-instance\":37,\"../job-key-generator\":38,\"../job-status\":47,\"../step-execution\":51,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"getJobInstance\",\n\n        /*returns promise*/\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":43,\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_JobRepository) {\n    _inherits(TimeoutJobRepository, _JobRepository);\n\n    function TimeoutJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TimeoutJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":43,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":32,\"./job-status\":47,\"./step-execution\":51,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],48:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":26,\"./exceptions/job-interrupted-exception\":29,\"./exceptions/job-parameters-invalid-exception\":30,\"./job-execution-flag\":34,\"./job-result\":46,\"./job-status\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":29,\"./exceptions/job-restart-exception\":31,\"./execution-context\":32,\"./job\":48,\"./job-execution-flag\":34,\"./job-status\":47,\"./step\":52,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],51:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":32,\"./job-execution\":36,\"./job-status\":47,\"sd-utils\":\"sd-utils\"}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":29,\"./job-status\":47,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":33,\"./job-worker\":55,\"./jobs-manager\":56}],54:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":35,\"./engine/job-instance\":37,\"./engine/job-status\":47,\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],56:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution && jobExecution.isRunning()) {\n                    return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                        return jobExecution;\n                    });\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.remove(jobExecution.jobInstance);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":8,\"./configurations/recompute/recompute-job\":12,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":14,\"./configurations/tornado-diagram/tornado-diagram-job\":22,\"./engine/job-execution-flag\":34,\"./engine/job-execution-listener\":35,\"./engine/job-launcher\":39,\"./engine/job-parameters\":41,\"./engine/job-repository/idb-job-repository\":42,\"./engine/job-repository/simple-job-repository\":44,\"./engine/job-repository/timeout-job-repository\":45,\"./engine/job-status\":47,\"./job-worker\":55,\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n\n        this.expressionEngine = expressionEngine;\n        var max = new _rules.ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new _rules.MaxiMinRule(expressionEngine);\n        var maxiMax = new _rules.MaxiMaxRule(expressionEngine);\n        var min = new _rules.ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new _rules.MiniMinRule(expressionEngine);\n        var miniMax = new _rules.MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name] = max;\n        this.ruleByName[maxiMin.name] = maxiMin;\n        this.ruleByName[maxiMax.name] = maxiMax;\n        this.ruleByName[min.name] = min;\n        this.ruleByName[miniMin.name] = miniMin;\n        this.ruleByName[miniMax.name] = miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedBasePayoff();\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":60,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":58,\"./expected-value-minimization-rule\":59,\"./maxi-max-rule\":61,\"./maxi-min-rule\":62,\"./mini-max-rule\":63,\"./mini-min-rule\":64,\"./objective-rule\":65}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],65:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _decision = require('../../policies/decision');\n\nvar _policy = require('../../policies/policy');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        _classCallCheck(this, ObjectiveRule);\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: 'setDecisionPolicy',\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: 'clearDecisionPolicy',\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            if (this.maximization) {\n                return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n            }\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: '_makeDecision',\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: 'computePayoff',\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.cValue(e.childNode, 'payoff')).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: 'cValue',\n        value: function cValue(object, fieldName, value) {\n            return object.computedValue(this.name, fieldName, value);\n        }\n    }, {\n        key: 'baseProbability',\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: 'basePayoff',\n        value: function basePayoff(edge) {\n            return edge.computedBasePayoff();\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: 'add',\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: 'subtract',\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: 'divide',\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: 'max',\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: 'min',\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/decision\":69,\"../../policies/policy\":71,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":74,\"./operation\":67,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],68:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":66}],69:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],70:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":69,\"./policy\":71,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":69}],72:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],73:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],74:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _probabilityValueValidator = require('./probability-value-validator');\n\nvar _payoffValueValidator = require('./payoff-value-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: 'validate',\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: 'validateNode',\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n                e.setValueValidity('payoff', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n                var payoff = e.computedBasePayoff();\n                if (!_this2.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                    // console.log('invalidPayoff', e);\n                    e.setValueValidity('payoff', false);\n                }\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":72,\"./probability-value-validator\":73,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                if(e.isFieldValid('payoff', true, false)){\n                    try{\n                        e.computedValue(null, 'payoff', this.expressionEngine.evalPayoff(e))\n                    }catch (err){\n                        //   Left empty intentionally\n                    }\n                }\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../sensitivity-analysis/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {CalculateStep} from \"../../sensitivity-analysis/steps/calculate-step\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            variables.forEach(v=> {\n                var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n            });\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult)\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../policies/policy\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n        });\n\n        return result;\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data=[]\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName ='sd-job-repository', deleteDB=false) {\n        super();\n        this.dbName=dbName;\n        this.expressionsReviver = expressionsReviver;\n        if(deleteDB){\n            this.deleteDB().then(()=>{\n                this.initDB()\n            })\n        }else{\n            this.initDB()\n        }\n\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    initDB(){\n        this.dbPromise = idb.open(this.dbName, 1, upgradeDB => {\n            upgradeDB.createObjectStore('job-instances');\n            var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n            jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n            jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n            jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n            upgradeDB.createObjectStore('job-execution-progress');\n            upgradeDB.createObjectStore('job-execution-flags');\n            var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n            stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n            var jobResultOS = upgradeDB.createObjectStore('job-results');\n            jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n        });\n    }\n\n    deleteDB(){\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    getJobResult(jobResultId){\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto): dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions=null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions=[]) {\n        if(stepExecutions.length<=savedExecutions.length){\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=>{\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id){\n        return this.jobExecutionDao.get(id).then(dto=>{\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive=true){\n        if(!jobExecutionDTO){\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=>{\n            jobExecutionDTO.stepExecutions = steps;\n            if(!revive){\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive=true, fetched=[]){\n        if(jobExecutionDtoList.length<=fetched.length){\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=>{\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive=true){\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=>{\n            if(!revive){\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive=true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted =  values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if(!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length -1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if(data){\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n\n    remove(o){ //TODO\n        // if(o instanceof JobExecution){\n        //     return this.removeJobExecution(o);\n        // }\n        //\n        // if(o instanceof StepExecution){\n        //     return this.removeStepExecution(o);\n        // }\n    }\n\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\n\n\nexport class TimeoutJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults=[];\n    \n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution && jobExecution.isRunning()) {\n                return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.remove(jobExecution.jobInstance);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {ExpectedValueMaximizationRule, ExpectedValueMinimizationRule, MaxiMinRule, MaxiMaxRule, MiniMinRule, MiniMaxRule} from \"./rules\";\nimport {log} from \"sd-utils\"\nimport * as model from \"sd-model\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName={};\n\n    constructor(expressionEngine, currentRuleName){\n        this.expressionEngine=expressionEngine;\n        var max = new ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new MaxiMinRule(expressionEngine);\n        var maxiMax = new MaxiMaxRule(expressionEngine);\n        var min = new ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new MiniMinRule(expressionEngine);\n        var miniMax = new MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name]=max;\n        this.ruleByName[maxiMin.name]=maxiMin;\n        this.ruleByName[maxiMax.name]=maxiMax;\n        this.ruleByName[min.name]=min;\n        this.ruleByName[miniMin.name]=miniMin;\n        this.ruleByName[miniMax.name]=miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if(currentRuleName){\n            this.currentRule = this.ruleByName[currentRuleName];\n        }else{\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedBasePayoff();\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {domain as model} from 'sd-model'\nimport {Decision} from \"../../policies/decision\";\nimport {Policy} from \"../../policies/policy\";\nimport {Utils} from \"sd-utils\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule{\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    constructor(name, maximization, expressionEngine){\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n    }\n\n    setDecisionPolicy(decisionPolicy){\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    clearDecisionPolicy(){\n        this.decisionPolicy=null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs){\n        if(this.maximization){\n            return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n        }\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs){\n        if(this.decisionPolicy){\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if(decision){\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=0, aggregatedPayoff=0){\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            }else{\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=>{\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if(childPayoff < worstChild){\n                        worstChild = childPayoff;\n                        worstCount=1;\n                    }else if(childPayoff.equals(worstChild)){\n                        worstCount++\n                    }\n                    if(childPayoff > bestChild){\n                        bestChild = childPayoff;\n                        bestCount=1;\n                    }else if(childPayoff.equals(bestChild)){\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if(sumweight>0){\n                node.childEdges.forEach(e=>{\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'),this.cValue(e.childNode, 'payoff')).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff=this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node){\n        throw 'computeOptimal function not implemented for rule: '+this.name\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldName, value){\n        return  object.computedValue(this.name, fieldName, value);\n    }\n\n    baseProbability(edge){\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge){\n        return edge.computedBasePayoff();\n    }\n\n    clearComputedValues(object){\n        object.clearComputedValues(this.name);\n    }\n\n    add(a,b){\n        return ExpressionEngine.add(a,b)\n    }\n    subtract(a,b){\n        return ExpressionEngine.subtract(a,b)\n    }\n    divide(a,b){\n        return ExpressionEngine.divide(a,b)\n    }\n\n    multiply(a,b){\n        return ExpressionEngine.multiply(a,b)\n    }\n\n    max(){\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min(){\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {Utils} from 'sd-utils'\nimport {domain as model, ValidationResult} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n            e.setValueValidity('payoff', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if(!ExpressionEngine.isHash(e.probability)){\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n            var payoff = e.computedBasePayoff();\n            if (!this.payoffValueValidator.validate(payoff)) {\n                validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                // console.log('invalidPayoff', e);\n                e.setValueValidity('payoff', false);\n            }\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/spider-plot/spider-plot-job-parameters.js","src/jobs/configurations/sensitivity-analysis/spider-plot/spider-plot-job.js","src/jobs/configurations/sensitivity-analysis/spider-plot/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-max-rule.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/min-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/mcdm-weight-value-validator.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","_mcdmWeightValueValidator","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","mcdmWeightValueValidator","McdmWeightValueValidator","currentRule","reversePayoffs","tmp","weightLowerBound","flip","weightUpperBound","defaultCriterion1Weight","flipRule","checkValidityAndRecomputeObjective","Infinity","serialize","divide","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultCriterion1Weight","validationResults","evalExpressions","weightValid","validate","multiCriteria","getRoots","root","vr","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","ChanceNode","TerminalNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/mcdm-weight-value-validator","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","NUMBER_EXPRESSION","v","allVals","computeNumberExpression","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","defaultWeight","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","incratio","optimal","optimalForDefaultWeight","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","payoffCoeffs","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","bestCost","bestCostRow","cmp","prev2NotDominated","filter","computeICER","lastLELower","lastLELowerDef","exitStatus","JOB_STATUS","COMPLETED","Math","abs","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","SpiderPlotJobParameters","22","SpiderPlotJob","_spiderPlotJobParameters","percentageRangeValues","./spider-plot-job-parameters","23","percentageChangeRange","defaultValues","forOwn","k","defVal","multiply","defaultPayoff","itemIndex","variableValue","_jobResult$data$rows","24","jobExecutionContext","variableExtents","extents","extentVariableValues","25","26","TornadoDiagramJobParameters","27","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","28","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","29","ExtendableError","30","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","31","_ExtendableError","32","JobDataInvalidException","33","JobExecutionAlreadyRunningException","34","JobInstanceAlreadyCompleteException","35","36","JobParametersInvalidException","37","JobRestartException","38","ExecutionContext","context","dirty","clone","prevValue","dto","39","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","40","JOB_EXECUTION_FLAG","STOP","41","JobExecutionListener","42","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","indexOf","43","JobInstance","44","JobKeyGenerator","identifying","45","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","46","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isBoolean","isObject","nestedDef","_value","parsed","parseFloat","47","initDefinitions","initDefaultValues","def","defs","split","find","getDefinition","48","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","49","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","50","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","ex","51","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","52","53","STARTED","STOPPED","FAILED","EXECUTING","54","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","55","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","56","StepExecutionListener","57","58","beforeStep","determineJobStatus","afterStep","close","59","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","60","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","61","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","62","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","_spiderPlotJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/spider-plot/spider-plot-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","63","_rules","model","_minMaxRule","_maxMinRule","_minMinRule","_maxMaxRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","minMin","MinMinRule","maxMax","MaxMaxRule","flipped","setDefaultCriterion1Weight","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-max-rule","./rules/max-min-rule","./rules/min-max-rule","./rules/min-min-rule","64","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","computedPayoff","basePayoff","ObjectiveRule","./objective-rule","65","66","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","67","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","./multi-criteria-rule","68","69","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","70","minBy","71","72","73","74","75","criterion1Weight","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","computeCombinedPayoff","combinedPayoff","../../policies/policy","76","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","77","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","78","79","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","80","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","81","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","82","ignoreId","prependId","83","additionalValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","84","PayoffValueValidator","85","ProbabilityValueValidator","86","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nvar _mcdmWeightValueValidator = require(\"./validation/mcdm-weight-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new _mcdmWeightValueValidator.McdmWeightValueValidator();\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            var tmp = data.weightLowerBound;\n            data.weightLowerBound = this.flip(data.weightUpperBound);\n            data.weightUpperBound = this.flip(tmp);\n            data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"flip\",\n        value: function flip(a) {\n            if (a == Infinity) {\n                return 0;\n            }\n\n            if (a == 0) {\n                return Infinity;\n            }\n\n            return this.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(1, a));\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n            var multiCriteria = this.getCurrentRule().multiCriteria;\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid() && (!multiCriteria || weightValid)) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            } else if (node instanceof _sdModel.domain.ChanceNode) {\n                node.displayValue('optimal', true);\n                node.childEdges.forEach(function (e) {\n                    e.displayValue('optimal', true);\n                    _this8.displayPolicyForNode(e.childNode, policy);\n                });\n            } else if (node instanceof _sdModel.domain.TerminalNode) {\n                node.displayValue('optimal', true);\n            }\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":60,\"./jobs/jobs-manager\":62,\"./objective/objective-rules-manager\":63,\"./operations/operations-manager\":79,\"./policies/policy\":82,\"./validation/mcdm-weight-value-validator\":83,\"./validation/tree-validator\":86,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":59}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightLowerBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v <= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound']);\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"defaultWeight\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v >= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']) && v <= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound']);\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightUpperBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v >= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']);\n            }));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                weightLowerBound: 0,\n                defaultWeight: 0,\n                weightUpperBound: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":46,\"../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio', 'optimal', 'optimal_for_default_weight'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.incratio, row.optimal, row.optimalForDefaultWeight];\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":82,\"../../engine/simple-job\":55,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return -payoffCoeffs[0] * (b.payoffs[0] - a.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    incratio: null,\n                    optimal: false,\n                    optimalForDefaultWeight: false\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            // rows.sort(compare);\n            rows.sort(function (a, b) {\n                return -payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n\n            var bestCost = -payoffCoeffs[1] * Infinity,\n                bestCostRow = null;\n\n            var cmp = function cmp(a, b) {\n                return a > b;\n            };\n            if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            }\n\n            rows.forEach(function (r, i) {\n                if (cmp(r.payoffs[1], bestCost)) {\n                    bestCost = r.payoffs[1];\n                    bestCostRow = r;\n                } else if (bestCostRow) {\n                    r.dominatedBy = bestCostRow.id;\n                }\n            });\n\n            cmp = function cmp(a, b) {\n                return a < b;\n            };\n            if (payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a > b;\n                };\n            }\n\n            var prev2NotDominated = null;\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]);\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.incratio = 0;\n                    return;\n                }\n\n                var prev = arr[i - 1];\n\n                r.incratio = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                if (!prev2NotDominated) {\n                    prev2NotDominated = arr[i - 2];\n                }\n\n                if (cmp(r.incratio, prev.incratio)) {\n                    prev.incratio = null;\n                    prev.extendedDominatedBy = [prev2NotDominated.id, r.id];\n                    r.incratio = _this2.computeICER(r, prev2NotDominated);\n                } else {\n                    prev2NotDominated = prev;\n                }\n            });\n\n            var weightLowerBound = params.value(\"weightLowerBound\");\n            var defaultWeight = params.value(\"defaultWeight\");\n            var weightUpperBound = params.value(\"weightUpperBound\");\n\n            //mark optimal for weight in [weightLowerBound, weightUpperBound] and optimal for default Weight\n            var lastLELower = null;\n            var lastLELowerDef = null;\n            rows.slice().filter(function (r) {\n                return !r.dominatedBy && !r.extendedDominatedBy;\n            }).sort(function (a, b) {\n                return a.incratio - b.incratio;\n            }).forEach(function (row, i, arr) {\n\n                if (row.incratio < weightLowerBound) {\n                    lastLELower = row;\n                }\n                if (row.incratio < defaultWeight) {\n                    lastLELowerDef = row;\n                }\n\n                row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n                row.optimalForDefaultWeight = row.incratio == defaultWeight;\n            });\n            if (lastLELower) {\n                lastLELower.optimal = true;\n            }\n\n            if (lastLELowerDef) {\n                lastLELowerDef.optimalForDefaultWeight = true;\n            }\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.incratio = row.incratio === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.incratio);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                payoffCoeffs: payoffCoeffs,\n                rows: rows.sort(function (a, b) {\n                    return a.id - b.id;\n                }),\n                weightLowerBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightLowerBound),\n                defaultWeight: _sdExpressionEngine.ExpressionEngine.toFloat(defaultWeight),\n                weightUpperBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightUpperBound)\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return Math.abs(_sdExpressionEngine.ExpressionEngine.divide(n, d));\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":81,\"../../../../policies/policy\":82,\"../../../../validation/tree-validator\":86,\"../../../engine/job-status\":53,\"../../../engine/step\":58,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":46,\"../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":86,\"../../engine/batch/batch-step\":28,\"../../engine/job\":54,\"../../engine/job-status\":53,\"../../engine/simple-job\":55,\"../../engine/step\":58,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":46,\"../../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":82,\"../../../engine/simple-job\":55,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":82,\"../../../../../validation/tree-validator\":86,\"../../../../engine/batch/batch-step\":28,\"../../../../engine/exceptions/job-computation-exception\":31,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":81,\"../../../../engine/job-status\":53,\"../../../../engine/step\":58}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":53,\"../../../../engine/step\":58,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":46,\"../../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":53,\"../../../../engine/step\":58,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":31,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SpiderPlotJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SpiderPlotJobParameters = exports.SpiderPlotJobParameters = function (_JobParameters) {\n    _inherits(SpiderPlotJobParameters, _JobParameters);\n\n    function SpiderPlotJobParameters() {\n        _classCallCheck(this, SpiderPlotJobParameters);\n\n        return _possibleConstructorReturn(this, (SpiderPlotJobParameters.__proto__ || Object.getPrototypeOf(SpiderPlotJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SpiderPlotJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"percentageChangeRange\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", function (v) {\n                return v > 0 && v <= 100;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SpiderPlotJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":46,\"../../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SpiderPlotJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _spiderPlotJobParameters = require(\"./spider-plot-job-parameters\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SpiderPlotJob = exports.SpiderPlotJob = function (_SimpleJob) {\n    _inherits(SpiderPlotJob, _SimpleJob);\n\n    function SpiderPlotJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SpiderPlotJob);\n\n        var _this = _possibleConstructorReturn(this, (SpiderPlotJob.__proto__ || Object.getPrototypeOf(SpiderPlotJob)).call(this, \"spider-plot\", jobRepository));\n\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(SpiderPlotJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _spiderPlotJobParameters.SpiderPlotJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            if (execution.stepExecutions.length < 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[0].getProgress(execution.stepExecutions[0]);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                result.push(['variable_name', 'policy_no'].concat(jobResult.percentageRangeValues));\n            }\n\n            jobResult.rows.forEach(function (row, index) {\n\n                result.push.apply(result, _toConsumableArray(row.payoffs.map(function (payoffs, policyIndex) {\n                    return [row.variableName, policyIndex + 1].concat(_toConsumableArray(payoffs));\n                })));\n            });\n\n            return result;\n        }\n    }]);\n\n    return SpiderPlotJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":55,\"./spider-plot-job-parameters\":21,\"./steps/calculate-step\":23}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var percentageChangeRange = params.value(\"percentageChangeRange\");\n            var length = params.value(\"length\");\n            var variables = params.value(\"variables\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n\n            var treeRoot = data.getRoots()[0];\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalExpressions(data);\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            var percentageRangeValues = _computationsUtils.ComputationsUtils.sequence(-percentageChangeRange, percentageChangeRange, 2 * length + 1);\n\n            var variableValues = [];\n\n            variables.forEach(function (v) {\n                var defVal = defaultValues[v.name];\n                variableValues.push(percentageRangeValues.map(function (p) {\n                    return _this2.toFloat(_sdExpressionEngine.ExpressionEngine.add(defVal, _sdExpressionEngine.ExpressionEngine.multiply(_sdExpressionEngine.ExpressionEngine.divide(p, 100), defVal)));\n                }));\n            });\n\n            if (!jobResult.data) {\n                jobResult.data = {\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    percentageRangeValues: percentageRangeValues,\n                    defaultPayoff: this.toFloat(payoff)[0],\n                    policies: policiesCollector.policies,\n                    rows: []\n                };\n            }\n\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var payoffs = jobResult.data.policies.map(function (policy) {\n                return [];\n            });\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            item.forEach(function (variableValue) {\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid && failOnInvalidTree) {\n                    var errorData = {\n                        variables: {}\n                    };\n                    errorData.variables[variableName] = variableValue;\n\n                    throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n                }\n\n                jobResult.data.policies.forEach(function (policy, policyIndex) {\n                    _this3.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    var payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                    payoffs[policyIndex].push(_this3.toFloat(payoff));\n                });\n            });\n\n            return {\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValues: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _jobResult$data$rows;\n\n            (_jobResult$data$rows = jobResult.data.rows).push.apply(_jobResult$data$rows, _toConsumableArray(items));\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../computations-utils\":4,\"../../../../../policies/policies-collector\":81,\"../../../../../policies/policy\":82,\"../../../../../validation/tree-validator\":86,\"../../../../engine/batch/batch-step\":28,\"../../../../engine/exceptions/job-computation-exception\":31,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n\n            var treeRoot = data.getRoots()[0];\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalExpressions(data);\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                jobResult.data = {\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    variableExtents: variableValues.map(function (v) {\n                        return [v[0], v[v.length - 1]];\n                    }),\n                    defaultPayoff: this.toFloat(payoff)[0],\n                    policies: policiesCollector.policies,\n                    rows: []\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var extents = jobResult.data.policies.map(function (policy) {\n                return {\n                    min: Infinity,\n                    max: -Infinity\n                };\n            });\n\n            var values = jobResult.data.policies.map(function (policy) {\n                return {\n                    min: null,\n                    max: null\n                };\n            });\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            item.forEach(function (variableValue) {\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid && failOnInvalidTree) {\n                    var errorData = {\n                        variables: {}\n                    };\n                    errorData.variables[variableName] = variableValue;\n\n                    throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n                }\n\n                jobResult.data.policies.forEach(function (policy, policyIndex) {\n                    _this3.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    var payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n\n                    if (payoff < extents[policyIndex].min) {\n                        extents[policyIndex].min = payoff;\n                        values[policyIndex].min = variableValue;\n                    }\n\n                    if (payoff > extents[policyIndex].max) {\n                        extents[policyIndex].max = payoff;\n                        values[policyIndex].max = variableValue;\n                    }\n                });\n            });\n\n            return {\n                variableName: variableName,\n                variableIndex: itemIndex,\n                extents: extents.map(function (e) {\n                    return [_this3.toFloat(e.min), _this3.toFloat(e.max)];\n                }),\n                extentVariableValues: values.map(function (v) {\n                    return [_this3.toFloat(v.min), _this3.toFloat(v.max)];\n                })\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _jobResult$data$rows;\n\n            (_jobResult$data$rows = jobResult.data.rows).push.apply(_jobResult$data$rows, _toConsumableArray(items));\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            jobResult.data.rows.sort(function (a, b) {\n                return b.extents[0][1] - b.extents[0][0] - (a.extents[0][1] - a.extents[0][0]);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":81,\"../../../../../policies/policy\":82,\"../../../../../validation/tree-validator\":86,\"../../../../engine/batch/batch-step\":28,\"../../../../engine/exceptions/job-computation-exception\":31,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":53,\"../../../../engine/step\":58,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":46,\"../../../engine/job-parameters\":47,\"sd-utils\":\"sd-utils\"}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                result.push(['variable_name', 'default_var_value', \"min_var_value\", \"max_var_value\", 'default_payoff', \"min_payoff\", \"max_payoff\", \"policy_no\"]);\n            }\n\n            jobResult.rows.forEach(function (row, index) {\n\n                result.push.apply(result, _toConsumableArray(row.extents.map(function (extent, policyIndex) {\n                    return [row.variableName, jobResult.defaultValues[row.variableName], row.extentVariableValues[policyIndex][0], row.extentVariableValues[policyIndex][1], jobResult.defaultPayoff, extent[0], extent[1], policyIndex + 1];\n                })));\n            });\n\n            return result;\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":55,\"./steps/calculate-step\":24,\"./steps/prepare-variables-step\":25,\"./tornado-diagram-job-parameters\":26}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":35,\"../job-status\":53,\"../step\":58,\"sd-utils\":\"sd-utils\"}],29:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":29,\"./job-data-invalid-exception\":32,\"./job-execution-already-running-exception\":33,\"./job-instance-already-complete-exception\":34,\"./job-interrupted-exception\":35,\"./job-parameters-invalid-exception\":36,\"./job-restart-exception\":37}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],35:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],36:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],37:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":29}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":30,\"./execution-context\":38,\"./job\":54,\"./job-execution\":42,\"./job-execution-flag\":40,\"./job-execution-listener\":41,\"./job-instance\":43,\"./job-key-generator\":44,\"./job-launcher\":45,\"./job-parameter-definition\":46,\"./job-parameters\":47,\"./job-status\":53,\"./simple-job\":55,\"./step\":58,\"./step-execution\":57,\"./step-execution-listener\":56}],40:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":38,\"./job-status\":53,\"./step-execution\":57,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":32,\"./exceptions/job-parameters-invalid-exception\":36,\"./exceptions/job-restart-exception\":37,\"./job-status\":53,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: \"set\",\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"validateSingleValue\",\n\n        // allValues - all values on the same level\n        value: function validateSingleValue(value, allValues) {\n\n            if (!value && value !== 0 && value !== false && this.minOccurs > 0) {\n                return !this.required;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.BOOLEAN === this.type && !_sdUtils.Utils.isBoolean(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                value = JobParameterDefinition.computeNumberExpression(value);\n                if (value === null) {\n                    return false;\n                }\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"value\",\n        value: function value(_value) {\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                return JobParameterDefinition.computeNumberExpression(_value);\n            }\n\n            return _value;\n        }\n    }], [{\n        key: \"computeNumberExpression\",\n        value: function computeNumberExpression(val) {\n            var parsed = parseFloat(val);\n            if (parsed === Infinity || parsed === -Infinity) {\n                return parsed;\n            }\n\n            if (!_sdExpressionEngine.ExpressionEngine.validate(val, {}, false)) {\n                return null;\n            }\n\n            return _sdExpressionEngine.ExpressionEngine.eval(val, true);\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\nexports.JobParameterDefinition = JobParameterDefinition;\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n    }, {\n        key: \"getDefinition\",\n        value: function getDefinition(path) {\n            var defs = this.definitions;\n            var def = null;\n            if (!path.split().every(function (name) {\n                def = _sdUtils.Utils.find(defs, function (d) {\n                    return d.name == name;\n                });\n                if (!def) {\n                    return false;\n                }\n                defs = def.nestedParameters;\n                return true;\n            })) {\n                return null;\n            }\n            return def;\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                var def = this.getDefinition(path);\n                var val = _sdUtils.Utils.get(this.values, path, null);\n                if (def) {\n                    return def.value(val);\n                }\n                return val;\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":46,\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":38,\"../job-execution\":42,\"../job-instance\":43,\"../step-execution\":57,\"./job-repository\":49,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":33,\"../exceptions/job-instance-already-complete-exception\":34,\"../execution-context\":38,\"../job-execution\":42,\"../job-instance\":43,\"../job-key-generator\":44,\"../job-result\":52,\"../job-status\":53,\"../step-execution\":57,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":49,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":49,\"./simple-job-repository\":50,\"sd-utils\":\"sd-utils\"}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":38,\"./job-status\":53,\"./step-execution\":57,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":32,\"./exceptions/job-interrupted-exception\":35,\"./exceptions/job-parameters-invalid-exception\":36,\"./job-execution-flag\":40,\"./job-result\":52,\"./job-status\":53,\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":35,\"./exceptions/job-restart-exception\":37,\"./execution-context\":38,\"./job\":54,\"./job-execution-flag\":40,\"./job-status\":53,\"./step\":58,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],57:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":38,\"./job-execution\":42,\"./job-status\":53,\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":35,\"./job-status\":53,\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":39,\"./job-worker\":61,\"./jobs-manager\":62}],60:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                return false;\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":41,\"./engine/job-instance\":43,\"./engine/job-status\":53,\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],62:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nvar _spiderPlotJob = require(\"./configurations/sensitivity-analysis/spider-plot/spider-plot-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _spiderPlotJob.SpiderPlotJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/spider-plot/spider-plot-job\":22,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":27,\"./engine/job-execution-flag\":40,\"./engine/job-execution-listener\":41,\"./engine/job-launcher\":45,\"./engine/job-parameters\":47,\"./engine/job-repository/idb-job-repository\":48,\"./engine/job-repository/simple-job-repository\":50,\"./engine/job-repository/timeout-job-repository\":51,\"./engine/job-status\":53,\"./job-worker\":61,\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nvar _minMinRule = require(\"./rules/min-min-rule\");\n\nvar _maxMaxRule = require(\"./rules/max-max-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        var minMin = new _minMinRule.MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        var maxMax = new _maxMaxRule.MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex || 0;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultCriterion1Weight\",\n        value: function updateDefaultCriterion1Weight(defaultCriterion1Weight) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultCriterion1Weight(defaultCriterion1Weight);\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":66,\"./rules/max-max-rule\":67,\"./rules/max-min-rule\":68,\"./rules/min-max-rule\":71,\"./rules/min-min-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],65:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":64,\"./expected-value-minimization-rule\":65,\"./maxi-max-rule\":69,\"./maxi-min-rule\":70,\"./mini-max-rule\":73,\"./mini-min-rule\":74,\"./objective-rule\":76}],67:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMaxRule = exports.MaxMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMaxRule, _MultiCriteriaRule);\n\n    function MaxMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxMaxRule.__proto__ || Object.getPrototypeOf(MaxMaxRule)).call(this, MaxMaxRule.NAME, [1, 1], expressionEngine));\n    }\n\n    return MaxMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMaxRule.NAME = 'max-max';\n\n},{\"./multi-criteria-rule\":75}],68:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, [1, -1], expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"./multi-criteria-rule\":75}],69:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],70:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, [-1, 1], expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"./multi-criteria-rule\":75}],72:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMinRule = exports.MinMinRule = function (_MultiCriteriaRule) {\n    _inherits(MinMinRule, _MultiCriteriaRule);\n\n    function MinMinRule(expressionEngine) {\n        _classCallCheck(this, MinMinRule);\n\n        return _possibleConstructorReturn(this, (MinMinRule.__proto__ || Object.getPrototypeOf(MinMinRule)).call(this, MinMinRule.NAME, [-1, -1], expressionEngine));\n    }\n\n    return MinMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMinRule.NAME = 'min-min';\n\n},{\"./multi-criteria-rule\":75}],73:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],74:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":76,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],75:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, payoffCoeffs, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.criterion1Weight = 1;\n        _this.payoffCoeffs = [1, -1];\n\n        _this.payoffCoeffs = payoffCoeffs;\n\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultCriterion1Weight\",\n        value: function setDefaultCriterion1Weight(criterion1Weight) {\n            this.criterion1Weight = criterion1Weight;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n    }, {\n        key: \"computeCombinedPayoff\",\n        value: function computeCombinedPayoff(payoff) {\n            // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n            if (this.criterion1Weight === Infinity) {\n                return this.multiply(this.payoffCoeffs[0], payoff[0]);\n            }\n            return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.computeCombinedPayoff([_this3.basePayoff(e, 0), _this3.basePayoff(e, 1)]), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":82,\"./objective-rule\":76,\"sd-model\":\"sd-model\"}],76:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":82,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],77:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = [_sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)), _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1))];\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":86,\"./operation\":78,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],78:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],79:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":77}],80:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],81:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":80,\"./policy\":82,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],82:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":80}],83:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.McdmWeightValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar McdmWeightValueValidator = exports.McdmWeightValueValidator = function () {\n    function McdmWeightValueValidator(additionalValidator) {\n        _classCallCheck(this, McdmWeightValueValidator);\n\n        this.additionalValidator = null;\n\n        this.additionalValidator = additionalValidator;\n    }\n\n    _createClass(McdmWeightValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var parsed = parseFloat(value);\n            if (parsed !== Infinity && !_sdExpressionEngine.ExpressionEngine.validate(value, {}, false)) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n            if (_sdExpressionEngine.ExpressionEngine.compare(value, 0) < 0 || value !== Infinity && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) > 0) {\n                return false;\n            }\n\n            if (this.additionalValidator) {\n                return this.additionalValidator(_sdExpressionEngine.ExpressionEngine.toNumber(value));\n            }\n\n            return true;\n        }\n    }]);\n\n    return McdmWeightValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],84:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],85:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],86:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":84,\"./probability-value-validator\":85,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\nimport {McdmWeightValueValidator} from \"./validation/mcdm-weight-value-validator\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new McdmWeightValueValidator();\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        let tmp = data.weightLowerBound;\n        data.weightLowerBound = this.flip(data.weightUpperBound);\n        data.weightUpperBound = this.flip(tmp);\n        data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    flip(a){\n        if(a == Infinity){\n            return 0;\n        }\n\n        if(a == 0){\n            return Infinity;\n        }\n\n        return this.expressionEngine.serialize(ExpressionEngine.divide(1, a))\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n\n        this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n        var multiCriteria = this.getCurrentRule().multiCriteria;\n\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid() && (!multiCriteria || weightValid)) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        } else if(node instanceof model.ChanceNode){\n            node.displayValue('optimal', true);\n            node.childEdges.forEach(e=>{\n                e.displayValue('optimal', true);\n                this.displayPolicyForNode(e.childNode, policy)\n            })\n        }else if(node instanceof model.TerminalNode){\n            node.displayValue('optimal', true);\n        }\n\n\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"weightLowerBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v <= JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound'])\n        }));\n        this.definitions.push(new JobParameterDefinition(\"defaultWeight\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v >= JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']) && v <= JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound'])\n        }));\n        this.definitions.push(new JobParameterDefinition(\"weightUpperBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v >= JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound'])\n        }));\n\n    }\n\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            weightLowerBound: 0,\n            defaultWeight: 0,\n            weightUpperBound: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio', 'optimal', 'optimal_for_default_weight'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.incratio,\n                    row.optimal,\n                    row.optimalForDefaultWeight\n                ];\n                result.push(rowCells);\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(-payoffCoeffs[0] *  (b.payoffs[0] - a.payoffs[0])) || (-payoffCoeffs[1] *  (a.payoffs[1] - b.payoffs[1]));\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                incratio: null,\n                optimal: false,\n                optimalForDefaultWeight: false\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        // rows.sort(compare);\n        rows.sort((a, b)=>(-payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n\n        let bestCost = -payoffCoeffs[1] * Infinity,\n            bestCostRow = null;\n\n        let cmp= (a, b) => a > b;\n        if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a < b;\n        }\n\n        rows.forEach((r, i)=> {\n            if (cmp(r.payoffs[1], bestCost)) {\n                bestCost = r.payoffs[1];\n                bestCostRow = r;\n            } else if(bestCostRow) {\n                r.dominatedBy = bestCostRow.id;\n            }\n        });\n\n        cmp= (a, b) => a < b;\n        if(payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a > b;\n        }\n\n        let prev2NotDominated = null;\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(  payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]))).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.incratio = 0;\n                return;\n            }\n\n            let prev = arr[i - 1];\n\n            r.incratio = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            if(!prev2NotDominated){\n                prev2NotDominated = arr[i - 2];\n            }\n\n            if(cmp(r.incratio,prev.incratio)){\n                prev.incratio = null;\n                prev.extendedDominatedBy = [prev2NotDominated.id, r.id] ;\n                r.incratio = this.computeICER(r, prev2NotDominated);\n            }else{\n                prev2NotDominated = prev;\n            }\n        });\n\n        let weightLowerBound = params.value(\"weightLowerBound\");\n        let defaultWeight = params.value(\"defaultWeight\");\n        let weightUpperBound = params.value(\"weightUpperBound\");\n\n        //mark optimal for weight in [weightLowerBound, weightUpperBound] and optimal for default Weight\n        let lastLELower = null;\n        let lastLELowerDef = null;\n        rows.slice().filter(r=>!r.dominatedBy && !r.extendedDominatedBy).sort((a, b) => a.incratio - b.incratio).forEach((row, i, arr)=>{\n\n            if(row.incratio < weightLowerBound){\n                lastLELower  = row;\n            }\n            if(row.incratio < defaultWeight){\n                lastLELowerDef  = row;\n            }\n\n            row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n            row.optimalForDefaultWeight = row.incratio == defaultWeight;\n\n        });\n        if(lastLELower){\n            lastLELower.optimal = true;\n        }\n\n        if(lastLELowerDef){\n            lastLELowerDef.optimalForDefaultWeight = true;\n        }\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.incratio = row.incratio === null ? null : ExpressionEngine.toFloat(row.incratio);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            payoffCoeffs : payoffCoeffs,\n            rows: rows.sort((a, b)=>(a.id - b.id)),\n            weightLowerBound: ExpressionEngine.toFloat(weightLowerBound),\n            defaultWeight: ExpressionEngine.toFloat(defaultWeight),\n            weightUpperBound: ExpressionEngine.toFloat(weightUpperBound)\n        };\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n        let n = ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return Math.abs(ExpressionEngine.divide(n, d));\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SpiderPlotJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"percentageChangeRange\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", v => v > 0 && v <=100));\n        this.definitions.push(new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {SpiderPlotJobParameters} from \"./spider-plot-job-parameters\";\n\nexport class SpiderPlotJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"spider-plot\", jobRepository);\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new SpiderPlotJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n        if (execution.stepExecutions.length < 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[0].getProgress(execution.stepExecutions[0]);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n\n        let result = [];\n        if(withHeaders){\n            result.push(['variable_name', 'policy_no'].concat(jobResult.percentageRangeValues));\n        }\n\n        jobResult.rows.forEach((row, index) => {\n\n            result.push(...row.payoffs.map((payoffs, policyIndex)=>[\n                row.variableName,\n                policyIndex+1,\n                ...payoffs\n            ]));\n\n        });\n\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        let jobExecutionContext = stepExecution.getJobExecutionContext();\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n        let percentageChangeRange = params.value(\"percentageChangeRange\");\n        let length = params.value(\"length\");\n        let variables = params.value(\"variables\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        let data = stepExecution.getData();\n\n        let treeRoot = data.getRoots()[0];\n        let payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalExpressions(data);\n\n        this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n        let policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n\n        let defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n\n        let percentageRangeValues = ComputationsUtils.sequence(-percentageChangeRange, percentageChangeRange, 2*length+1);\n\n        let variableValues = [];\n\n        variables.forEach(v=> {\n            let defVal = defaultValues[v.name];\n            variableValues.push(percentageRangeValues.map(p=> this.toFloat(ExpressionEngine.add(defVal, ExpressionEngine.multiply(ExpressionEngine.divide(p,100), defVal)))));\n        });\n\n\n        if(!jobResult.data){\n            jobResult.data = {\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                percentageRangeValues: percentageRangeValues,\n                defaultPayoff: this.toFloat(payoff)[0],\n                policies: policiesCollector.policies,\n                rows: []\n            };\n        }\n\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        let variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex, jobResult) {\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n        let failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        let data = stepExecution.getData();\n        let treeRoot = data.getRoots()[0];\n        let variableNames = stepExecution.executionContext.get(\"variableNames\");\n        let variableName = variableNames[itemIndex];\n\n\n        let payoffs = jobResult.data.policies.map(policy=>[]);\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n\n        item.forEach(variableValue=>{\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            let vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            let valid = vr.isValid();\n\n            if(!valid && failOnInvalidTree){\n                let errorData = {\n                    variables: {}\n                };\n                errorData.variables[variableName] = variableValue;\n\n                throw new JobComputationException(\"computations\", errorData)\n            }\n\n            jobResult.data.policies.forEach((policy, policyIndex)=>{\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                let payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                payoffs[policyIndex].push(this.toFloat(payoff));\n            });\n\n        });\n\n        return {\n            variableName: variableName,\n            variableIndex: itemIndex,\n            variableValues: item,\n            payoffs: payoffs\n        };\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        jobResult.data.rows.push(...items);\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        let jobExecutionContext = stepExecution.getJobExecutionContext();\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let variableValues = jobExecutionContext.get(\"variableValues\");\n        let variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        let data = stepExecution.getData();\n\n        let treeRoot = data.getRoots()[0];\n        let payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalExpressions(data);\n\n        this.objectiveRulesManager.recomputeTree(treeRoot, false);\n\n\n\n        let policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n\n        let defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            jobResult.data = {\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                variableExtents: variableValues.map(v=>[v[0], v[v.length-1]]),\n                defaultPayoff: this.toFloat(payoff)[0],\n                policies: policiesCollector.policies,\n                rows: []\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        let variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex, jobResult) {\n        let params = stepExecution.getJobParameters();\n        let ruleName = params.value(\"ruleName\");\n        let failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        let data = stepExecution.getData();\n        let treeRoot = data.getRoots()[0];\n        let variableNames = stepExecution.executionContext.get(\"variableNames\");\n        let variableName = variableNames[itemIndex];\n\n        let extents = jobResult.data.policies.map(policy=>{\n            return {\n                min: Infinity,\n                max: -Infinity\n            }\n        });\n\n        let values = jobResult.data.policies.map(policy=>{\n            return {\n                min: null,\n                max: null\n            }\n        });\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n\n        item.forEach(variableValue=>{\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            let vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            let valid = vr.isValid();\n\n            if(!valid && failOnInvalidTree){\n                let errorData = {\n                    variables: {}\n                };\n                errorData.variables[variableName] = variableValue;\n\n                throw new JobComputationException(\"computations\", errorData)\n            }\n\n            jobResult.data.policies.forEach((policy, policyIndex)=>{\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                let payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n\n                if(payoff < extents[policyIndex].min){\n                    extents[policyIndex].min = payoff;\n                    values[policyIndex].min = variableValue\n                }\n\n                if(payoff > extents[policyIndex].max){\n                    extents[policyIndex].max = payoff;\n                    values[policyIndex].max = variableValue\n                }\n            });\n\n        });\n\n        return {\n            variableName: variableName,\n            variableIndex: itemIndex,\n            extents: extents.map(e=>[this.toFloat(e.min), this.toFloat(e.max)]),\n            extentVariableValues: values.map(v=>[this.toFloat(v.min), this.toFloat(v.max)])\n        };\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        jobResult.data.rows.push(...items);\n    }\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.rows.sort((a, b)=>(b.extents[0][1]-b.extents[0][0])-(a.extents[0][1]-a.extents[0][0]))\n\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        let result = [];\n        if(withHeaders){\n            result.push(['variable_name', 'default_var_value', \"min_var_value\", \"max_var_value\", 'default_payoff', \"min_payoff\", \"max_payoff\", \"policy_no\"]);\n        }\n\n\n        jobResult.rows.forEach((row, index) => {\n\n            result.push(...row.extents.map((extent, policyIndex)=>[\n                row.variableName,\n                jobResult.defaultValues[row.variableName],\n                row.extentVariableValues[policyIndex][0],\n                row.extentVariableValues[policyIndex][1],\n                jobResult.defaultPayoff,\n                extent[0],\n                extent[1],\n                policyIndex+1\n            ]));\n\n        });\n\n\n        return result;\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n\n    static computeNumberExpression(val){\n        let parsed = parseFloat(val);\n        if(parsed === Infinity || parsed === -Infinity) {\n            return parsed;\n        }\n\n        if(!ExpressionEngine.validate(val, {}, false)){\n            return null\n        }\n\n        return ExpressionEngine.eval(val, true)\n    }\n\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n\n        if ((!value && value !== 0 && value !== false) && this.minOccurs > 0) {\n            return !this.required\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.BOOLEAN === this.type && !Utils.isBoolean(value)) {\n            return false;\n        }\n\n\n        if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            value = JobParameterDefinition.computeNumberExpression(value);\n            if(value === null){\n                return false\n            }\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n\n    value(value){\n        if(PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            return JobParameterDefinition.computeNumberExpression(value);\n        }\n\n        return value;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    getDefinition(path){\n        var defs =this.definitions;\n        let def = null;\n        if(!path.split().every(name=>{\n                def = Utils.find(defs, d=>d.name == name);\n                if(!def){\n                    return false\n                }\n                defs = def.nestedParameters;\n                return true;\n        })){\n            return null;\n        }\n        return def;\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            let def = this.getDefinition(path);\n            let val = Utils.get(this.values, path, null);\n            if(def){\n                return def.value(val);\n            }\n            return  val;\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n            return false;\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\nimport {SpiderPlotJob} from \"./configurations/sensitivity-analysis/spider-plot/spider-plot-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new SpiderPlotJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\nimport {MinMinRule} from \"./rules/min-min-rule\";\nimport {MaxMaxRule} from \"./rules/max-max-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        let minMin = new MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        let maxMax = new MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex || 0;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultCriterion1Weight(defaultCriterion1Weight){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultCriterion1Weight(defaultCriterion1Weight));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'max-max';\n\n    constructor(expressionEngine){\n        super(MaxMaxRule.NAME, [1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, [1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, [-1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMinRule extends MultiCriteriaRule{\n\n    static NAME = 'min-min';\n\n    constructor(expressionEngine){\n        super(MinMinRule.NAME, [-1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    criterion1Weight = 1;\n    payoffCoeffs = [1, -1];\n\n    constructor(name, payoffCoeffs, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.payoffCoeffs = payoffCoeffs;\n\n    }\n\n    setDefaultCriterion1Weight(criterion1Weight) {\n        this.criterion1Weight = criterion1Weight;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    computeCombinedPayoff(payoff){\n        // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n        if (this.criterion1Weight === Infinity) {\n            return this.multiply(this.payoffCoeffs[0], payoff[0]);\n        }\n        return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.computeCombinedPayoff([this.basePayoff(e, 0), this.basePayoff(e, 1)]), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = [\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)),\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1)),\n                ];\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n\nexport class McdmWeightValueValidator{\n\n    additionalValidator = null;\n\n    constructor(additionalValidator){\n        this.additionalValidator = additionalValidator;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        let parsed = parseFloat(value);\n        if(parsed !== Infinity && !ExpressionEngine.validate(value, {}, false)){\n            return false\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n        if(ExpressionEngine.compare(value, 0) < 0 || (value !== Infinity && ExpressionEngine.compare(value, maxSafeInteger)> 0)){\n            return false;\n        }\n\n        if(this.additionalValidator) {\n            return this.additionalValidator(ExpressionEngine.toNumber(value))\n        }\n\n        return true;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
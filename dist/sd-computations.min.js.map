{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-max-rule.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/min-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/mcdm-weight-value-validator.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","_mcdmWeightValueValidator","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","mcdmWeightValueValidator","McdmWeightValueValidator","currentRule","reversePayoffs","tmp","weightLowerBound","flip","weightUpperBound","defaultCriterion1Weight","flipRule","checkValidityAndRecomputeObjective","Infinity","serialize","divide","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultCriterion1Weight","validationResults","evalExpressions","weightValid","validate","multiCriteria","getRoots","root","vr","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/mcdm-weight-value-validator","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","NUMBER_EXPRESSION","v","allVals","computeNumberExpression","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","incratio","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","payoffCoeffs","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","bestCost","bestCostRow","cmp","prev2NotDominated","filter","computeICER","lastLELower","optimal","exitStatus","JOB_STATUS","COMPLETED","Math","abs","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","22","getObjectByIdMap","23","24","TornadoDiagramJobParameters","25","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","26","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","27","ExtendableError","28","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","29","_ExtendableError","30","JobDataInvalidException","31","JobExecutionAlreadyRunningException","32","JobInstanceAlreadyCompleteException","33","34","JobParametersInvalidException","35","JobRestartException","36","ExecutionContext","context","dirty","clone","prevValue","dto","37","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","38","JOB_EXECUTION_FLAG","STOP","39","JobExecutionListener","40","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","41","JobInstance","42","JobKeyGenerator","identifying","43","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","44","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isBoolean","isObject","nestedDef","_value","parsed","parseFloat","45","initDefinitions","initDefaultValues","def","defs","split","find","getDefinition","46","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","47","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","48","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","ex","49","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","50","51","STARTED","STOPPED","FAILED","EXECUTING","52","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","53","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","54","StepExecutionListener","55","56","beforeStep","determineJobStatus","afterStep","close","57","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","58","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","59","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","60","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","61","_rules","model","_minMaxRule","_maxMinRule","_minMinRule","_maxMaxRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","minMin","MinMinRule","maxMax","MaxMaxRule","flipped","setDefaultCriterion1Weight","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-max-rule","./rules/max-min-rule","./rules/min-max-rule","./rules/min-min-rule","62","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","63","64","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","65","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","./multi-criteria-rule","66","67","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","68","minBy","69","70","71","72","73","criterion1Weight","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","computeCombinedPayoff","combinedPayoff","../../policies/policy","74","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","75","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","76","77","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","78","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","79","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","80","ignoreId","prependId","81","additionalValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","82","PayoffValueValidator","83","ProbabilityValueValidator","84","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nvar _mcdmWeightValueValidator = require(\"./validation/mcdm-weight-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new _mcdmWeightValueValidator.McdmWeightValueValidator();\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            var tmp = data.weightLowerBound;\n            data.weightLowerBound = this.flip(data.weightUpperBound);\n            data.weightUpperBound = this.flip(tmp);\n            data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"flip\",\n        value: function flip(a) {\n            if (a == Infinity) {\n                return 0;\n            }\n\n            if (a == 0) {\n                return Infinity;\n            }\n\n            return this.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(1, a));\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n            var multiCriteria = this.getCurrentRule().multiCriteria;\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid() && (!multiCriteria || weightValid)) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":58,\"./jobs/jobs-manager\":60,\"./objective/objective-rules-manager\":61,\"./operations/operations-manager\":77,\"./policies/policy\":80,\"./validation/mcdm-weight-value-validator\":81,\"./validation/tree-validator\":84,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":57}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightLowerBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v <= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound']);\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"weightUpperBound\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", function (v, allVals) {\n                return v >= 0 && v >= _jobParameterDefinition.JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound']);\n            }));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                weightLowerBound: 0,\n                weightUpperBound: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.incratio];\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":80,\"../../engine/simple-job\":53,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return -payoffCoeffs[0] * (b.payoffs[0] - a.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    incratio: null\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            // rows.sort(compare);\n            rows.sort(function (a, b) {\n                return -payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n\n            var bestCost = -payoffCoeffs[1] * Infinity,\n                bestCostRow = null;\n\n            var cmp = function cmp(a, b) {\n                return a > b;\n            };\n            if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            }\n\n            rows.forEach(function (r, i) {\n                if (cmp(r.payoffs[1], bestCost)) {\n                    bestCost = r.payoffs[1];\n                    bestCostRow = r;\n                } else if (bestCostRow) {\n                    r.dominatedBy = bestCostRow.id;\n                }\n            });\n\n            cmp = function cmp(a, b) {\n                return a < b;\n            };\n            if (payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a > b;\n                };\n            }\n\n            var prev2NotDominated = null;\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]);\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.incratio = 0;\n                    return;\n                }\n\n                var prev = arr[i - 1];\n\n                r.incratio = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                if (!prev2NotDominated) {\n                    prev2NotDominated = arr[i - 2];\n                }\n\n                if (cmp(r.incratio, prev.incratio)) {\n                    prev.incratio = null;\n                    prev.extendedDominatedBy = [prev2NotDominated.id, r.id];\n                    r.incratio = _this2.computeICER(r, prev2NotDominated);\n                } else {\n                    prev2NotDominated = prev;\n                }\n            });\n\n            var weightLowerBound = params.value(\"weightLowerBound\");\n            var weightUpperBound = params.value(\"weightUpperBound\");\n\n            //mark optimal for weight in [weightLowerBound, weightUpperBound]\n            var lastLELower = null;\n            rows.slice().filter(function (r) {\n                return !r.dominatedBy && !r.extendedDominatedBy;\n            }).sort(function (a, b) {\n                return a.incratio - b.incratio;\n            }).forEach(function (row, i, arr) {\n\n                if (row.incratio <= weightLowerBound) {\n                    lastLELower = row;\n                } else if (row.incratio == weightLowerBound) {\n                    lastLELower = null;\n                }\n\n                row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n            });\n            if (lastLELower) {\n                lastLELower.optimal = true;\n            }\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.incratio = row.incratio === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.incratio);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                payoffCoeffs: payoffCoeffs,\n                rows: rows.sort(function (a, b) {\n                    return a.id - b.id;\n                }),\n                weightLowerBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightLowerBound),\n                weightUpperBound: _sdExpressionEngine.ExpressionEngine.toFloat(weightUpperBound)\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return Math.abs(_sdExpressionEngine.ExpressionEngine.divide(n, d));\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":79,\"../../../../policies/policy\":80,\"../../../../validation/tree-validator\":84,\"../../../engine/job-status\":51,\"../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":84,\"../../engine/batch/batch-step\":26,\"../../engine/job\":52,\"../../engine/job-status\":51,\"../../engine/simple-job\":53,\"../../engine/step\":56,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":80,\"../../../engine/simple-job\":53,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":80,\"../../../../../validation/tree-validator\":84,\"../../../../engine/batch/batch-step\":26,\"../../../../engine/exceptions/job-computation-exception\":29,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":29,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../../policies/policy\":80,\"../../../../../validation/tree-validator\":84,\"../../../../engine/batch/batch-step\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":53,\"./steps/calculate-step\":21,\"./steps/init-policies-step\":22,\"./steps/prepare-variables-step\":23,\"./tornado-diagram-job-parameters\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":33,\"../job-status\":51,\"../step\":56,\"sd-utils\":\"sd-utils\"}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":27,\"./job-data-invalid-exception\":30,\"./job-execution-already-running-exception\":31,\"./job-instance-already-complete-exception\":32,\"./job-interrupted-exception\":33,\"./job-parameters-invalid-exception\":34,\"./job-restart-exception\":35}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],35:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":28,\"./execution-context\":36,\"./job\":52,\"./job-execution\":40,\"./job-execution-flag\":38,\"./job-execution-listener\":39,\"./job-instance\":41,\"./job-key-generator\":42,\"./job-launcher\":43,\"./job-parameter-definition\":44,\"./job-parameters\":45,\"./job-status\":51,\"./simple-job\":53,\"./step\":56,\"./step-execution\":55,\"./step-execution-listener\":54}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-parameters-invalid-exception\":34,\"./exceptions/job-restart-exception\":35,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: \"set\",\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"validateSingleValue\",\n\n        // allValues - all values on the same level\n        value: function validateSingleValue(value, allValues) {\n\n            if (!value && value !== 0 && value !== false && this.minOccurs > 0) {\n                return !this.required;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.BOOLEAN === this.type && !_sdUtils.Utils.isBoolean(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                value = JobParameterDefinition.computeNumberExpression(value);\n                if (value === null) {\n                    return false;\n                }\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }, {\n        key: \"value\",\n        value: function value(_value) {\n            if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n                return JobParameterDefinition.computeNumberExpression(_value);\n            }\n\n            return _value;\n        }\n    }], [{\n        key: \"computeNumberExpression\",\n        value: function computeNumberExpression(val) {\n            var parsed = parseFloat(val);\n            if (parsed === Infinity || parsed === -Infinity) {\n                return parsed;\n            }\n\n            if (!_sdExpressionEngine.ExpressionEngine.validate(val, {}, false)) {\n                return null;\n            }\n\n            return _sdExpressionEngine.ExpressionEngine.eval(val, true);\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\nexports.JobParameterDefinition = JobParameterDefinition;\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n    }, {\n        key: \"getDefinition\",\n        value: function getDefinition(path) {\n            var defs = this.definitions;\n            var def = null;\n            if (!path.split().every(function (name) {\n                def = _sdUtils.Utils.find(defs, function (d) {\n                    return d.name == name;\n                });\n                if (!def) {\n                    return false;\n                }\n                defs = def.nestedParameters;\n                return true;\n            })) {\n                return null;\n            }\n            return def;\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                var def = this.getDefinition(path);\n                var val = _sdUtils.Utils.get(this.values, path, null);\n                if (def) {\n                    return def.value(val);\n                }\n                return val;\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../step-execution\":55,\"./job-repository\":47,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":31,\"../exceptions/job-instance-already-complete-exception\":32,\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../job-key-generator\":42,\"../job-result\":50,\"../job-status\":51,\"../step-execution\":55,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":47,\"./simple-job-repository\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-parameters-invalid-exception\":34,\"./job-execution-flag\":38,\"./job-result\":50,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-restart-exception\":35,\"./execution-context\":36,\"./job\":52,\"./job-execution-flag\":38,\"./job-status\":51,\"./step\":56,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-execution\":40,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":37,\"./job-worker\":59,\"./jobs-manager\":60}],58:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":39,\"./engine/job-instance\":41,\"./engine/job-status\":51,\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],60:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":25,\"./engine/job-execution-flag\":38,\"./engine/job-execution-listener\":39,\"./engine/job-launcher\":43,\"./engine/job-parameters\":45,\"./engine/job-repository/idb-job-repository\":46,\"./engine/job-repository/simple-job-repository\":48,\"./engine/job-repository/timeout-job-repository\":49,\"./engine/job-status\":51,\"./job-worker\":59,\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nvar _minMinRule = require(\"./rules/min-min-rule\");\n\nvar _maxMaxRule = require(\"./rules/max-max-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        var minMin = new _minMinRule.MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        var maxMax = new _maxMaxRule.MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex || 0;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultCriterion1Weight\",\n        value: function updateDefaultCriterion1Weight(defaultCriterion1Weight) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultCriterion1Weight(defaultCriterion1Weight);\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":64,\"./rules/max-max-rule\":65,\"./rules/max-min-rule\":66,\"./rules/min-max-rule\":69,\"./rules/min-min-rule\":70,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./maxi-max-rule\":67,\"./maxi-min-rule\":68,\"./mini-max-rule\":71,\"./mini-min-rule\":72,\"./objective-rule\":74}],65:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMaxRule = exports.MaxMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMaxRule, _MultiCriteriaRule);\n\n    function MaxMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxMaxRule.__proto__ || Object.getPrototypeOf(MaxMaxRule)).call(this, MaxMaxRule.NAME, [1, 1], expressionEngine));\n    }\n\n    return MaxMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMaxRule.NAME = 'max-max';\n\n},{\"./multi-criteria-rule\":73}],66:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, [1, -1], expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"./multi-criteria-rule\":73}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],69:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, [-1, 1], expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"./multi-criteria-rule\":73}],70:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMinRule = exports.MinMinRule = function (_MultiCriteriaRule) {\n    _inherits(MinMinRule, _MultiCriteriaRule);\n\n    function MinMinRule(expressionEngine) {\n        _classCallCheck(this, MinMinRule);\n\n        return _possibleConstructorReturn(this, (MinMinRule.__proto__ || Object.getPrototypeOf(MinMinRule)).call(this, MinMinRule.NAME, [-1, -1], expressionEngine));\n    }\n\n    return MinMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMinRule.NAME = 'min-min';\n\n},{\"./multi-criteria-rule\":73}],71:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],72:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],73:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, payoffCoeffs, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.criterion1Weight = 1;\n        _this.payoffCoeffs = [1, -1];\n\n        _this.payoffCoeffs = payoffCoeffs;\n\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultCriterion1Weight\",\n        value: function setDefaultCriterion1Weight(criterion1Weight) {\n            this.criterion1Weight = criterion1Weight;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n    }, {\n        key: \"computeCombinedPayoff\",\n        value: function computeCombinedPayoff(payoff) {\n            // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n            if (this.criterion1Weight === Infinity) {\n                return this.multiply(this.payoffCoeffs[0], payoff[0]);\n            }\n            return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.computeCombinedPayoff([_this3.basePayoff(e, 0), _this3.basePayoff(e, 1)]), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":80,\"./objective-rule\":74,\"sd-model\":\"sd-model\"}],74:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":80,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],75:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = [_sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)), _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1))];\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":84,\"./operation\":76,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],76:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],77:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":75}],78:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],79:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":78,\"./policy\":80,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],80:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":78}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.McdmWeightValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar McdmWeightValueValidator = exports.McdmWeightValueValidator = function () {\n    function McdmWeightValueValidator(additionalValidator) {\n        _classCallCheck(this, McdmWeightValueValidator);\n\n        this.additionalValidator = null;\n\n        this.additionalValidator = additionalValidator;\n    }\n\n    _createClass(McdmWeightValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var parsed = parseFloat(value);\n            if (parsed !== Infinity && !_sdExpressionEngine.ExpressionEngine.validate(value, {}, false)) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n            if (_sdExpressionEngine.ExpressionEngine.compare(value, 0) < 0 || value !== Infinity && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) > 0) {\n                return false;\n            }\n\n            if (this.additionalValidator) {\n                return this.additionalValidator(_sdExpressionEngine.ExpressionEngine.toNumber(value));\n            }\n\n            return true;\n        }\n    }]);\n\n    return McdmWeightValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],82:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],83:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],84:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":82,\"./probability-value-validator\":83,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\nimport {McdmWeightValueValidator} from \"./validation/mcdm-weight-value-validator\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n        this.mcdmWeightValueValidator = new McdmWeightValueValidator();\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        let tmp = data.weightLowerBound;\n        data.weightLowerBound = this.flip(data.weightUpperBound);\n        data.weightUpperBound = this.flip(tmp);\n        data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    flip(a){\n        if(a == Infinity){\n            return 0;\n        }\n\n        if(a == 0){\n            return Infinity;\n        }\n\n        return this.expressionEngine.serialize(ExpressionEngine.divide(1, a))\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n\n        this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        var weightValid = this.mcdmWeightValueValidator.validate(data.defaultCriterion1Weight);\n        var multiCriteria = this.getCurrentRule().multiCriteria;\n\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid() && (!multiCriteria || weightValid)) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"weightLowerBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v <= JobParameterDefinition.computeNumberExpression(allVals['weightUpperBound'])\n        }));\n        this.definitions.push(new JobParameterDefinition(\"weightUpperBound\", PARAMETER_TYPE.NUMBER_EXPRESSION).set(\"singleValueValidator\", (v, allVals) => {\n            return v >= 0 && v >= JobParameterDefinition.computeNumberExpression(allVals['weightLowerBound'])\n        }));\n\n    }\n\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            weightLowerBound: 0,\n            weightUpperBound: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.incratio\n                ];\n                result.push(rowCells);\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(-payoffCoeffs[0] *  (b.payoffs[0] - a.payoffs[0])) || (-payoffCoeffs[1] *  (a.payoffs[1] - b.payoffs[1]));\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                incratio: null\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        // rows.sort(compare);\n        rows.sort((a, b)=>(-payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n\n        let bestCost = -payoffCoeffs[1] * Infinity,\n            bestCostRow = null;\n\n        let cmp= (a, b) => a > b;\n        if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a < b;\n        }\n\n        rows.forEach((r, i)=> {\n            if (cmp(r.payoffs[1], bestCost)) {\n                bestCost = r.payoffs[1];\n                bestCostRow = r;\n            } else if(bestCostRow) {\n                r.dominatedBy = bestCostRow.id;\n            }\n        });\n\n        cmp= (a, b) => a < b;\n        if(payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a > b;\n        }\n\n        let prev2NotDominated = null;\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(  payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]))).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.incratio = 0;\n                return;\n            }\n\n            let prev = arr[i - 1];\n\n            r.incratio = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            if(!prev2NotDominated){\n                prev2NotDominated = arr[i - 2];\n            }\n\n            if(cmp(r.incratio,prev.incratio)){\n                prev.incratio = null;\n                prev.extendedDominatedBy = [prev2NotDominated.id, r.id] ;\n                r.incratio = this.computeICER(r, prev2NotDominated);\n            }else{\n                prev2NotDominated = prev;\n            }\n        });\n\n        let weightLowerBound = params.value(\"weightLowerBound\");\n        let weightUpperBound = params.value(\"weightUpperBound\");\n\n        //mark optimal for weight in [weightLowerBound, weightUpperBound]\n        let lastLELower = null;\n        rows.slice().filter(r=>!r.dominatedBy && !r.extendedDominatedBy).sort((a, b) => a.incratio - b.incratio).forEach((row, i, arr)=>{\n\n            if(row.incratio <= weightLowerBound){\n                lastLELower  = row;\n            }else if(row.incratio == weightLowerBound){\n                lastLELower = null;\n            }\n\n            row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n\n        });\n        if(lastLELower){\n            lastLELower.optimal = true;\n        }\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.incratio = row.incratio === null ? null : ExpressionEngine.toFloat(row.incratio);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            payoffCoeffs : payoffCoeffs,\n            rows: rows.sort((a, b)=>(a.id - b.id)),\n            weightLowerBound: ExpressionEngine.toFloat(weightLowerBound),\n            weightUpperBound: ExpressionEngine.toFloat(weightUpperBound)\n        };\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n        let n = ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return Math.abs(ExpressionEngine.divide(n, d));\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n\n    static computeNumberExpression(val){\n        let parsed = parseFloat(val);\n        if(parsed === Infinity || parsed === -Infinity) {\n            return parsed;\n        }\n\n        if(!ExpressionEngine.validate(val, {}, false)){\n            return null\n        }\n\n        return ExpressionEngine.eval(val, true)\n    }\n\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n\n        if ((!value && value !== 0 && value !== false) && this.minOccurs > 0) {\n            return !this.required\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.BOOLEAN === this.type && !Utils.isBoolean(value)) {\n            return false;\n        }\n\n\n        if (PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            value = JobParameterDefinition.computeNumberExpression(value);\n            if(value === null){\n                return false\n            }\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n\n    value(value){\n        if(PARAMETER_TYPE.NUMBER_EXPRESSION === this.type) {\n            return JobParameterDefinition.computeNumberExpression(value);\n        }\n\n        return value;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    getDefinition(path){\n        var defs =this.definitions;\n        let def = null;\n        if(!path.split().every(name=>{\n                def = Utils.find(defs, d=>d.name == name);\n                if(!def){\n                    return false\n                }\n                defs = def.nestedParameters;\n                return true;\n        })){\n            return null;\n        }\n        return def;\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            let def = this.getDefinition(path);\n            let val = Utils.get(this.values, path, null);\n            if(def){\n                return def.value(val);\n            }\n            return  val;\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\nimport {MinMinRule} from \"./rules/min-min-rule\";\nimport {MaxMaxRule} from \"./rules/max-max-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        let minMin = new MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        let maxMax = new MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex || 0;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultCriterion1Weight(defaultCriterion1Weight){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultCriterion1Weight(defaultCriterion1Weight));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'max-max';\n\n    constructor(expressionEngine){\n        super(MaxMaxRule.NAME, [1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, [1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, [-1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMinRule extends MultiCriteriaRule{\n\n    static NAME = 'min-min';\n\n    constructor(expressionEngine){\n        super(MinMinRule.NAME, [-1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    criterion1Weight = 1;\n    payoffCoeffs = [1, -1];\n\n    constructor(name, payoffCoeffs, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.payoffCoeffs = payoffCoeffs;\n\n    }\n\n    setDefaultCriterion1Weight(criterion1Weight) {\n        this.criterion1Weight = criterion1Weight;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    computeCombinedPayoff(payoff){\n        // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n        if (this.criterion1Weight === Infinity) {\n            return this.multiply(this.payoffCoeffs[0], payoff[0]);\n        }\n        return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.computeCombinedPayoff([this.basePayoff(e, 0), this.basePayoff(e, 1)]), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = [\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 0), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 0)),\n                    ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(undefined, 1), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff(undefined, 1)),\n                ];\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n\nexport class McdmWeightValueValidator{\n\n    additionalValidator = null;\n\n    constructor(additionalValidator){\n        this.additionalValidator = additionalValidator;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        let parsed = parseFloat(value);\n        if(parsed !== Infinity && !ExpressionEngine.validate(value, {}, false)){\n            return false\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER is undefined in IE\n        if(ExpressionEngine.compare(value, 0) < 0 || (value !== Infinity && ExpressionEngine.compare(value, maxSafeInteger)> 0)){\n            return false;\n        }\n\n        if(this.additionalValidator) {\n            return this.additionalValidator(ExpressionEngine.toNumber(value))\n        }\n\n        return true;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
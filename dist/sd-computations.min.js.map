{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","worker","delegateRecomputation","url","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","treeValidator","TreeValidator","currentRule","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","_this4","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","./expressions-evaluator","./jobs/engine/exceptions/job-data-invalid-exception","./jobs/engine/exceptions/job-parameters-invalid-exception","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./validation/tree-validator","sd-expression-engine","4","clearComputedValues","childEdges","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","isFieldValid","computedValue","evalPayoff","err","domain","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","add","computeHash","compare","hash","divide","subtract","childNode","$parent","parentScope","cloneDeep","5","_computationsEngine","keys","./computations-engine","./jobs/index","6","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","preserveDataModel","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","7","ProbabilisticSensitivityAnalysisJob","_simpleJob","_probabilisticSensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","_calculateStep","_SimpleJob","jobRepository","addStep","PrepareVariablesStep","InitPoliciesStep","CalculateStep","execution","stepExecutions","total","current","steps","getProgress","SimpleJob","../../engine/simple-job","../sensitivity-analysis/steps/calculate-step","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/prepare-variables-step","8","_step","_jobStatus","_Step","stepExecution","getJobParameters","numberOfRuns","variables","variableValues","runIndex","singleRunVariableValues","evaluated","formula","toFloat","getJobExecutionContext","put","exitStatus","JOB_STATUS","COMPLETED","min","max","extent","step","curr","Step","../../../engine/job-status","../../../engine/step","9","RecomputeJobParameters","10","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","checkValidityAndRecomputeObjective","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","11","SensitivityAnalysisJobParameters","NUMBER","12","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","13","_batchStep","_policy","_BatchStep","jobResult","jobExecutionContext","variableNames","map","executionContext","headers","rows","policies","startIndex","chunkSize","item","treeRoot","clear","variableName","valid","payoffs","dataList","policy","payoff","rowCells","Policy","toPolicyString","isString","row","cells","policyIndex","BatchStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","14","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","15","sequence","cartesianProductOf","round","16","defaultValues","forOwn","k","itemIndex","results","variableValue","variableIndex","policyByKey","itemsWrapper","indexOf","17","getObjectByIdMap","18","19","TornadoDiagramJobParameters","20","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","21","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","currentItemCount","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","22","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","captureStackTrace","stack","23","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","24","JobDataInvalidException","_ExtendableError","25","JobExecutionAlreadyRunningException","26","JobInstanceAlreadyCompleteException","27","28","JobParametersInvalidException","29","JobRestartException","30","ExecutionContext","context","dirty","clone","prevValue","dto","31","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","32","JOB_EXECUTION_FLAG","STOP","33","JobExecutionListener","34","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","35","JobInstance","36","JobKeyGenerator","identifying","37","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","38","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","every","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","39","initDefinitions","initDefaultValues","def","path","_value","40","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","jobInstanceDao","dbPromise","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","_","jobResultId","getByIndex","generateJobInstanceKey","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this7","revive","findStepExecutions","reviveJobExecution","jobExecutionDtoList","_this8","fetched","fetchJobExecutionsRelations","_this9","getAllByIndex","dtos","reviveStepExecution","_this10","fetchRelationsAndRevive","sorted","sort","b","getTime","_this11","findJobExecutions","executions","jobExecutions","filter","latest","dataModel","loadFromDTO","setData","_this12","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this13","indexName","_this14","_this15","_this16","tx","_this17","_this18","_this19","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","41","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","42","TimeoutJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","valueToResolve","delay","setTimeout","createTimeoutPromise","find","ex","43","JobResult","44","STARTED","STOPPED","FAILED","EXECUTING","45","_jobResult","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","getJobResultByInstance","./exceptions/job-interrupted-exception","./job-result","46","handleNextStep","lastExecutedStepExecution","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","remove","addStepExecution","_currentStepExecution","stepStatus","completedSteps","47","StepExecutionListener","48","49","beforeStep","determineJobStatus","afterStep","close","50","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","51","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","errors","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","52","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","53","_sensitivityAnalysisJob","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_tornadoDiagramJob","workerUrl","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","getJsonReviver","registerJobs","useWorker","initWorker","jobLauncher","serializeData","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","_arguments","argsDeserializer","addListener","onJobFatalError","registerJob","registerExecutionListener","splice","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/timeout-job-repository","54","_rules","model","currentRuleName","ruleByName","ExpectedValueMaximizationRule","maxiMin","MaxiMinRule","maxiMax","MaxiMaxRule","ExpectedValueMinimizationRule","miniMin","MiniMinRule","miniMax","MiniMaxRule","decisionPolicy","trace","time","rule","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","DecisionNode","computedBaseProbability","computedBasePayoff","./rules","55","_toConsumableArray","arr2","_objectiveRule","_ObjectiveRule","NAME","decisionNode","childrenPayoffs","indexesOf","probabilityToEnter","cValue","TerminalNode","equals","basePayoff","multiply","ObjectiveRule","./objective-rule","56","57","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","58","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","59","minBy","60","61","62","decision","getDecision","decisionValue","makeDecision","aggregatedPayoff","childrenPayoff","selectedIndexes","_makeDecision","bestChild","worstChild","childPayoff","baseProbability","modifyChanceProbability","sumweight","div","fieldName","edge","../../policies/decision","../../policies/policy","63","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","Set","child","has","trim","ge","size","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","64","65","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","66","Decision","children","indent","toDecisionString","keyProperty","$id","childrenRes","67","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","68","ignoreId","prependId","69","PayoffValueValidator","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","70","ProbabilityValueValidator","71","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobDataInvalidException = require(\"./jobs/engine/exceptions/job-data-invalid-exception\");\n\nvar _jobParametersInvalidException = require(\"./jobs/engine/exceptions/job-parameters-invalid-exception\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":4,\"./jobs/engine/exceptions/job-data-invalid-exception\":24,\"./jobs/engine/exceptions/job-parameters-invalid-exception\":28,\"./jobs/job-instance-manager\":51,\"./jobs/jobs-manager\":53,\"./objective/objective-rules-manager\":54,\"./operations/operations-manager\":65,\"./validation/tree-validator\":71,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    if (e.isFieldValid('payoff', true, false)) {\n                        try {\n                            e.computedValue(null, 'payoff', _this2.expressionEngine.evalPayoff(e));\n                        } catch (err) {\n                            //   Left empty intentionally\n                        }\n                    }\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":4,\"./jobs/index\":50}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"preserveDataModel\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                preserveDataModel: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _calculateStep = require(\"../sensitivity-analysis/steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SimpleJob);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, \"probabilistic-sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"../sensitivity-analysis/steps/calculate-step\":13,\"../sensitivity-analysis/steps/init-policies-step\":14,\"./probabilistic-sensitivity-analysis-job-parameters\":6,\"./steps/prepare-variables-step\":8}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(expressionEngine, jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var variables = params.value(\"variables\");\n            var variableValues = [];\n            var data = stepExecution.getData();\n\n            for (var runIndex = 0; runIndex < numberOfRuns; runIndex++) {\n                var singleRunVariableValues = [];\n                variables.forEach(function (v) {\n                    var evaluated = _this2.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                });\n                variableValues.push(singleRunVariableValues);\n            }\n\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n                result.push(curr);\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":71,\"../../engine/batch/batch-step\":21,\"../../engine/job\":45,\"../../engine/job-status\":44,\"../../engine/simple-job\":46,\"../../engine/step\":49,\"./recompute-job-parameters\":9}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"preserveDataModel\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                preserveDataModel: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"./sensitivity-analysis-job-parameters\":11,\"./steps/calculate-step\":13,\"./steps/init-policies-step\":14,\"./steps/prepare-variables-step\":15}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 5));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var preserveDataModel = params.value(\"preserveDataModel\");\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n            var payoffs = [];\n            var dataList = [];\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n\n                payoffs.push(payoff);\n                if (preserveDataModel) {\n                    dataList.push(data.getDTO());\n                }\n            });\n\n            return {\n                dataList: dataList,\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var preserveDataModel = params.value(\"preserveDataModel\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var rowCells = [_policy.Policy.toPolicyString(policy)];\n                    item.variables.forEach(function (v) {\n                        rowCells.push(_this3.toFloat(v));\n                    });\n                    var payoff = item.payoffs[i];\n                    rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: i\n                    };\n                    if (preserveDataModel) {\n                        row.data = item.dataList[i];\n                    }\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":68,\"../../../../validation/tree-validator\":71,\"../../../engine/batch/batch-step\":21,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../engine/job-status\":44,\"../../../engine/step\":49}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var preserveDataModel = params.value(\"preserveDataModel\");\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                if (preserveDataModel) {\n                    r.data = data.getDTO();\n                }\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n            var preserveDataModel = params.value(\"preserveDataModel\");\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        if (preserveDataModel) {\n                            row.data = item.data;\n                        }\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../../policies/policy\":68,\"../../../../validation/tree-validator\":71,\"../../../engine/batch/batch-step\":21,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"preserveDataModel\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                preserveDataModel: true\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"./steps/calculate-step\":16,\"./steps/init-policies-step\":17,\"./steps/prepare-variables-step\":18,\"./tornado-diagram-job-parameters\":19}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":27,\"../job-status\":44,\"../step\":49,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = exports.ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n        _this.name = _this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":22,\"./job-data-invalid-exception\":24,\"./job-execution-already-running-exception\":25,\"./job-instance-already-complete-exception\":26,\"./job-interrupted-exception\":27,\"./job-parameters-invalid-exception\":28,\"./job-restart-exception\":29}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],30:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":23,\"./execution-context\":30,\"./job\":45,\"./job-execution\":34,\"./job-execution-flag\":32,\"./job-execution-listener\":33,\"./job-instance\":35,\"./job-key-generator\":36,\"./job-launcher\":37,\"./job-parameter-definition\":38,\"./job-parameters\":39,\"./job-status\":44,\"./simple-job\":46,\"./step\":49,\"./step-execution\":48,\"./step-execution-listener\":47}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":30,\"./job-status\":44,\"./step-execution\":48,\"sd-utils\":\"sd-utils\"}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":24,\"./exceptions/job-parameters-invalid-exception\":28,\"./exceptions/job-restart-exception\":29,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":38,\"sd-utils\":\"sd-utils\"}],40:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n\n        _this.jobInstanceDao = new ObjectStoreDao('job-instances', _this.dbPromise);\n        _this.jobExecutionDao = new ObjectStoreDao('job-executions', _this.dbPromise);\n        _this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', _this.dbPromise);\n        _this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', _this.dbPromise);\n\n        _this.stepExecutionDao = new ObjectStoreDao('step-executions', _this.dbPromise);\n        _this.jobResultDao = new ObjectStoreDao('job-results', _this.dbPromise);\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 1, function (upgradeDB) {\n                upgradeDB.createObjectStore('job-instances');\n                var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                upgradeDB.createObjectStore('job-execution-progress');\n                upgradeDB.createObjectStore('job-execution-flags');\n                var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                var jobResultOS = upgradeDB.createObjectStore('job-results');\n                jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n            });\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this3.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this4 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this4.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this5 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this5.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this6 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this6.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this7 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this7.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this8 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this8.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this9.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this10 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this10.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this11 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this11.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this12 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this12.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this13 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this13.name).objectStore(_this13.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this14 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this14.name).objectStore(_this14.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this16.name, 'readwrite');\n                tx.objectStore(_this16.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this17.name, 'readwrite');\n                tx.objectStore(_this17.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name);\n                var keys = [];\n                var store = tx.objectStore(_this19.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":30,\"../job-execution\":34,\"../job-instance\":35,\"../step-execution\":48,\"./job-repository\":41,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                executionContext.setData(data);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {//TODO\n            // if(o instanceof JobExecution){\n            //     return this.removeJobExecution(o);\n            // }\n            //\n            // if(o instanceof StepExecution){\n            //     return this.removeStepExecution(o);\n            // }\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":25,\"../exceptions/job-instance-already-complete-exception\":26,\"../execution-context\":30,\"../job-execution\":34,\"../job-instance\":35,\"../job-key-generator\":36,\"../job-status\":44,\"../step-execution\":48,\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_JobRepository) {\n    _inherits(TimeoutJobRepository, _JobRepository);\n\n    function TimeoutJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TimeoutJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":41,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":30,\"./job-status\":44,\"./step-execution\":48,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":24,\"./exceptions/job-interrupted-exception\":27,\"./exceptions/job-parameters-invalid-exception\":28,\"./job-execution-flag\":32,\"./job-result\":43,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":27,\"./exceptions/job-restart-exception\":29,\"./execution-context\":30,\"./job\":45,\"./job-execution-flag\":32,\"./job-status\":44,\"./step\":49,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],48:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":30,\"./job-execution\":34,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":27,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":31,\"./job-worker\":52,\"./jobs-manager\":53}],51:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (!this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":33,\"./engine/job-instance\":35,\"./engine/job-status\":44,\"sd-utils\":\"sd-utils\"}],52:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.jobRepository = new _idbJobRepository.IdbJobRepository(_this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        _this.registerJobs();\n\n        _this.useWorker = !!workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(workerUrl);\n        }\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution && jobExecution.isRunning()) {\n                    return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                        return jobExecution;\n                    });\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n            this.registerJob(new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.remove(jobExecution.jobInstance);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":7,\"./configurations/recompute/recompute-job\":10,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":12,\"./configurations/tornado-diagram/tornado-diagram-job\":20,\"./engine/job-execution-flag\":32,\"./engine/job-execution-listener\":33,\"./engine/job-launcher\":37,\"./engine/job-parameters\":39,\"./engine/job-repository/idb-job-repository\":40,\"./engine/job-repository/timeout-job-repository\":42,\"./engine/job-status\":44,\"./job-worker\":52,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(data, expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        var max = new _rules.ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new _rules.MaxiMinRule(expressionEngine);\n        var maxiMax = new _rules.MaxiMaxRule(expressionEngine);\n        var min = new _rules.ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new _rules.MiniMinRule(expressionEngine);\n        var miniMax = new _rules.MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name] = max;\n        this.ruleByName[maxiMin.name] = maxiMin;\n        this.ruleByName[maxiMax.name] = maxiMax;\n        this.ruleByName[min.name] = min;\n        this.ruleByName[miniMin.name] = miniMin;\n        this.ruleByName[miniMax.name] = miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            this.data.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedBasePayoff();\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":57,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":55,\"./expected-value-minimization-rule\":56,\"./maxi-max-rule\":58,\"./maxi-min-rule\":59,\"./mini-max-rule\":60,\"./mini-min-rule\":61,\"./objective-rule\":62}],58:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _decision = require('../../policies/decision');\n\nvar _policy = require('../../policies/policy');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, expressionEngine) {\n        _classCallCheck(this, ObjectiveRule);\n\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: 'setDecisionPolicy',\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: 'clearDecisionPolicy',\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            throw 'makeDecision function not implemented for rule: ' + this.name;\n        }\n    }, {\n        key: '_makeDecision',\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: 'computePayoff',\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.cValue(e.childNode, 'payoff')).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: 'cValue',\n        value: function cValue(object, fieldName, value) {\n            return object.computedValue(this.name, fieldName, value);\n        }\n    }, {\n        key: 'baseProbability',\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: 'basePayoff',\n        value: function basePayoff(edge) {\n            return edge.computedBasePayoff();\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: 'add',\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: 'subtract',\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: 'divide',\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: 'max',\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: 'min',\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/decision\":66,\"../../policies/policy\":68,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":71,\"./operation\":64,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],65:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":63}],66:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            return decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    childrenRes += \", \";\n                }\n                childrenRes += Decision.toDecisionString(d, indent);\n            });\n            if (decision.children.length) {\n                childrenRes = \"(\" + childrenRes + \")\";\n            }\n            if (childrenRes.length) {\n                res += \" - \" + childrenRes;\n            }\n\n            return res;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":66,\"./policy\":68,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    res += \", \";\n                }\n                res += _decision.Decision.toDecisionString(d, indent);\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":66}],69:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],70:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _probabilityValueValidator = require('./probability-value-validator');\n\nvar _payoffValueValidator = require('./payoff-value-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: 'validate',\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: 'validateNode',\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n                e.setValueValidity('payoff', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n                var payoff = e.computedBasePayoff();\n                if (!_this2.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                    // console.log('invalidPayoff', e);\n                    e.setValueValidity('payoff', false);\n                }\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":69,\"./probability-value-validator\":70,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":5}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils, log} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobDataInvalidException} from \"./jobs/engine/exceptions/job-data-invalid-exception\";\nimport {JobParametersInvalidException} from \"./jobs/engine/exceptions/job-parameters-invalid-exception\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\n\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation:false,\n        url: null\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data=null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    getJobByName(jobName){\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=>{\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if(!allRules){\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=>{\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    updateDisplayValues(data) {\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                if(e.isFieldValid('payoff', true, false)){\n                    try{\n                        e.computedValue(null, 'payoff', this.expressionEngine.evalPayoff(e))\n                    }catch (err){\n                        //   Left empty intentionally\n                    }\n                }\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"preserveDataModel\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            preserveDataModel: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {CalculateStep} from \"../sensitivity-analysis/steps/calculate-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"probabilistic-sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(expressionEngine, jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var variables = params.value(\"variables\");\n        var variableValues = [];\n        var data = stepExecution.getData();\n\n        for(var runIndex=0; runIndex<numberOfRuns; runIndex++){\n            var singleRunVariableValues = [];\n            variables.forEach(v=> {\n                var evaluated = this.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n            });\n            variableValues.push(singleRunVariableValues)\n        }\n\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n            result.push(curr);\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"preserveDataModel\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            preserveDataModel: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 5);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var preserveDataModel = params.value(\"preserveDataModel\");\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n        var payoffs=[];\n        var dataList=[];\n        policies.forEach(policy=>{\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n\n            payoffs.push(payoff);\n            if(preserveDataModel){\n                dataList.push(data.getDTO())\n            }\n        });\n\n        return {\n            dataList: dataList,\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var preserveDataModel = params.value(\"preserveDataModel\");\n\n        items.forEach(item=>{\n            if(!item){\n                return;\n            }\n            item.policies.forEach((policy,i)=>{\n                var rowCells = [Policy.toPolicyString(policy)];\n                item.variables.forEach(v=>{\n                    rowCells.push(this.toFloat(v))\n                });\n                var payoff = item.payoffs[i];\n                rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                var row = {\n                    cells: rowCells,\n                    policyIndex: i,\n                };\n                if(preserveDataModel){\n                    row.data =  item.dataList[i]\n                }\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var preserveDataModel = params.value(\"preserveDataModel\");\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            if(preserveDataModel){\n                r.data = data.getDTO();\n            }\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var preserveDataModel = params.value(\"preserveDataModel\");\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    if(preserveDataModel){\n                        row.data =  item.data\n                    }\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"preserveDataModel\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            preserveDataModel: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName ='sd-job-repository', deleteDB=false) {\n        super();\n        this.dbName=dbName;\n        this.expressionsReviver = expressionsReviver;\n        if(deleteDB){\n            this.deleteDB().then(()=>{\n                this.initDB()\n            })\n        }else{\n            this.initDB()\n        }\n\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    initDB(){\n        this.dbPromise = idb.open(this.dbName, 1, upgradeDB => {\n            upgradeDB.createObjectStore('job-instances');\n            var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n            jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n            jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n            jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n            upgradeDB.createObjectStore('job-execution-progress');\n            upgradeDB.createObjectStore('job-execution-flags');\n            var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n            stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n            var jobResultOS = upgradeDB.createObjectStore('job-results');\n            jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n        });\n    }\n\n    deleteDB(){\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    getJobResult(jobResultId){\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto): dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions=null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions=[]) {\n        if(stepExecutions.length<=savedExecutions.length){\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=>{\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id){\n        return this.jobExecutionDao.get(id).then(dto=>{\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive=true){\n        if(!jobExecutionDTO){\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=>{\n            jobExecutionDTO.stepExecutions = steps;\n            if(!revive){\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive=true, fetched=[]){\n        if(jobExecutionDtoList.length<=fetched.length){\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=>{\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive=true){\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=>{\n            if(!revive){\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive=true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted =  values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if(!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length -1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if(data){\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            executionContext.setData(data);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n\n    remove(o){ //TODO\n        // if(o instanceof JobExecution){\n        //     return this.removeJobExecution(o);\n        // }\n        //\n        // if(o instanceof StepExecution){\n        //     return this.removeStepExecution(o);\n        // }\n    }\n\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\n\n\nexport class TimeoutJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults=[];\n    \n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository) {\n        super(name, jobRepository)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (!this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if(jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress){\n        if(!progress){\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution){\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if(jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=>{\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=>{\n                log.error(e);\n            })\n\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=>{\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=>{\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n                return this.lastJobExecution;\n            })\n        }).catch(e=>{\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\n\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        super();\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n        this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        this.registerJobs();\n\n        this.useWorker = !!workerUrl;\n        if (this.useWorker) {\n            this.initWorker(workerUrl);\n        }\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution && jobExecution.isRunning()) {\n                return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n        this.registerJob(new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.remove(jobExecution.jobInstance);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n}\n","import {ExpectedValueMaximizationRule, ExpectedValueMinimizationRule, MaxiMinRule, MaxiMaxRule, MiniMinRule, MiniMaxRule} from \"./rules\";\nimport {log} from \"sd-utils\"\nimport * as model from \"sd-model\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName={};\n\n    constructor(data, expressionEngine, currentRuleName){\n        this.data = data;\n        this.expressionEngine=expressionEngine;\n        var max = new ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new MaxiMinRule(expressionEngine);\n        var maxiMax = new MaxiMaxRule(expressionEngine);\n        var min = new ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new MiniMinRule(expressionEngine);\n        var miniMax = new MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name]=max;\n        this.ruleByName[maxiMin.name]=maxiMin;\n        this.ruleByName[maxiMax.name]=maxiMax;\n        this.ruleByName[min.name]=min;\n        this.ruleByName[miniMin.name]=miniMin;\n        this.ruleByName[miniMax.name]=miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if(currentRuleName){\n            this.currentRule = this.ruleByName[currentRuleName];\n        }else{\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    recompute(allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        this.data.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedBasePayoff();\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {domain as model} from 'sd-model'\nimport {Decision} from \"../../policies/decision\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule{\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n\n    constructor(name, expressionEngine){\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    setDecisionPolicy(decisionPolicy){\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    clearDecisionPolicy(){\n        this.decisionPolicy=null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs){\n        throw 'makeDecision function not implemented for rule: '+this.name\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs){\n        if(this.decisionPolicy){\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if(decision){\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=0, aggregatedPayoff=0){\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            }else{\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=>{\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if(childPayoff < worstChild){\n                        worstChild = childPayoff;\n                        worstCount=1;\n                    }else if(childPayoff.equals(worstChild)){\n                        worstCount++\n                    }\n                    if(childPayoff > bestChild){\n                        bestChild = childPayoff;\n                        bestCount=1;\n                    }else if(childPayoff.equals(bestChild)){\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if(sumweight>0){\n                node.childEdges.forEach(e=>{\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'),this.cValue(e.childNode, 'payoff')).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff=this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node){\n        throw 'computeOptimal function not implemented for rule: '+this.name\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldName, value){\n        return  object.computedValue(this.name, fieldName, value);\n    }\n\n    baseProbability(edge){\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge){\n        return edge.computedBasePayoff();\n    }\n\n    clearComputedValues(object){\n        object.clearComputedValues(this.name);\n    }\n\n    add(a,b){\n        return ExpressionEngine.add(a,b)\n    }\n    subtract(a,b){\n        return ExpressionEngine.subtract(a,b)\n    }\n    divide(a,b){\n        return ExpressionEngine.divide(a,b)\n    }\n\n    multiply(a,b){\n        return ExpressionEngine.multiply(a,b)\n    }\n\n    max(){\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min(){\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        return decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, indent=false, keyProperty='name'){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                childrenRes += \", \"\n            }\n            childrenRes += Decision.toDecisionString(d,indent)\n        });\n        if(decision.children.length){\n            childrenRes = \"(\" + childrenRes + \")\";\n        }\n        if(childrenRes.length){\n            res += \" - \" +childrenRes;\n        }\n\n        return res;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, indent=false, prependId=false){\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                res += \", \"\n            }\n            res += Decision.toDecisionString(d, indent);\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {Utils} from 'sd-utils'\nimport {domain as model, ValidationResult} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n            e.setValueValidity('payoff', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if(!ExpressionEngine.isHash(e.probability)){\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n            var payoff = e.computedBasePayoff();\n            if (!this.payoffValueValidator.validate(payoff)) {\n                validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                // console.log('invalidPayoff', e);\n                e.setValueValidity('payoff', false);\n            }\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
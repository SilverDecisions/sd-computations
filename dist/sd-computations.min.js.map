{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","treeValidator","TreeValidator","currentRule","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/engine/exceptions/job-data-invalid-exception","./jobs/engine/exceptions/job-parameters-invalid-exception","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","add","computeHash","compare","hash","divide","subtract","$parent","parentScope","cloneDeep","5","_computationsEngine","keys","./computations-engine","./jobs/index","6","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","extendedPolicyDescription","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","7","ProbabilisticSensitivityAnalysisJob","_simpleJob","_probabilisticSensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","_calculateStep","_SimpleJob","jobRepository","addStep","PrepareVariablesStep","InitPoliciesStep","CalculateStep","execution","stepExecutions","total","current","steps","getProgress","SimpleJob","../../engine/simple-job","../sensitivity-analysis/steps/calculate-step","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/prepare-variables-step","8","_step","_jobStatus","_Step","stepExecution","jobResult","getJobParameters","numberOfRuns","variables","variableValues","runIndex","singleRunVariableValues","evaluated","formula","toFloat","exitStatus","JOB_STATUS","COMPLETED","min","max","extent","step","curr","Step","../../../engine/job-status","../../../engine/step","9","RecomputeJobParameters","10","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","checkValidityAndRecomputeObjective","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","11","SensitivityAnalysisJobParameters","NUMBER","12","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","13","_batchStep","_BatchStep","getJobExecutionContext","variableNames","map","executionContext","put","headers","rows","startIndex","chunkSize","item","treeRoot","policies","clear","variableName","valid","payoffs","dataList","payoff","rowCells","toPolicyString","isString","row","cells","policyIndex","BatchStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","14","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","15","sequence","cartesianProductOf","16","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","variableIndex","policyByKey","itemsWrapper","indexOf","17","getObjectByIdMap","18","round","19","TornadoDiagramJobParameters","20","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","21","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","currentItemCount","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","22","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","captureStackTrace","stack","23","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","24","JobDataInvalidException","_ExtendableError","25","JobExecutionAlreadyRunningException","26","JobInstanceAlreadyCompleteException","27","28","JobParametersInvalidException","29","JobRestartException","30","ExecutionContext","context","dirty","clone","prevValue","dto","31","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","32","JOB_EXECUTION_FLAG","STOP","33","JobExecutionListener","34","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","35","JobInstance","36","JobKeyGenerator","identifying","37","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","38","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","39","initDefinitions","initDefaultValues","def","path","_value","40","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","jobInstanceDao","dbPromise","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","_","jobResultId","getByIndex","generateJobInstanceKey","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","revive","findStepExecutions","reviveJobExecution","jobExecutionDtoList","fetched","fetchJobExecutionsRelations","_this9","getAllByIndex","dtos","reviveStepExecution","_this10","fetchRelationsAndRevive","sorted","sort","b","getTime","_this11","findJobExecutions","executions","jobExecutions","filter","latest","dataModel","loadFromDTO","setData","_this12","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this13","indexName","_this14","_this15","_this16","tx","_this17","_this18","_this19","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","41","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","42","TimeoutJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","valueToResolve","delay","setTimeout","createTimeoutPromise","find","ex","43","JobResult","44","STARTED","STOPPED","FAILED","EXECUTING","45","_jobResult","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","getJobResultByInstance","./exceptions/job-interrupted-exception","./job-result","46","handleNextStep","lastExecutedStepExecution","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","remove","addStepExecution","_currentStepExecution","stepStatus","completedSteps","47","StepExecutionListener","48","49","beforeStep","determineJobStatus","afterStep","close","50","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","51","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","errors","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","52","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","53","_sensitivityAnalysisJob","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_tornadoDiagramJob","workerUrl","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","getJsonReviver","registerJobs","useWorker","initWorker","jobLauncher","serializeData","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","_arguments","argsDeserializer","addListener","onJobFatalError","registerJob","registerExecutionListener","splice","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/timeout-job-repository","54","_rules","model","currentRuleName","ruleByName","ExpectedValueMaximizationRule","maxiMin","MaxiMinRule","maxiMax","MaxiMaxRule","ExpectedValueMinimizationRule","miniMin","MiniMinRule","miniMax","MiniMaxRule","decisionPolicy","trace","time","rule","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","computedBasePayoff","./rules","55","_toConsumableArray","arr2","_objectiveRule","_ObjectiveRule","NAME","decisionNode","childrenPayoffs","indexesOf","probabilityToEnter","cValue","TerminalNode","equals","basePayoff","multiply","ObjectiveRule","./objective-rule","56","57","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","58","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","59","minBy","60","61","62","makeDecision","aggregatedPayoff","childrenPayoff","selectedIndexes","_makeDecision","bestChild","worstChild","childPayoff","baseProbability","modifyChanceProbability","sumweight","div","fieldName","edge","../../policies/decision","../../policies/policy","63","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","Set","child","has","trim","ge","size","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","64","65","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","66","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","67","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","68","ignoreId","prependId","69","PayoffValueValidator","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","70","ProbabilityValueValidator","71","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobDataInvalidException = require(\"./jobs/engine/exceptions/job-data-invalid-exception\");\n\nvar _jobParametersInvalidException = require(\"./jobs/engine/exceptions/job-parameters-invalid-exception\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":4,\"./jobs/engine/exceptions/job-data-invalid-exception\":24,\"./jobs/engine/exceptions/job-parameters-invalid-exception\":28,\"./jobs/job-instance-manager\":51,\"./jobs/jobs-manager\":53,\"./objective/objective-rules-manager\":54,\"./operations/operations-manager\":65,\"./policies/policy\":68,\"./validation/tree-validator\":71,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    if (e.isFieldValid('payoff', true, false)) {\n                        try {\n                            e.computedValue(null, 'payoff', _this2.expressionEngine.evalPayoff(e));\n                        } catch (err) {\n                            //   Left empty intentionally\n                        }\n                    }\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":4,\"./jobs/index\":50}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _calculateStep = require(\"../sensitivity-analysis/steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SimpleJob);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, \"probabilistic-sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"../sensitivity-analysis/steps/calculate-step\":13,\"../sensitivity-analysis/steps/init-policies-step\":14,\"./probabilistic-sensitivity-analysis-job-parameters\":6,\"./steps/prepare-variables-step\":8}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(expressionEngine, jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var variables = params.value(\"variables\");\n            var variableValues = [];\n            var data = stepExecution.getData();\n\n            for (var runIndex = 0; runIndex < numberOfRuns; runIndex++) {\n                var singleRunVariableValues = [];\n                variables.forEach(function (v) {\n                    var evaluated = _this2.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                });\n                variableValues.push(singleRunVariableValues);\n            }\n\n            jobResult.data = {\n                variableValues: variableValues\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":71,\"../../engine/batch/batch-step\":21,\"../../engine/job\":45,\"../../engine/job-status\":44,\"../../engine/simple-job\":46,\"../../engine/step\":49,\"./recompute-job-parameters\":9}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository, expressionsEvaluator.expressionEngine));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"./sensitivity-analysis-job-parameters\":11,\"./steps/calculate-step\":13,\"./steps/init-policies-step\":14,\"./steps/prepare-variables-step\":15}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 5));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.headers) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n\n                jobResult.data.headers = headers;\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n            var payoffs = [];\n            var dataList = [];\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n\n                payoffs.push(payoff);\n            });\n\n            return {\n                dataList: dataList,\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var rowCells = [_policy.Policy.toPolicyString(policy, extendedPolicyDescription)];\n                    item.variables.forEach(function (v) {\n                        rowCells.push(_this3.toFloat(v));\n                    });\n                    var payoff = item.payoffs[i];\n                    rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: i\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":68,\"../../../../validation/tree-validator\":71,\"../../../engine/batch/batch-step\":21,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../engine/job-status\":44,\"../../../engine/step\":49}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../../policies/policy\":68,\"../../../../validation/tree-validator\":71,\"../../../engine/batch/batch-step\":21,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":67,\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":44,\"../../../engine/step\":49,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":38,\"../../engine/job-parameters\":39,\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":46,\"./steps/calculate-step\":16,\"./steps/init-policies-step\":17,\"./steps/prepare-variables-step\":18,\"./tornado-diagram-job-parameters\":19}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":27,\"../job-status\":44,\"../step\":49,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = exports.ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n        _this.name = _this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":22,\"./job-data-invalid-exception\":24,\"./job-execution-already-running-exception\":25,\"./job-instance-already-complete-exception\":26,\"./job-interrupted-exception\":27,\"./job-parameters-invalid-exception\":28,\"./job-restart-exception\":29}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":22}],30:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":23,\"./execution-context\":30,\"./job\":45,\"./job-execution\":34,\"./job-execution-flag\":32,\"./job-execution-listener\":33,\"./job-instance\":35,\"./job-key-generator\":36,\"./job-launcher\":37,\"./job-parameter-definition\":38,\"./job-parameters\":39,\"./job-status\":44,\"./simple-job\":46,\"./step\":49,\"./step-execution\":48,\"./step-execution-listener\":47}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":30,\"./job-status\":44,\"./step-execution\":48,\"sd-utils\":\"sd-utils\"}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":24,\"./exceptions/job-parameters-invalid-exception\":28,\"./exceptions/job-restart-exception\":29,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":38,\"sd-utils\":\"sd-utils\"}],40:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n\n        _this.jobInstanceDao = new ObjectStoreDao('job-instances', _this.dbPromise);\n        _this.jobExecutionDao = new ObjectStoreDao('job-executions', _this.dbPromise);\n        _this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', _this.dbPromise);\n        _this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', _this.dbPromise);\n\n        _this.stepExecutionDao = new ObjectStoreDao('step-executions', _this.dbPromise);\n        _this.jobResultDao = new ObjectStoreDao('job-results', _this.dbPromise);\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 1, function (upgradeDB) {\n                upgradeDB.createObjectStore('job-instances');\n                var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                upgradeDB.createObjectStore('job-execution-progress');\n                upgradeDB.createObjectStore('job-execution-flags');\n                var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                var jobResultOS = upgradeDB.createObjectStore('job-results');\n                jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n            });\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this3.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this4 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this4.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this5 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this5.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this6 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this6.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this7 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this7.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this8 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this8.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this9.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this10 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this10.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this11 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this11.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this12 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this12.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this13 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this13.name).objectStore(_this13.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this14 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this14.name).objectStore(_this14.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this16.name, 'readwrite');\n                tx.objectStore(_this16.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this17.name, 'readwrite');\n                tx.objectStore(_this17.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name);\n                var keys = [];\n                var store = tx.objectStore(_this19.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":30,\"../job-execution\":34,\"../job-instance\":35,\"../step-execution\":48,\"./job-repository\":41,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                executionContext.setData(data);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {//TODO\n            // if(o instanceof JobExecution){\n            //     return this.removeJobExecution(o);\n            // }\n            //\n            // if(o instanceof StepExecution){\n            //     return this.removeStepExecution(o);\n            // }\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":25,\"../exceptions/job-instance-already-complete-exception\":26,\"../execution-context\":30,\"../job-execution\":34,\"../job-instance\":35,\"../job-key-generator\":36,\"../job-status\":44,\"../step-execution\":48,\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_JobRepository) {\n    _inherits(TimeoutJobRepository, _JobRepository);\n\n    function TimeoutJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TimeoutJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":41,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":30,\"./job-status\":44,\"./step-execution\":48,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":24,\"./exceptions/job-interrupted-exception\":27,\"./exceptions/job-parameters-invalid-exception\":28,\"./job-execution-flag\":32,\"./job-result\":43,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":27,\"./exceptions/job-restart-exception\":29,\"./execution-context\":30,\"./job\":45,\"./job-execution-flag\":32,\"./job-status\":44,\"./step\":49,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],48:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":30,\"./job-execution\":34,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":27,\"./job-status\":44,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":31,\"./job-worker\":52,\"./jobs-manager\":53}],51:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":33,\"./engine/job-instance\":35,\"./engine/job-status\":44,\"sd-utils\":\"sd-utils\"}],52:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.jobRepository = new _idbJobRepository.IdbJobRepository(_this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        _this.registerJobs();\n\n        _this.useWorker = !!workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(workerUrl);\n        }\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution && jobExecution.isRunning()) {\n                    return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                        return jobExecution;\n                    });\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n            this.registerJob(new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.remove(jobExecution.jobInstance);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":7,\"./configurations/recompute/recompute-job\":10,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":12,\"./configurations/tornado-diagram/tornado-diagram-job\":20,\"./engine/job-execution-flag\":32,\"./engine/job-execution-listener\":33,\"./engine/job-launcher\":37,\"./engine/job-parameters\":39,\"./engine/job-repository/idb-job-repository\":40,\"./engine/job-repository/timeout-job-repository\":42,\"./engine/job-status\":44,\"./job-worker\":52,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(data, expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        var max = new _rules.ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new _rules.MaxiMinRule(expressionEngine);\n        var maxiMax = new _rules.MaxiMaxRule(expressionEngine);\n        var min = new _rules.ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new _rules.MiniMinRule(expressionEngine);\n        var miniMax = new _rules.MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name] = max;\n        this.ruleByName[maxiMin.name] = maxiMin;\n        this.ruleByName[maxiMax.name] = maxiMax;\n        this.ruleByName[min.name] = min;\n        this.ruleByName[miniMin.name] = miniMin;\n        this.ruleByName[miniMax.name] = miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            this.data.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedBasePayoff();\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":57,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],55:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, expressionEngine));\n    }\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.cValue(node, 'payoff'), payoff).equals(_this2.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":55,\"./expected-value-minimization-rule\":56,\"./maxi-max-rule\":58,\"./maxi-min-rule\":59,\"./mini-max-rule\":60,\"./mini-min-rule\":61,\"./objective-rule\":62}],58:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.max.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            return _sdUtils.Utils.indexesOf(childrenPayoffs, this.min.apply(this, _toConsumableArray(childrenPayoffs)));\n        }\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.cValue(e.childNode, 'payoff') > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.cValue(e.childNode, 'payoff');\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.cValue(optimalEdge.childNode, 'payoff').equals(_this3.cValue(e.childNode, 'payoff'));\n                } else isOptimal = !!(_this3.subtract(_this3.cValue(node, 'payoff'), payoff).equals(_this3.cValue(e.childNode, 'payoff')) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":62,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _decision = require('../../policies/decision');\n\nvar _policy = require('../../policies/policy');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, expressionEngine) {\n        _classCallCheck(this, ObjectiveRule);\n\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: 'setDecisionPolicy',\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: 'clearDecisionPolicy',\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: 'makeDecision',\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            throw 'makeDecision function not implemented for rule: ' + this.name;\n        }\n    }, {\n        key: '_makeDecision',\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: 'computePayoff',\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.cValue(e.childNode, 'payoff')).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: 'cValue',\n        value: function cValue(object, fieldName, value) {\n            return object.computedValue(this.name, fieldName, value);\n        }\n    }, {\n        key: 'baseProbability',\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: 'basePayoff',\n        value: function basePayoff(edge) {\n            return edge.computedBasePayoff();\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: 'add',\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: 'subtract',\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: 'divide',\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: 'max',\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: 'min',\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/decision\":66,\"../../policies/policy\":68,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":71,\"./operation\":64,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],65:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":63}],66:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":66,\"./policy\":68,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":66}],69:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],70:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _probabilityValueValidator = require('./probability-value-validator');\n\nvar _payoffValueValidator = require('./payoff-value-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: 'validate',\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: 'validateNode',\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n                e.setValueValidity('payoff', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n                var payoff = e.computedBasePayoff();\n                if (!_this2.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                    // console.log('invalidPayoff', e);\n                    e.setValueValidity('payoff', false);\n                }\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":69,\"./probability-value-validator\":70,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":5}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils, log} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobDataInvalidException} from \"./jobs/engine/exceptions/job-data-invalid-exception\";\nimport {JobParametersInvalidException} from \"./jobs/engine/exceptions/job-parameters-invalid-exception\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from 'sd-model'\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation:false,\n        url: null\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data=null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.data, this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, this.config.worker.url);\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    getJobByName(jobName){\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=>{\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if(!allRules){\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=>{\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data){\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay=null) {\n        data = data || this.data;\n        if(policyToDisplay){\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=>{\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root,policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy){\n        if(node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if(decision){\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                if(e.isFieldValid('payoff', true, false)){\n                    try{\n                        e.computedValue(null, 'payoff', this.expressionEngine.evalPayoff(e))\n                    }catch (err){\n                        //   Left empty intentionally\n                    }\n                }\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {CalculateStep} from \"../sensitivity-analysis/steps/calculate-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"probabilistic-sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(expressionsEvaluator.expressionEngine, jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(expressionEngine, jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var variables = params.value(\"variables\");\n        var variableValues = [];\n        var data = stepExecution.getData();\n\n        for(var runIndex=0; runIndex<numberOfRuns; runIndex++){\n            var singleRunVariableValues = [];\n            variables.forEach(v=> {\n                var evaluated = this.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n            });\n            variableValues.push(singleRunVariableValues)\n        }\n\n        jobResult.data={\n            variableValues: variableValues\n        };\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"sensitivity-analysis\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository, expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 5);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.headers) {\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n\n            jobResult.data.headers = headers;\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n        var payoffs = [];\n        var dataList = [];\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n\n\n            payoffs.push(payoff);\n        });\n\n        return {\n            dataList: dataList,\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var rowCells = [Policy.toPolicyString(policy, extendedPolicyDescription)];\n                item.variables.forEach(v=> {\n                    rowCells.push(this.toFloat(v))\n                });\n                var payoff = item.payoffs[i];\n                rowCells.push(Utils.isString(payoff) ? payoff : this.toFloat(payoff));\n                var row = {\n                    cells: rowCells,\n                    policyIndex: i,\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName ='sd-job-repository', deleteDB=false) {\n        super();\n        this.dbName=dbName;\n        this.expressionsReviver = expressionsReviver;\n        if(deleteDB){\n            this.deleteDB().then(()=>{\n                this.initDB()\n            })\n        }else{\n            this.initDB()\n        }\n\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    initDB(){\n        this.dbPromise = idb.open(this.dbName, 1, upgradeDB => {\n            upgradeDB.createObjectStore('job-instances');\n            var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n            jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n            jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n            jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n            upgradeDB.createObjectStore('job-execution-progress');\n            upgradeDB.createObjectStore('job-execution-flags');\n            var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n            stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n            var jobResultOS = upgradeDB.createObjectStore('job-results');\n            jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n        });\n    }\n\n    deleteDB(){\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    getJobResult(jobResultId){\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto): dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions=null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions=[]) {\n        if(stepExecutions.length<=savedExecutions.length){\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=>{\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id){\n        return this.jobExecutionDao.get(id).then(dto=>{\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive=true){\n        if(!jobExecutionDTO){\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=>{\n            jobExecutionDTO.stepExecutions = steps;\n            if(!revive){\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive=true, fetched=[]){\n        if(jobExecutionDtoList.length<=fetched.length){\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=>{\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive=true){\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=>{\n            if(!revive){\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive=true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted =  values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if(!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length -1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if(data){\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key){\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            executionContext.setData(data);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n\n    remove(o){ //TODO\n        // if(o instanceof JobExecution){\n        //     return this.removeJobExecution(o);\n        // }\n        //\n        // if(o instanceof StepExecution){\n        //     return this.removeStepExecution(o);\n        // }\n    }\n\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\n\n\nexport class TimeoutJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults=[];\n    \n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository) {\n        super(name, jobRepository)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {\n    };\n    onJobCompleted = result => {\n    };\n    onJobFailed = errors => {\n    };\n    onJobStopped = () => {\n    };\n    onJobTerminated = () => {\n    };\n    onProgress = (progress) => {\n    };\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\n\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, workerUrl) {\n        super();\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n        this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver());\n        // this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        this.registerJobs();\n\n        this.useWorker = !!workerUrl;\n        if (this.useWorker) {\n            this.initWorker(workerUrl);\n        }\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution && jobExecution.isRunning()) {\n                return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n        this.registerJob(new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.remove(jobExecution.jobInstance);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n}\n","import {ExpectedValueMaximizationRule, ExpectedValueMinimizationRule, MaxiMinRule, MaxiMaxRule, MiniMinRule, MiniMaxRule} from \"./rules\";\nimport {log} from \"sd-utils\"\nimport * as model from \"sd-model\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName={};\n\n    constructor(data, expressionEngine, currentRuleName){\n        this.data = data;\n        this.expressionEngine=expressionEngine;\n        var max = new ExpectedValueMaximizationRule(expressionEngine);\n        var maxiMin = new MaxiMinRule(expressionEngine);\n        var maxiMax = new MaxiMaxRule(expressionEngine);\n        var min = new ExpectedValueMinimizationRule(expressionEngine);\n        var miniMin = new MiniMinRule(expressionEngine);\n        var miniMax = new MiniMaxRule(expressionEngine);\n        this.ruleByName[max.name]=max;\n        this.ruleByName[maxiMin.name]=maxiMin;\n        this.ruleByName[maxiMax.name]=maxiMax;\n        this.ruleByName[min.name]=min;\n        this.ruleByName[miniMin.name]=miniMin;\n        this.ruleByName[miniMax.name]=miniMax;\n        this.rules = [max, min, maxiMin, maxiMax, miniMin, miniMax];\n        if(currentRuleName){\n            this.currentRule = this.ruleByName[currentRuleName];\n        }else{\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    recompute(allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        this.data.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedBasePayoff();\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'payoff'),payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.max(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, expressionEngine);\n    }\n\n    makeDecision(decisionNode, childrenPayoffs){\n        return Utils.indexesOf(childrenPayoffs, this.min(...childrenPayoffs));\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.cValue(e.childNode, 'payoff')>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.cValue(e.childNode, 'payoff'));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.cValue(optimalEdge.childNode, 'payoff').equals(this.cValue(e.childNode, 'payoff'));\n            } else isOptimal = !!(this.subtract(this.cValue(node, 'payoff'), payoff).equals(this.cValue(e.childNode, 'payoff')) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {domain as model} from 'sd-model'\nimport {Decision} from \"../../policies/decision\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule{\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n\n    constructor(name, expressionEngine){\n        this.name = name;\n        this.expressionEngine = expressionEngine;\n    }\n\n    setDecisionPolicy(decisionPolicy){\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    clearDecisionPolicy(){\n        this.decisionPolicy=null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs){\n        throw 'makeDecision function not implemented for rule: '+this.name\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs){\n        if(this.decisionPolicy){\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if(decision){\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=0, aggregatedPayoff=0){\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            }else{\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=>{\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if(childPayoff < worstChild){\n                        worstChild = childPayoff;\n                        worstCount=1;\n                    }else if(childPayoff.equals(worstChild)){\n                        worstCount++\n                    }\n                    if(childPayoff > bestChild){\n                        bestChild = childPayoff;\n                        bestCount=1;\n                    }else if(childPayoff.equals(bestChild)){\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if(sumweight>0){\n                node.childEdges.forEach(e=>{\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'),this.cValue(e.childNode, 'payoff')).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff=this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node){\n        throw 'computeOptimal function not implemented for rule: '+this.name\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldName, value){\n        return  object.computedValue(this.name, fieldName, value);\n    }\n\n    baseProbability(edge){\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge){\n        return edge.computedBasePayoff();\n    }\n\n    clearComputedValues(object){\n        object.clearComputedValues(this.name);\n    }\n\n    add(a,b){\n        return ExpressionEngine.add(a,b)\n    }\n    subtract(a,b){\n        return ExpressionEngine.subtract(a,b)\n    }\n    divide(a,b){\n        return ExpressionEngine.divide(a,b)\n    }\n\n    multiply(a,b){\n        return ExpressionEngine.multiply(a,b)\n    }\n\n    max(){\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min(){\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n        if(value===null || value === undefined){\n            return false;\n        }\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(Number.MIN_SAFE_INTEGER) >= 0 && value.compare(Number.MAX_SAFE_INTEGER) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {Utils} from 'sd-utils'\nimport {domain as model, ValidationResult} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n            e.setValueValidity('payoff', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if(!ExpressionEngine.isHash(e.probability)){\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n            var payoff = e.computedBasePayoff();\n            if (!this.payoffValueValidator.validate(payoff)) {\n                validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                // console.log('invalidPayoff', e);\n                e.setValueValidity('payoff', false);\n            }\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","reversePayoffs","flipRule","checkValidityAndRecomputeObjective","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","modes","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultWTP","defaultWTP","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","minimumWTP","maximumWTP","Infinity","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","maximizedPayoffIndex","minimizedPayoffIndex","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","ICER","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","minimizedIndex","maximizedIndex","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","minCost","minCostRow","filter","computeICER","prev2","exitStatus","JOB_STATUS","COMPLETED","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","v","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","NUMBER_EXPRESSION","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","22","getObjectByIdMap","23","24","TornadoDiagramJobParameters","25","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","26","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","27","ExtendableError","28","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","29","_ExtendableError","30","JobDataInvalidException","31","JobExecutionAlreadyRunningException","32","JobInstanceAlreadyCompleteException","33","34","JobParametersInvalidException","35","JobRestartException","36","ExecutionContext","context","dirty","clone","prevValue","dto","37","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","38","JOB_EXECUTION_FLAG","STOP","39","JobExecutionListener","40","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","41","JobInstance","42","JobKeyGenerator","identifying","43","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","44","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","45","initDefinitions","initDefaultValues","def","_value","46","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","47","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","48","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","find","ex","49","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","50","51","STARTED","STOPPED","FAILED","EXECUTING","52","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","53","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","54","StepExecutionListener","55","56","beforeStep","determineJobStatus","afterStep","close","57","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","58","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","59","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","60","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","61","_rules","model","_minMaxRule","_maxMinRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","flipped","multiCriteria","setDefaultWTP","parseFloat","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-min-rule","./rules/min-max-rule","62","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","63","64","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","65","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","../../policies/policies-collector","../../policies/policy","./multi-criteria-rule","66","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","67","minBy","68","69","70","71","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","combinedPayoff","72","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","73","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","74","75","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","76","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","77","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","78","ignoreId","prependId","79","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","80","ProbabilityValueValidator","81","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"getModes\",\n        value: function getModes() {\n            return this.objectiveRulesManager.modes;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":58,\"./jobs/jobs-manager\":60,\"./objective/objective-rules-manager\":61,\"./operations/operations-manager\":75,\"./policies/policy\":78,\"./validation/tree-validator\":81,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":57}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            // this.definitions.push(new JobParameterDefinition(\"minimumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['maximumWTP']));\n            // this.definitions.push(new JobParameterDefinition(\"maximumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['minimumWTP']));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                minimumWTP: 0,\n                maximumWTP: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[jobResult.maximizedPayoffIndex], jobResult.payoffNames[jobResult.minimizedPayoffIndex], 'dominated_by', 'extended-dominated_by', 'ICER'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.ICER];\n\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":78,\"../../engine/simple-job\":53,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var minimizedIndex = this.minimizedIndex = rule.minimizedPayoffIndex;\n            var maximizedIndex = this.maximizedIndex = rule.maximizedPayoffIndex;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return b.payoffs[maximizedIndex] - a.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    ICER: null\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            rows.sort(compare);\n\n            var minCost = Infinity,\n                minCostRow = null;\n\n            rows.forEach(function (r, i) {\n                if (r.payoffs[minimizedIndex] < minCost) {\n                    minCost = r.payoffs[minimizedIndex];\n                    minCostRow = r;\n                } else if (minCostRow) {\n                    r.dominatedBy = minCostRow.id;\n                }\n            });\n\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex];\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.ICER = 0;\n                    return;\n                }\n                var prev = arr[i - 1];\n\n                r.ICER = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                var prev2 = arr[i - 2];\n                if (prev2.extendedDominatedBy !== null) {\n                    return;\n                }\n\n                if (r.ICER < prev.ICER) {\n                    prev.ICER = null;\n                    prev.extendedDominatedBy = [prev2.id, r.id];\n\n                    r.ICER = _this2.computeICER(r, prev2);\n                }\n            });\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.ICER = row.ICER === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.ICER);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                maximizedPayoffIndex: maximizedIndex,\n                minimizedPayoffIndex: minimizedIndex,\n                rows: rows.sort(function (a, b) {\n                    return a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex] || a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex];\n                })\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[this.maximizedIndex], prev.payoffs[this.maximizedIndex]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[this.minimizedIndex], prev.payoffs[this.minimizedIndex]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return _sdExpressionEngine.ExpressionEngine.divide(n, d);\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":77,\"../../../../policies/policy\":78,\"../../../../validation/tree-validator\":81,\"../../../engine/job-status\":51,\"../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":81,\"../../engine/batch/batch-step\":26,\"../../engine/job\":52,\"../../engine/job-status\":51,\"../../engine/simple-job\":53,\"../../engine/step\":56,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":78,\"../../../engine/simple-job\":53,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":78,\"../../../../../validation/tree-validator\":81,\"../../../../engine/batch/batch-step\":26,\"../../../../engine/exceptions/job-computation-exception\":29,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":29,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../../policies/policy\":78,\"../../../../../validation/tree-validator\":81,\"../../../../engine/batch/batch-step\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":77,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":53,\"./steps/calculate-step\":21,\"./steps/init-policies-step\":22,\"./steps/prepare-variables-step\":23,\"./tornado-diagram-job-parameters\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":33,\"../job-status\":51,\"../step\":56,\"sd-utils\":\"sd-utils\"}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":27,\"./job-data-invalid-exception\":30,\"./job-execution-already-running-exception\":31,\"./job-instance-already-complete-exception\":32,\"./job-interrupted-exception\":33,\"./job-parameters-invalid-exception\":34,\"./job-restart-exception\":35}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],35:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":28,\"./execution-context\":36,\"./job\":52,\"./job-execution\":40,\"./job-execution-flag\":38,\"./job-execution-listener\":39,\"./job-instance\":41,\"./job-key-generator\":42,\"./job-launcher\":43,\"./job-parameter-definition\":44,\"./job-parameters\":45,\"./job-status\":51,\"./simple-job\":53,\"./step\":56,\"./step-execution\":55,\"./step-execution-listener\":54}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-parameters-invalid-exception\":34,\"./exceptions/job-restart-exception\":35,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n        // allValues - all values on the same level\n\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value, allValues) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../step-execution\":55,\"./job-repository\":47,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":31,\"../exceptions/job-instance-already-complete-exception\":32,\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../job-key-generator\":42,\"../job-result\":50,\"../job-status\":51,\"../step-execution\":55,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":47,\"./simple-job-repository\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-parameters-invalid-exception\":34,\"./job-execution-flag\":38,\"./job-result\":50,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-restart-exception\":35,\"./execution-context\":36,\"./job\":52,\"./job-execution-flag\":38,\"./job-status\":51,\"./step\":56,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-execution\":40,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":37,\"./job-worker\":59,\"./jobs-manager\":60}],58:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":39,\"./engine/job-instance\":41,\"./engine/job-status\":51,\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],60:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":25,\"./engine/job-execution-flag\":38,\"./engine/job-execution-listener\":39,\"./engine/job-launcher\":43,\"./engine/job-parameters\":45,\"./engine/job-repository/idb-job-repository\":46,\"./engine/job-repository/simple-job-repository\":48,\"./engine/job-repository/timeout-job-repository\":49,\"./engine/job-status\":51,\"./job-worker\":59,\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultWTP\",\n        value: function updateDefaultWTP(defaultWTP) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultWTP(parseFloat(defaultWTP));\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":64,\"./rules/max-min-rule\":65,\"./rules/min-max-rule\":68,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./maxi-max-rule\":66,\"./maxi-min-rule\":67,\"./mini-max-rule\":69,\"./mini-min-rule\":70,\"./objective-rule\":72}],65:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, 1, 0, expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"../../policies/policies-collector\":77,\"../../policies/policy\":78,\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./multi-criteria-rule\":71,\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, 0, 1, expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"../../policies/policies-collector\":77,\"../../policies/policy\":78,\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./multi-criteria-rule\":71,\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],69:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],70:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":72,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.defaultWTP = 1;\n        _this.minimizedPayoffIndex = 0;\n        _this.maximizedPayoffIndex = 1;\n\n        _this.minimizedPayoffIndex = minimizedPayoffIndex;\n        _this.maximizedPayoffIndex = maximizedPayoffIndex;\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultWTP\",\n        value: function setDefaultWTP(defaultWTP) {\n            this.defaultWTP = defaultWTP;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', [0, 0]); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            if (this.defaultWTP === Infinity) {\n                this.cValue(node, 'combinedPayoff', payoff[this.maximizedPayoffIndex]);\n            } else {\n                this.cValue(node, 'combinedPayoff', this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]));\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":78,\"./objective-rule\":72,\"sd-model\":\"sd-model\"}],72:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":78,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],73:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":81,\"./operation\":74,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],74:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],75:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":73}],76:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],77:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":76,\"./policy\":78,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],78:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":76}],79:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],80:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":79,\"./probability-value-validator\":80,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    getModes() {\n        return this.objectiveRulesManager.modes;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        // this.definitions.push(new JobParameterDefinition(\"minimumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['maximumWTP']));\n        // this.definitions.push(new JobParameterDefinition(\"maximumWTP\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['minimumWTP']));\n\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            minimumWTP: 0,\n            maximumWTP: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[jobResult.maximizedPayoffIndex], jobResult.payoffNames[jobResult.minimizedPayoffIndex], 'dominated_by', 'extended-dominated_by', 'ICER'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.ICER\n                ];\n\n                result.push(rowCells);\n\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var minimizedIndex = this.minimizedIndex = rule.minimizedPayoffIndex;\n        var maximizedIndex = this.maximizedIndex = rule.maximizedPayoffIndex;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(b.payoffs[maximizedIndex] - a.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]);\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                ICER: null\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        rows.sort(compare);\n\n        let minCost = Infinity,\n            minCostRow = null;\n\n        rows.forEach((r, i)=> {\n            if (r.payoffs[minimizedIndex] < minCost) {\n                minCost = r.payoffs[minimizedIndex];\n                minCostRow = r;\n            } else if(minCostRow) {\n                r.dominatedBy = minCostRow.id;\n            }\n        });\n\n\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex])).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.ICER = 0;\n                return;\n            }\n            let prev = arr[i - 1];\n\n            r.ICER = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            let prev2 = arr[i - 2];\n            if (prev2.extendedDominatedBy !== null) {\n                return;\n            }\n\n            if(r.ICER < prev.ICER){\n                prev.ICER = null;\n                prev.extendedDominatedBy = [prev2.id, r.id] ;\n\n                r.ICER = this.computeICER(r, prev2);\n            }\n        });\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.ICER = row.ICER === null ? null : ExpressionEngine.toFloat(row.ICER);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            maximizedPayoffIndex: maximizedIndex,\n            minimizedPayoffIndex: minimizedIndex,\n            rows: rows.sort((a, b)=>(a.payoffs[maximizedIndex] - b.payoffs[maximizedIndex]) || (a.payoffs[minimizedIndex] - b.payoffs[minimizedIndex]))\n        };\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[this.maximizedIndex], prev.payoffs[this.maximizedIndex]);\n        let n = ExpressionEngine.subtract(r.payoffs[this.minimizedIndex], prev.payoffs[this.minimizedIndex]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return ExpressionEngine.divide(n, d);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultWTP(defaultWTP){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultWTP(parseFloat(defaultWTP)));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, 1, 0, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, 0, 1, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    defaultWTP = 1;\n\n    minimizedPayoffIndex = 0;\n    maximizedPayoffIndex = 1;\n\n    constructor(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.minimizedPayoffIndex = minimizedPayoffIndex;\n        this.maximizedPayoffIndex = maximizedPayoffIndex;\n    }\n\n    setDefaultWTP(defaultWTP) {\n        this.defaultWTP = defaultWTP;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', [0, 0]); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        if (this.defaultWTP === Infinity) {\n            this.cValue(node, 'combinedPayoff', payoff[this.maximizedPayoffIndex]);\n        } else {\n            this.cValue(node, 'combinedPayoff', this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]));\n        }\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/compute-policy-stats-step.js","src/jobs/configurations/probabilistic-sensitivity-analysis/steps/prob-calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","reversePayoffs","flipRule","checkValidityAndRecomputeObjective","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultWTP","defaultWTP","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","divide","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","ProbabilisticSensitivityAnalysisJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","INTEGER","v","NUMBER_EXPRESSION","Infinity","values","isUnique","id","guid","extendedPolicyDescription","failOnInvalidTree","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_initPoliciesStep","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","jobRepository","batchSize","addStep","InitPoliciesStep","calculateStep","ProbCalculateStep","ComputePolicyStatsStep","execution","stepExecutions","total","current","getProgress","SensitivityAnalysisJob","../sensitivity-analysis/sensitivity-analysis-job","../sensitivity-analysis/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","9","_step","_jobStatus","_Step","stepExecution","jobResult","getJobParameters","numberOfRuns","rule","ruleByName","payoffsPerPolicy","policies","map","rows","row","policyIndex","isString","maximization","medians","payoffs","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","exitStatus","JOB_STATUS","COMPLETED","Step","../../../engine/job-status","../../../engine/step","10","_calculateStep","_jobComputationException","_CalculateStep","getJobExecutionContext","variableNames","executionContext","put","expectedValues","fill","startIndex","chunkSize","variables","variableValues","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","errorData","JobComputationException","item","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","CalculateStep","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/batch/batch-step","../../../engine/exceptions/job-computation-exception","../../sensitivity-analysis/steps/calculate-step","11","RecomputeJobParameters","12","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","jobParameters","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/simple-job","../../engine/step","./recompute-job-parameters","13","SensitivityAnalysisJobParameters","NUMBER","14","_simpleJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_SimpleJob","initSteps","PrepareVariablesStep","withHeaders","headers","roundVariables","rowCells","toPolicyString","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","SimpleJob","../../../policies/policy","./sensitivity-analysis-job-parameters","./steps/calculate-step","./steps/init-policies-step","./steps/prepare-variables-step","15","_batchStep","_BatchStep","treeRoot","clear","variableName","valid","BatchStep","16","_policiesCollector","policiesCollector","PoliciesCollector","../../../../policies/policies-collector","17","_computationsUtils","sequence","cartesianProductOf","../../../../computations-utils","18","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","19","getObjectByIdMap","20","21","TornadoDiagramJobParameters","22","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","23","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","Math","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","24","ExtendableError","25","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","26","_ExtendableError","27","JobDataInvalidException","28","JobExecutionAlreadyRunningException","29","JobInstanceAlreadyCompleteException","30","31","JobParametersInvalidException","32","JobRestartException","33","ExecutionContext","context","dirty","clone","prevValue","dto","34","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","35","JOB_EXECUTION_FLAG","STOP","36","JobExecutionListener","37","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","38","JobInstance","39","JobKeyGenerator","identifying","40","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","41","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","isArray","type","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","42","initDefinitions","initDefaultValues","def","_value","43","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","sort","b","getTime","_this13","executions","filter","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","44","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","45","SimpleJobRepository","_ref","_temp","_ret","_len","_key","concat","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","find","ex","46","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","47","48","STARTED","STOPPED","FAILED","EXECUTING","49","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","50","_toConsumableArray","arr2","from","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","51","StepExecutionListener","52","53","beforeStep","determineJobStatus","afterStep","close","54","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","55","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","56","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","57","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/sensitivity-analysis-job","./configurations/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","58","_rules","model","_minMaxRule","_maxMinRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","flipped","multiCriteria","setDefaultWTP","parseFloat","decisionPolicy","trace","time","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-min-rule","./rules/min-max-rule","59","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","60","61","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","62","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","../../policies/policies-collector","../../policies/policy","./multi-criteria-rule","63","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","64","minBy","65","66","67","68","minimizedPayoffIndex","maximizedPayoffIndex","minRule","setPayoffIndex","maxRule","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","combinedPayoff","eIndex","bestPolicies","some","69","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","70","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","71","72","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","73","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","74","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","75","ignoreId","prependId","76","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","77","ProbabilityValueValidator","78","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":55,\"./jobs/jobs-manager\":57,\"./objective/objective-rules-manager\":58,\"./operations/operations-manager\":72,\"./policies/policy\":75,\"./validation/tree-validator\":78,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":54}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../sensitivity-analysis/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../sensitivity-analysis/sensitivity-analysis-job\":14,\"../sensitivity-analysis/steps/init-policies-step\":16,\"./probabilistic-sensitivity-analysis-job-parameters\":7,\"./steps/compute-policy-stats-step\":9,\"./steps/prob-calculate-step\":10}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _calculateStep = require(\"../../sensitivity-analysis/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../policies/policy\":75,\"../../../../validation/tree-validator\":78,\"../../../engine/batch/batch-step\":23,\"../../../engine/exceptions/job-computation-exception\":26,\"../../sensitivity-analysis/steps/calculate-step\":15,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":78,\"../../engine/batch/batch-step\":23,\"../../engine/job\":49,\"../../engine/job-status\":48,\"../../engine/simple-job\":50,\"../../engine/step\":53,\"./recompute-job-parameters\":11}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":75,\"../../engine/simple-job\":50,\"./sensitivity-analysis-job-parameters\":13,\"./steps/calculate-step\":15,\"./steps/init-policies-step\":16,\"./steps/prepare-variables-step\":17,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff');\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policy\":75,\"../../../../validation/tree-validator\":78,\"../../../engine/batch/batch-step\":23,\"../../../engine/exceptions/job-computation-exception\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = [];\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":74,\"../../../engine/job-status\":48,\"../../../engine/step\":53}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../computations-utils\":4,\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../policies/policies-collector\":74,\"../../../../policies/policy\":75,\"../../../../validation/tree-validator\":78,\"../../../engine/batch/batch-step\":23,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":74,\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../engine/job-status\":48,\"../../../engine/step\":53,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":41,\"../../engine/job-parameters\":42,\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../engine/simple-job\":50,\"./steps/calculate-step\":18,\"./steps/init-policies-step\":19,\"./steps/prepare-variables-step\":20,\"./tornado-diagram-job-parameters\":21}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":30,\"../job-status\":48,\"../step\":53,\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":24,\"./job-data-invalid-exception\":27,\"./job-execution-already-running-exception\":28,\"./job-instance-already-complete-exception\":29,\"./job-interrupted-exception\":30,\"./job-parameters-invalid-exception\":31,\"./job-restart-exception\":32}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],27:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],28:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":24}],33:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":25,\"./execution-context\":33,\"./job\":49,\"./job-execution\":37,\"./job-execution-flag\":35,\"./job-execution-listener\":36,\"./job-instance\":38,\"./job-key-generator\":39,\"./job-launcher\":40,\"./job-parameter-definition\":41,\"./job-parameters\":42,\"./job-status\":48,\"./simple-job\":50,\"./step\":53,\"./step-execution\":52,\"./step-execution-listener\":51}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":33,\"./job-status\":48,\"./step-execution\":52,\"sd-utils\":\"sd-utils\"}],38:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":27,\"./exceptions/job-parameters-invalid-exception\":31,\"./exceptions/job-restart-exception\":32,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value) {\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(this.validateSingleValue, this)) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value);\n            }\n\n            return true;\n        }\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name]);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":41,\"sd-utils\":\"sd-utils\"}],43:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":33,\"../job-execution\":37,\"../job-instance\":38,\"../step-execution\":52,\"./job-repository\":44,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":28,\"../exceptions/job-instance-already-complete-exception\":29,\"../execution-context\":33,\"../job-execution\":37,\"../job-instance\":38,\"../job-key-generator\":39,\"../job-result\":47,\"../job-status\":48,\"../step-execution\":52,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":44,\"./simple-job-repository\":45,\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":33,\"./job-status\":48,\"./step-execution\":52,\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],49:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":27,\"./exceptions/job-interrupted-exception\":30,\"./exceptions/job-parameters-invalid-exception\":31,\"./job-execution-flag\":35,\"./job-result\":47,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                completedSteps--;\n            }\n\n            return Math.round(completedSteps * 100 / this.steps.length);\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":30,\"./exceptions/job-restart-exception\":32,\"./execution-context\":33,\"./job\":49,\"./job-execution-flag\":35,\"./job-status\":48,\"./step\":53,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":33,\"./job-execution\":37,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":30,\"./job-status\":48,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":34,\"./job-worker\":56,\"./jobs-manager\":57}],55:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":36,\"./engine/job-instance\":38,\"./engine/job-status\":48,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],57:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\":8,\"./configurations/recompute/recompute-job\":12,\"./configurations/sensitivity-analysis/sensitivity-analysis-job\":14,\"./configurations/tornado-diagram/tornado-diagram-job\":22,\"./engine/job-execution-flag\":35,\"./engine/job-execution-listener\":36,\"./engine/job-launcher\":40,\"./engine/job-parameters\":42,\"./engine/job-repository/idb-job-repository\":43,\"./engine/job-repository/simple-job-repository\":45,\"./engine/job-repository/timeout-job-repository\":46,\"./engine/job-status\":48,\"./job-worker\":56,\"sd-utils\":\"sd-utils\"}],58:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultWTP\",\n        value: function updateDefaultWTP(defaultWTP) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultWTP(parseFloat(defaultWTP));\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                return e.computedValue(null, 'payoff');\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":61,\"./rules/max-min-rule\":62,\"./rules/min-max-rule\":65,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],60:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":59,\"./expected-value-minimization-rule\":60,\"./maxi-max-rule\":63,\"./maxi-min-rule\":64,\"./mini-max-rule\":66,\"./mini-min-rule\":67,\"./objective-rule\":69}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, 1, 0, expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"../../policies/policies-collector\":74,\"../../policies/policy\":75,\"./expected-value-maximization-rule\":59,\"./expected-value-minimization-rule\":60,\"./multi-criteria-rule\":68,\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],65:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nvar _policiesCollector = require('../../policies/policies-collector');\n\nvar _policy = require('../../policies/policy');\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nvar _multiCriteriaRule = require('./multi-criteria-rule');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, 0, 1, expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"../../policies/policies-collector\":74,\"../../policies/policy\":75,\"./expected-value-maximization-rule\":59,\"./expected-value-minimization-rule\":60,\"./multi-criteria-rule\":68,\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],66:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":69,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policiesCollector = require(\"../../policies/policies-collector\");\n\nvar _policy = require(\"../../policies/policy\");\n\nvar _expectedValueMaximizationRule = require(\"./expected-value-maximization-rule\");\n\nvar _expectedValueMinimizationRule = require(\"./expected-value-minimization-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.defaultWTP = 1;\n        _this.minimizedPayoffIndex = 0;\n        _this.maximizedPayoffIndex = 1;\n\n        _this.minimizedPayoffIndex = minimizedPayoffIndex;\n        _this.maximizedPayoffIndex = maximizedPayoffIndex;\n\n        _this.minRule = new _expectedValueMinimizationRule.ExpectedValueMinimizationRule(_this.expressionEngine);\n        _this.minRule.setPayoffIndex(0);\n        _this.minRule.name = '$min';\n\n        _this.maxRule = new _expectedValueMaximizationRule.ExpectedValueMaximizationRule(_this.expressionEngine);\n        _this.maxRule.setPayoffIndex(1);\n        _this.maxRule.name = '$max';\n\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultWTP\",\n        value: function setDefaultWTP(defaultWTP) {\n            this.defaultWTP = defaultWTP;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    if (this.decisionPolicy) {\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    } else {\n                        var bestChild = -Infinity;\n\n                        node.childEdges.forEach(function (e, i) {\n                            var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                            var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                            var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                            if (childCombinedPayoff > bestChild) {\n                                bestChild = childCombinedPayoff;\n                                selectedIndexes = [i];\n                            } else if (bestChild.equals(childCombinedPayoff)) {\n                                selectedIndexes.push(i);\n                            }\n                        });\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                node.childEdges.forEach(function (e) {\n                    childrenPayoff.forEach(function (p, i) {\n                        var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                    });\n                });\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', [0, 0]); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            if (this.defaultWTP === Infinity) {\n                this.cValue(node, 'combinedPayoff', payoff[this.maximizedPayoffIndex]);\n            } else {\n                this.cValue(node, 'combinedPayoff', this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]));\n            }\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: \"computeOptimal2\",\n        value: function computeOptimal2(node) {\n            var _this4 = this;\n\n            var probabilityToEnter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e, eIndex) {\n                if (!(node instanceof _sdModel.domain.DecisionNode) || _this4.bestPolicies.some(function (policy) {\n                    var decision = _policy.Policy.getDecision(policy, node);\n                    return decision && decision.decisionValue === eIndex;\n                })) {\n                    _this4.cValue(e, 'optimal', true);\n                    _this4.computeOptimal(e.childNode, _this4.multiply(probabilityToEnter, _this4.cValue(e, 'probability')));\n                } else {\n                    _this4.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policies-collector\":74,\"../../policies/policy\":75,\"./expected-value-maximization-rule\":59,\"./expected-value-minimization-rule\":60,\"./objective-rule\":69,\"sd-model\":\"sd-model\"}],69:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":75,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],70:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":78,\"./operation\":71,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],72:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":70}],73:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],74:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":73,\"./policy\":75,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],75:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":73}],76:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],77:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],78:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":76,\"./probability-value-validator\":77,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        this.objectiveRulesManager.updateDefaultWTP(data.defaultWTP);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../sensitivity-analysis/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../sensitivity-analysis/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {CalculateStep} from \"../../sensitivity-analysis/steps/calculate-step\";\nimport {JobComputationException} from \"../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult)\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {JobComputationException} from \"../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff');\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data=[]\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(this.validateSingleValue, this)) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value);\n        }\n\n        return true;\n    }\n\n    validateSingleValue(value) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name]));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            completedSteps--;\n        }\n\n        return Math.round(completedSteps * 100 / this.steps.length);\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/probabilistic-sensitivity-analysis/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n    flipPair = {};\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n\n        this.addFlipPair(minMax, maxMin);\n\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultWTP(defaultWTP){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultWTP(parseFloat(defaultWTP)));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            return e.computedValue(null, 'payoff');\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, 1, 0, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\nimport {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, 0, 1, expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {PoliciesCollector} from \"../../policies/policies-collector\";\nimport {Policy} from \"../../policies/policy\";\nimport {ExpectedValueMaximizationRule} from \"./expected-value-maximization-rule\";\nimport {ExpectedValueMinimizationRule} from \"./expected-value-minimization-rule\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule{\n\n    defaultWTP = 1;\n\n    minimizedPayoffIndex = 0;\n    maximizedPayoffIndex = 1;\n\n    constructor(name, minimizedPayoffIndex, maximizedPayoffIndex, expressionEngine){\n        super(name, true, expressionEngine, true);\n        this.minimizedPayoffIndex = minimizedPayoffIndex;\n        this.maximizedPayoffIndex = maximizedPayoffIndex;\n\n\n        this.minRule = new ExpectedValueMinimizationRule(this.expressionEngine);\n        this.minRule.setPayoffIndex(0);\n        this.minRule.name = '$min';\n\n        this.maxRule = new ExpectedValueMaximizationRule(this.expressionEngine);\n        this.maxRule.setPayoffIndex(1);\n        this.maxRule.name = '$max';\n\n    }\n\n    setDefaultWTP(defaultWTP){\n        this.defaultWTP = defaultWTP;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff=[0,0], aggregatedPayoff=[0,0]){\n        var childrenPayoff = [0,0];\n        if (node.childEdges.length) {\n            if(node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                if (this.decisionPolicy) {\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n                }else{\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach((e, i)=>{\n                        let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                        var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff  = this.cValue(e.childNode, 'combinedPayoff');\n                        if(childCombinedPayoff>bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        }else if(bestChild.equals(childCombinedPayoff)){\n                            selectedIndexes.push(i);\n                        }\n                    });\n                }\n\n                node.childEdges.forEach((e, i)=>{\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            }else{\n                node.childEdges.forEach(e=>{\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0 ;\n            node.childEdges.forEach(e=>{\n                sumweight=this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            node.childEdges.forEach(e=>{\n                childrenPayoff.forEach((p, i)=>{\n                    let ep = this.cValue(e.childNode, 'payoff['+i+']');\n                    childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                });\n            });\n\n        }\n        payoff.forEach((p, i)=>{\n            payoff[i]=this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', [0,0]); //initial value\n        }else{\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        if(this.defaultWTP === Infinity) {\n            this.cValue(node, 'combinedPayoff', payoff[this.maximizedPayoffIndex]);\n        }else{\n            this.cValue(node, 'combinedPayoff', this.subtract(this.multiply(this.defaultWTP, payoff[this.maximizedPayoffIndex]), payoff[this.minimizedPayoffIndex]));\n        }\n\n\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.cValue(node,'combinedPayoff'),combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n\n    //  payoff - parent edge payoff\n    computeOptimal2(node, probabilityToEnter=1){\n\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach((e, eIndex)=>{\n            if (!(node instanceof model.DecisionNode) || this.bestPolicies.some(policy=>{\n                    var decision = Policy.getDecision(policy, node);\n                    return decision && decision.decisionValue===eIndex;\n                })) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sd-computations.js","src/src/computations-engine.js","src/computations-manager.js","src/computations-utils.js","src/expressions-evaluator.js","src/index.js","src/jobs/configurations/league-table/league-table-job-parameters.js","src/jobs/configurations/league-table/league-table-job.js","src/jobs/configurations/league-table/steps/calculate-step.js","src/jobs/configurations/recompute/recompute-job-parameters.js","src/jobs/configurations/recompute/recompute-job.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/n-way/sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/n-way/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job-parameters.js","src/jobs/configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/compute-policy-stats-step.js","src/jobs/configurations/sensitivity-analysis/probabilistic/steps/prob-calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/calculate-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/init-policies-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/steps/prepare-variables-step.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job-parameters.js","src/jobs/configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job.js","src/jobs/engine/batch/batch-step.js","src/jobs/engine/exceptions/extendable-error.js","src/jobs/engine/exceptions/index.js","src/jobs/engine/exceptions/job-computation-exception.js","src/jobs/engine/exceptions/job-data-invalid-exception.js","src/jobs/engine/exceptions/job-execution-already-running-exception.js","src/jobs/engine/exceptions/job-instance-already-complete-exception.js","src/jobs/engine/exceptions/job-interrupted-exception.js","src/jobs/engine/exceptions/job-parameters-invalid-exception.js","src/jobs/engine/exceptions/job-restart-exception.js","src/jobs/engine/execution-context.js","src/jobs/engine/index.js","src/jobs/engine/job-execution-flag.js","src/jobs/engine/job-execution-listener.js","src/jobs/engine/job-execution.js","src/jobs/engine/job-instance.js","src/jobs/engine/job-key-generator.js","src/jobs/engine/job-launcher.js","src/jobs/engine/job-parameter-definition.js","src/jobs/engine/job-parameters.js","src/jobs/engine/job-repository/idb-job-repository.js","src/jobs/engine/job-repository/job-repository.js","src/jobs/engine/job-repository/simple-job-repository.js","src/jobs/engine/job-repository/timeout-job-repository.js","src/jobs/engine/job-result.js","src/jobs/engine/job-status.js","src/jobs/engine/job.js","src/jobs/engine/simple-job.js","src/jobs/engine/step-execution-listener.js","src/jobs/engine/step-execution.js","src/jobs/engine/step.js","src/jobs/index.js","src/jobs/job-instance-manager.js","src/jobs/job-worker.js","src/jobs/jobs-manager.js","src/objective/objective-rules-manager.js","src/objective/rules/expected-value-maximization-rule.js","src/objective/rules/expected-value-minimization-rule.js","src/objective/rules/index.js","src/objective/rules/max-max-rule.js","src/objective/rules/max-min-rule.js","src/objective/rules/maxi-max-rule.js","src/objective/rules/maxi-min-rule.js","src/objective/rules/min-max-rule.js","src/objective/rules/min-min-rule.js","src/objective/rules/mini-max-rule.js","src/objective/rules/mini-min-rule.js","src/objective/rules/multi-criteria-rule.js","src/objective/rules/objective-rule.js","src/operations/flip-subtree.js","src/operations/operation.js","src/operations/operations-manager.js","src/policies/decision.js","src/policies/policies-collector.js","src/policies/policy.js","src/validation/payoff-value-validator.js","src/validation/probability-value-validator.js","src/validation/tree-validator.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","self","idb","2","global","_classCallCheck","TypeError","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","ComputationsEngine","ComputationsEngineConfig","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_sdUtils","_sdModel","_computationsManager","_ComputationsManagerC","custom","_this","logLevel","Utils","deepExtend","ComputationsManagerConfig","_ComputationsManager","config","data","_this2","getGlobalObject","isWorker","jobsManger","registerJobExecutionListener","beforeJob","jobExecution","reply","getDTO","afterJob","queryableFunctions","runJob","jobName","jobParametersValues","dataDTO","DataModel","executeJob","jobExecutionId","execute","getErrorDTO","recompute","ruleName","evalCode","evalNumeric","objectiveRulesManager","setCurrentRuleByName","allRules","_checkValidityAndRecomputeObjective","onmessage","oEvent","hasOwnProperty","queryMethod","queryArguments","defaultReply","setLogLevel","level","log","setLevel","message","postMessage","queryMethodListener","queryMethodArguments","ComputationsManager","window","./computations-manager","sd-model","sd-utils","3","_sdExpressionEngine","_objectiveRulesManager","_treeValidator","_operationsManager","_jobsManager","_expressionsEvaluator","_jobInstanceManager","_policy","worker","delegateRecomputation","url","jobRepositoryType","clearRepository","setConfig","expressionEngine","ExpressionEngine","expressionsEvaluator","ExpressionsEvaluator","ObjectiveRulesManager","operationsManager","OperationsManager","JobsManager","workerUrl","repositoryType","treeValidator","TreeValidator","currentRule","reversePayoffs","tmp","weightLowerBound","flip","weightUpperBound","defaultCriterion1Weight","flipRule","checkValidityAndRecomputeObjective","Infinity","divide","getJobByName","jobParamsValues","resolvePromiseAfterJobIsLaunched","run","jobInstanceManagerConfig","je","JobInstanceManager","rules","getObjectiveRuleByName","isRuleName","operationsForObject","params","getCurrentRule","d","getData","updateFrom","updateDisplayValues","_this3","updateDefaultCriterion1Weight","validationResults","evalExpressions","getRoots","root","vr","validate","getAllNodesInSubtree","isValid","recomputeTree","every","_this4","policyToDisplay","displayPolicy","nodes","updateNodeDisplayValues","edges","updateEdgeDisplayValues","node","_this5","$DISPLAY_VALUE_NAMES","displayValue","getNodeDisplayValue","_this6","getEdgeDisplayValue","_this7","clearDisplayValues","displayPolicyForNode","policy","_this8","domain","DecisionNode","decision","Policy","getDecision","childEdge","childEdges","decisionValue","childNode","./expressions-evaluator","./jobs/job-instance-manager","./jobs/jobs-manager","./objective/objective-rules-manager","./operations/operations-manager","./policies/policy","./validation/tree-validator","sd-expression-engine","4","ComputationsUtils","min","max","extent","subtract","steps","step","curr","add","toFloat","5","clearComputedValues","initScopes","debug","evalGlobalCode","clearTree","evalExpressionsForNode","clearExpressionScope","$codeDirty","$codeError","eval","expressionScope","initScope","initScopeForNode","scope","probabilitySum","toNumber","hashEdges","invalidProb","payoff","rawPayoff","payoffIndex","path","isFieldValid","computedValue","evalPayoff","err","ChanceNode","isHash","probability","hasAssignmentExpression","warn","prob","computeHash","compare","hash","$parent","parentScope","cloneDeep","6","_computationsEngine","keys","./computations-engine","./jobs/index","7","LeagueTableJobParameters","_jobParameters","_jobParameterDefinition","_JobParameters","definitions","JobParameterDefinition","PARAMETER_TYPE","STRING","BOOLEAN","values","id","guid","nameOfCriterion1","nameOfCriterion2","extendedPolicyDescription","JobParameters","../../engine/job-parameter-definition","../../engine/job-parameters","8","LeagueTableJob","_simpleJob","_calculateStep","_leagueTableJobParameters","_SimpleJob","jobRepository","initSteps","calculateStep","CalculateStep","addStep","jobResult","jobParameters","withHeaders","headers","payoffNames","rows","row","policies","rowCells","toPolicyString","payoffs","dominatedBy","extendedDominatedBy","incratio","SimpleJob","../../../policies/policy","../../engine/simple-job","./league-table-job-parameters","./steps/calculate-step","9","_toConsumableArray","isArray","arr2","from","_step","_jobStatus","_policiesCollector","_Step","stepExecution","getJobParameters","rule","treeRoot","policiesCollector","PoliciesCollector","payoffCoeffs","b","map","sort","reduce","previousValue","currentValue","array","prev","_prev$policies","concat","bestCost","bestCostRow","cmp","prev2NotDominated","filter","computeICER","lastLELower","optimal","exitStatus","JOB_STATUS","COMPLETED","Math","abs","Step","../../../../policies/policies-collector","../../../../policies/policy","../../../../validation/tree-validator","../../../engine/job-status","../../../engine/step","10","RecomputeJobParameters","11","RecomputeJob","_recomputeJobParameters","_job","_Job","isRestartable","execution","Job","../../../validation/tree-validator","../../engine/batch/batch-step","../../engine/job","../../engine/job-status","../../engine/step","./recompute-job-parameters","12","SensitivityAnalysisJobParameters","NUMBER","INTEGER","v","isUnique","failOnInvalidTree","../../../engine/job-parameter-definition","../../../engine/job-parameters","13","SensitivityAnalysisJob","_sensitivityAnalysisJobParameters","_prepareVariablesStep","_initPoliciesStep","batchSize","PrepareVariablesStep","InitPoliciesStep","chunkSize","variableNames","roundVariables","policyIndex","variables","_variables","uniqueValues","Set","uniqueValuesNo","size","maxPrecision","precision","notReadyVariablesIndexes","variableIndex","notReadyIndex","round","newReadyIndexes","uniqueVals","origUniqueCount","reverse","splice","stepExecutions","total","current","getProgress","../../../engine/simple-job","./sensitivity-analysis-job-parameters","./steps/init-policies-step","./steps/prepare-variables-step","14","_batchStep","_jobComputationException","_BatchStep","getJobExecutionContext","variableValues","executionContext","put","startIndex","item","clear","variableName","valid","errorData","JobComputationException","isString","BatchStep","../../../../../policies/policy","../../../../../validation/tree-validator","../../../../engine/batch/batch-step","../../../../engine/exceptions/job-computation-exception","15","../../../../../policies/policies-collector","../../../../engine/job-status","../../../../engine/step","16","_computationsUtils","sequence","cartesianProductOf","../../../../../computations-utils","17","ProbabilisticSensitivityAnalysisJobParameters","NUMBER_EXPRESSION","18","ProbabilisticSensitivityAnalysisJob","_probabilisticSensitivityAnalysisJobParameters","_sensitivityAnalysisJob","_probCalculateStep","_computePolicyStatsStep","_SensitivityAnalysisJ","ProbCalculateStep","ComputePolicyStatsStep","../n-way/sensitivity-analysis-job","../n-way/steps/init-policies-step","./probabilistic-sensitivity-analysis-job-parameters","./steps/compute-policy-stats-step","./steps/prob-calculate-step","19","numberOfRuns","ruleByName","payoffsPerPolicy","maximization","medians","median","standardDeviations","std","policyIsBestProbabilities","policyToHighestPayoffCount","policyToLowestPayoffCount","20","_CalculateStep","expectedValues","fill","runIndex","singleRunVariableValues","errors","evaluated","formula","variable","currentItemCount","updatePolicyStats","highestPayoff","lowestPayoff","bestPolicyIndexes","worstPolicyIndexes","zeroNum","equals","../../n-way/steps/calculate-step","21","jobExecutionContext","defaultValues","forOwn","k","itemIndex","results","variableValue","policyByKey","itemsWrapper","cells","indexOf","22","getObjectByIdMap","23","24","TornadoDiagramJobParameters","25","TornadoDiagramJob","_tornadoDiagramJobParameters","./tornado-diagram-job-parameters","26","_jobInterruptedException","TOTAL_ITEM_COUNT_PROP","CURRENT_ITEM_COUNT_PROP","init","totalItemCount","setCurrentItemCount","getCurrentItemCount","setTotalItemCount","handleNextChunk","JobInterruptedException","postProcess","getTotalItemCount","checkJobExecutionFlags","terminateOnly","readNextChunk","chunk","processChunk","processedChunk","writeChunk","res","updateJobProgress","processItem","progress","jobInstance","updateJobExecutionProgress","checkExecutionFlags","../exceptions/job-interrupted-exception","../job-status","../step","27","ExtendableError","28","_extendableError","_jobDataInvalidException","_jobExecutionAlreadyRunningException","_jobInstanceAlreadyCompleteException","_jobParametersInvalidException","_jobRestartException","./extendable-error","./job-data-invalid-exception","./job-execution-already-running-exception","./job-instance-already-complete-exception","./job-interrupted-exception","./job-parameters-invalid-exception","./job-restart-exception","29","_ExtendableError","30","JobDataInvalidException","31","JobExecutionAlreadyRunningException","32","JobInstanceAlreadyCompleteException","33","34","JobParametersInvalidException","35","JobRestartException","36","ExecutionContext","context","dirty","clone","prevValue","dto","37","_interopRequireWildcard","__esModule","newObj","exceptions","_executionContext","_jobExecution","_jobExecutionFlag","_jobExecutionListener","_jobInstance","_jobKeyGenerator","_jobLauncher","_stepExecution","_stepExecutionListener","_exceptions","./exceptions","./execution-context","./job","./job-execution","./job-execution-flag","./job-execution-listener","./job-instance","./job-key-generator","./job-launcher","./job-parameter-definition","./job-parameters","./job-status","./simple-job","./step","./step-execution","./step-execution-listener","38","JOB_EXECUTION_FLAG","STOP","39","JobExecutionListener","40","JobExecution","status","STARTING","UNKNOWN","startTime","createTime","Date","endTime","lastUpdated","failureExceptions","stepName","StepExecution","STOPPING","se","filteredProperties","deepClone","cloneMethod","cloneDeepWith","cloneWith","assign","stack","41","JobInstance","42","JobKeyGenerator","identifying","43","JobLauncher","jobWorker","dataModelSerializer","jobOrName","job","createJobParameters","createJobExecution","executionPromise","_execute","getLastJobExecution","lastExecution","jobParametersValidator","jobDataValidator","jobExecutionOrId","getJobExecutionById","info","./exceptions/job-data-invalid-exception","./exceptions/job-parameters-invalid-exception","./exceptions/job-restart-exception","44","DATE","COMPOSITE","typeOrNestedParametersDefinitions","minOccurs","maxOccurs","singleValueValidator","validator","nestedParameters","required","type","allValues","validateSingleValue","isDate","isInt","isNumber","isObject","nestedDef","45","initDefinitions","initDefaultValues","def","_value","46","_interopRequireDefault","default","IdbJobRepository","_jobRepository","_idb","_idb2","ObjectStoreDao","_JobRepository","expressionsReviver","dbName","deleteDB","initDB","dbPromise","upgradeDB","jobExecutionsOS","unique","stepExecutionsOS","jobResultOS","jobInstanceDao","jobExecutionDao","jobExecutionProgressDao","jobExecutionFlagDao","stepExecutionDao","jobResultDao","_","generateJobInstanceKey","remove","findJobExecutions","jobExecutions","removeJobExecution","getJobResultByInstance","removeJobResult","findStepExecutions","removeStepExecution","jobResultId","getByIndex","reviveJobInstance","stepExecutionsDTOs","saveStepExecutionsDTOS","flag","savedExecutions","stepExecutionDTO","fetchJobExecutionRelations","jobExecutionDTO","_this9","revive","reviveJobExecution","jobExecutionDtoList","_this10","fetched","fetchJobExecutionsRelations","_this11","getAllByIndex","dtos","reviveStepExecution","_this12","fetchRelationsAndRevive","sorted","getTime","_this13","executions","latest","dataModel","loadFromDTO","setData","_this14","reviveExecutionContext","mergeWith","objValue","srcValue","source","stepDTO","JobRepository","_this15","indexName","_this16","_this17","_this18","tx","_this19","_this20","_this21","iterateKeyCursor","../execution-context","../job-execution","../job-instance","../step-execution","./job-repository","47","_jobResult","jobByName","saveJobInstance","getJobInstance","generateKey","isRunning","ABANDONED","createJobInstance","_setNewState","createStateSnapshot","all","instanceAndExecutionContext","saveJobExecution","getLastJobExecutionByInstance","saveStepExecution","JobResult","../exceptions/job-execution-already-running-exception","../exceptions/job-instance-already-complete-exception","../job-key-generator","../job-result","48","SimpleJobRepository","_ref","_temp","_ret","_len","_key","jobInstancesByKey","executionProgress","executionFlags","jobResults","ji","find","ex","49","TimeoutJobRepository","_simpleJobRepository","_SimpleJobRepository","valueToResolve","delay","setTimeout","createTimeoutPromise","./simple-job-repository","50","51","STARTED","STOPPED","FAILED","EXECUTING","52","executionListeners","getJobParametersValidator","getJobDataValidator","updateStatus","getResult","updateProgress","listener","doExecute","saveJobResult","update","getJobExecutionFlag","stop","./exceptions/job-interrupted-exception","./job-result","53","handleNextStep","lastExecutedStepExecution","_execution$failureExc","prevStep","prevStepExecution","stepIndex","handleStep","isStopping","getLastStepExecution","lastStepExecution","stepExecutionPartOfExistingJobExecution","currentStepExecution","shouldStart","createStepExecution","isCompleted","isRestart","skipExecution","skipOnRestartIfCompleted","containsKey","addStepExecution","_currentStepExecution","stepStatus","completedSteps","54","StepExecutionListener","55","56","beforeStep","determineJobStatus","afterStep","close","57","engine","_jobWorker","./engine/index","./job-worker","./jobs-manager","58","JobInstanceManagerConfig","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","updateInterval","_JobExecutionListener","jobInstanceOrExecution","checkProgress","lastJobExecution","terminated","getProgressPercents","lastUpdateTime","callbacksThisArg","deregisterJobExecutionListener","getProgressFromExecution","forceUpdate","terminate","./engine/job-execution-listener","./engine/job-instance","./engine/job-status","59","JobWorker","defaultListener","onError","listeners","Worker","deserializer","fn","thisArg","sendQuery","ruleNames","60","JobsManagerConfig","_idbJobRepository","_recomputeJob","_probabilisticSensitivityAnalysisJob","_timeoutJobRepository","_tornadoDiagramJob","_leagueTableJob","jobExecutionListeners","afterJobExecutionPromiseResolves","jobInstancesToTerminate","useWorker","initWorker","initRepository","registerJobs","jobLauncher","serializeData","getJsonReviver","serialize","getJsonReplacer","getJobExecutionProgress","saveJobExecutionFlag","removeJobInstance","_arguments","argsDeserializer","addListener","onJobFatalError","sensitivityAnalysisJob","probabilisticSensitivityAnalysisJob","setBatchSize","registerJob","registerExecutionListener","promiseResolve","./configurations/league-table/league-table-job","./configurations/recompute/recompute-job","./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job","./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job","./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job","./engine/job-execution-flag","./engine/job-launcher","./engine/job-parameters","./engine/job-repository/idb-job-repository","./engine/job-repository/simple-job-repository","./engine/job-repository/timeout-job-repository","61","_rules","model","_minMaxRule","_maxMinRule","_minMinRule","_maxMaxRule","currentRuleName","flipPair","addRule","ExpectedValueMaximizationRule","ExpectedValueMinimizationRule","MaxiMinRule","MaxiMaxRule","MiniMinRule","MiniMaxRule","minMax","MinMaxRule","maxMin","MaxMinRule","addFlipPair","minMin","MinMinRule","maxMax","MaxMaxRule","flipped","multiCriteria","setDefaultCriterion1Weight","parseFloat","decisionPolicy","trace","time","setPayoffIndex","setDecisionPolicy","computePayoff","computeOptimal","clearDecisionPolicy","parentNode","computedBaseProbability","rule1","rule2","./rules","./rules/max-max-rule","./rules/max-min-rule","./rules/min-max-rule","./rules/min-min-rule","62","_objectiveRule","_ObjectiveRule","NAME","probabilityToEnter","cValue","TerminalNode","computedPayoff","basePayoff","multiply","ObjectiveRule","./objective-rule","63","64","_expectedValueMaximizationRule","_expectedValueMinimizationRule","_maxiMaxRule","_maxiMinRule","_miniMaxRule","_miniMinRule","./expected-value-maximization-rule","./expected-value-minimization-rule","./maxi-max-rule","./maxi-min-rule","./mini-max-rule","./mini-min-rule","65","_multiCriteriaRule","_MultiCriteriaRule","MultiCriteriaRule","./multi-criteria-rule","66","67","bestChildPayoff","bestCount","worstChildPayoff","worstCount","optimalEdge","maxBy","isOptimal","68","minBy","69","70","71","72","73","criterion1Weight","aggregatedPayoff","childrenPayoff","selectedIndexes","bestChild","basePayoffs","childCombinedPayoff","baseProbability","sumweight","ep","div","computeCombinedPayoff","combinedPayoff","../../policies/policy","74","decisionNode","childrenPayoffs","best","makeDecision","_makeDecision","worstChild","childPayoff","modifyChanceProbability","fieldPath","edge","computedBasePayoff","75","FlipSubtree","_operation","_Operation","$NAME","isApplicable","grandchildrenEdgeLabelsSet","grandchildrenNumber","grandchildrenEdgeLabels","childrenEdgeLabelsSet","child","has","trim","ge","rootClone","cloneSubtree","oldChildrenNumber","oldGrandChildrenNumber","childrenNumber","grandChildrenNumber","callbacksDisabled","childX","location","x","topY","y","bottomY","extentY","stepY","removeNode","Point","addNode","j","grandChild","grandChildEdge","attachSubtree","divideGrandChildEdgeProbability","_normalizeProbabilitiesAfterFlip","_fireNodeAddedCallback","newProbabilitySum","cf","prec","parseInt","rest","Operation","../validation/tree-validator","./operation","76","77","_flipSubtree","operations","operationByName","registerOperation","operation","op","./flip-subtree","78","Decision","children","indent","toDecisionString","keyProperty","$id","extended","childrenRes","79","_decision","optimalForRuleName","collect","decisions","nodeQueue","decisionNodes","shift","childDecisions","cd","./decision","./policy","80","ignoreId","prependId","81","PayoffValueValidator","maxSafeInteger","Number","MAX_SAFE_INTEGER","82","ProbabilityValueValidator","83","_probabilityValueValidator","_payoffValueValidator","probabilityValueValidator","payoffValueValidator","validationResult","ValidationResult","validateNode","addError","setValueValidity","number","isNaN","./payoff-value-validator","./probability-value-validator","sd-computations","./src/index"],"mappings":"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","file":"sd-computations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsEngine = exports.ComputationsEngineConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _computationsManager = require(\"./computations-manager\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputationsEngineConfig = exports.ComputationsEngineConfig = function (_ComputationsManagerC) {\n    _inherits(ComputationsEngineConfig, _ComputationsManagerC);\n\n    function ComputationsEngineConfig(custom) {\n        _classCallCheck(this, ComputationsEngineConfig);\n\n        var _this = _possibleConstructorReturn(this, (ComputationsEngineConfig.__proto__ || Object.getPrototypeOf(ComputationsEngineConfig)).call(this));\n\n        _this.logLevel = 'warn';\n\n        if (custom) {\n            _sdUtils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return ComputationsEngineConfig;\n}(_computationsManager.ComputationsManagerConfig);\n\n//Entry point class for standalone computation workers\n\n\nvar ComputationsEngine = exports.ComputationsEngine = function (_ComputationsManager) {\n    _inherits(ComputationsEngine, _ComputationsManager);\n\n    function ComputationsEngine(config, data) {\n        _classCallCheck(this, ComputationsEngine);\n\n        var _this2 = _possibleConstructorReturn(this, (ComputationsEngine.__proto__ || Object.getPrototypeOf(ComputationsEngine)).call(this, config, data));\n\n        _this2.global = _sdUtils.Utils.getGlobalObject();\n        _this2.isWorker = _sdUtils.Utils.isWorker();\n\n        if (_this2.isWorker) {\n            _this2.jobsManger.registerJobExecutionListener({\n                beforeJob: function beforeJob(jobExecution) {\n                    _this2.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: function afterJob(jobExecution) {\n                    _this2.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = _this2;\n            _this2.queryableFunctions = {\n                runJob: function runJob(jobName, jobParametersValues, dataDTO) {\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function executeJob(jobExecutionId) {\n                    instance.jobsManger.execute(jobExecutionId).catch(function (e) {\n                        instance.reply('jobFatalError', jobExecutionId, _sdUtils.Utils.getErrorDTO(e));\n                    });\n                },\n                recompute: function recompute(dataDTO, ruleName, evalCode, evalNumeric) {\n                    if (ruleName) {\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new _sdModel.DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric);\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function (oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n        return _this2;\n    }\n\n    _createClass(ComputationsEngine, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            _get(ComputationsEngine.prototype.__proto__ || Object.getPrototypeOf(ComputationsEngine.prototype), \"setConfig\", this).call(this, config);\n            this.setLogLevel(this.config.logLevel);\n            return this;\n        }\n    }, {\n        key: \"setLogLevel\",\n        value: function setLogLevel(level) {\n            _sdUtils.log.setLevel(level);\n        }\n    }, {\n        key: \"defaultReply\",\n        value: function defaultReply(message) {\n            this.reply('test', message);\n        }\n    }, {\n        key: \"reply\",\n        value: function reply() {\n            if (arguments.length < 1) {\n                throw new TypeError('reply - not enough arguments');\n            }\n            this.global.postMessage({\n                'queryMethodListener': arguments[0],\n                'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }]);\n\n    return ComputationsEngine;\n}(_computationsManager.ComputationsManager);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./computations-manager\":3,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsManager = exports.ComputationsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectiveRulesManager = require(\"./objective/objective-rules-manager\");\n\nvar _treeValidator = require(\"./validation/tree-validator\");\n\nvar _operationsManager = require(\"./operations/operations-manager\");\n\nvar _jobsManager = require(\"./jobs/jobs-manager\");\n\nvar _expressionsEvaluator = require(\"./expressions-evaluator\");\n\nvar _jobInstanceManager = require(\"./jobs/job-instance-manager\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"./policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsManagerConfig = exports.ComputationsManagerConfig = function ComputationsManagerConfig(custom) {\n    _classCallCheck(this, ComputationsManagerConfig);\n\n    this.logLevel = null;\n    this.ruleName = null;\n    this.worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    this.jobRepositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar ComputationsManager = exports.ComputationsManager = function () {\n    function ComputationsManager(config) {\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        _classCallCheck(this, ComputationsManager);\n\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new _sdExpressionEngine.ExpressionEngine();\n        this.expressionsEvaluator = new _expressionsEvaluator.ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new _objectiveRulesManager.ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new _operationsManager.OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new _jobsManager.JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new _treeValidator.TreeValidator(this.expressionEngine);\n    }\n\n    _createClass(ComputationsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new ComputationsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"getCurrentRule\",\n        value: function getCurrentRule() {\n            return this.objectiveRulesManager.currentRule;\n        }\n    }, {\n        key: \"flipCriteria\",\n        value: function flipCriteria(data) {\n            data = data || this.data;\n            data.reversePayoffs();\n            var tmp = data.weightLowerBound;\n            data.weightLowerBound = this.flip(data.weightUpperBound);\n            data.weightUpperBound = this.flip(tmp);\n            data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n            this.objectiveRulesManager.flipRule();\n            return this.checkValidityAndRecomputeObjective(false);\n        }\n    }, {\n        key: \"flip\",\n        value: function flip(a) {\n            if (a == Infinity) {\n                return 0;\n            }\n\n            if (a == 0) {\n                return Infinity;\n            }\n\n            return _sdExpressionEngine.ExpressionEngine.divide(1, a);\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobsManger.getJobByName(jobName);\n        }\n    }, {\n        key: \"runJob\",\n        value: function runJob(name, jobParamsValues, data) {\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched);\n        }\n    }, {\n        key: \"runJobWithInstanceManager\",\n        value: function runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n            var _this = this;\n\n            return this.runJob(name, jobParamsValues).then(function (je) {\n                return new _jobInstanceManager.JobInstanceManager(_this.jobsManger, je, jobInstanceManagerConfig);\n            });\n        }\n    }, {\n        key: \"getObjectiveRules\",\n        value: function getObjectiveRules() {\n            return this.objectiveRulesManager.rules;\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.objectiveRulesManager.getObjectiveRuleByName(ruleName);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return this.objectiveRulesManager.isRuleName(ruleName);\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.config.ruleName = ruleName;\n            return this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operationsManager.operationsForObject(object);\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(allRules) {\n            var _this2 = this;\n\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            return Promise.resolve().then(function () {\n                if (_this2.config.worker.delegateRecomputation) {\n                    var params = {\n                        evalCode: evalCode,\n                        evalNumeric: evalNumeric\n                    };\n                    if (!allRules) {\n                        params.ruleName = _this2.getCurrentRule().name;\n                    }\n                    return _this2.runJob(\"recompute\", params, _this2.data, false).then(function (jobExecution) {\n                        var d = jobExecution.getData();\n                        _this2.data.updateFrom(d);\n                    });\n                }\n                return _this2._checkValidityAndRecomputeObjective(_this2.data, allRules, evalCode, evalNumeric);\n            }).then(function () {\n                _this2.updateDisplayValues(_this2.data);\n            });\n        }\n    }, {\n        key: \"_checkValidityAndRecomputeObjective\",\n        value: function _checkValidityAndRecomputeObjective(data, allRules) {\n            var _this3 = this;\n\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this3.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n\n        //Checks validity of data model without recomputation and revalidation\n\n    }, {\n        key: \"isValid\",\n        value: function isValid(data) {\n            var data = data || this.data;\n            return data.validationResults.every(function (vr) {\n                return vr.isValid();\n            });\n        }\n    }, {\n        key: \"updateDisplayValues\",\n        value: function updateDisplayValues(data) {\n            var _this4 = this;\n\n            var policyToDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            data = data || this.data;\n            if (policyToDisplay) {\n                return this.displayPolicy(data, policyToDisplay);\n            }\n\n            data.nodes.forEach(function (n) {\n                _this4.updateNodeDisplayValues(n);\n            });\n            data.edges.forEach(function (e) {\n                _this4.updateEdgeDisplayValues(e);\n            });\n        }\n    }, {\n        key: \"updateNodeDisplayValues\",\n        value: function updateNodeDisplayValues(node) {\n            var _this5 = this;\n\n            node.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return node.displayValue(n, _this5.objectiveRulesManager.getNodeDisplayValue(node, n));\n            });\n        }\n    }, {\n        key: \"updateEdgeDisplayValues\",\n        value: function updateEdgeDisplayValues(e) {\n            var _this6 = this;\n\n            e.$DISPLAY_VALUE_NAMES.forEach(function (n) {\n                return e.displayValue(n, _this6.objectiveRulesManager.getEdgeDisplayValue(e, n));\n            });\n        }\n    }, {\n        key: \"displayPolicy\",\n        value: function displayPolicy(policyToDisplay, data) {\n            var _this7 = this;\n\n            data = data || this.data;\n            data.nodes.forEach(function (n) {\n                n.clearDisplayValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearDisplayValues();\n            });\n            data.getRoots().forEach(function (root) {\n                return _this7.displayPolicyForNode(root, policyToDisplay);\n            });\n        }\n    }, {\n        key: \"displayPolicyForNode\",\n        value: function displayPolicyForNode(node, policy) {\n            var _this8 = this;\n\n            if (node instanceof _sdModel.domain.DecisionNode) {\n                var decision = _policy.Policy.getDecision(policy, node);\n                //console.log(decision, node, policy);\n                if (decision) {\n                    node.displayValue('optimal', true);\n                    var childEdge = node.childEdges[decision.decisionValue];\n                    childEdge.displayValue('optimal', true);\n                    return this.displayPolicyForNode(childEdge.childNode, policy);\n                }\n                return;\n            }\n\n            node.childEdges.forEach(function (e) {\n                return _this8.displayPolicyForNode(e.childNode, policy);\n            });\n        }\n    }]);\n\n    return ComputationsManager;\n}();\n\n},{\"./expressions-evaluator\":5,\"./jobs/job-instance-manager\":58,\"./jobs/jobs-manager\":60,\"./objective/objective-rules-manager\":61,\"./operations/operations-manager\":77,\"./policies/policy\":80,\"./validation/tree-validator\":83,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputationsUtils = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ComputationsUtils = exports.ComputationsUtils = function () {\n    function ComputationsUtils() {\n        _classCallCheck(this, ComputationsUtils);\n    }\n\n    _createClass(ComputationsUtils, null, [{\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = _sdExpressionEngine.ExpressionEngine.subtract(max, min);\n            var result = [min];\n            var steps = length - 1;\n            if (!steps) {\n                return result;\n            }\n            var step = _sdExpressionEngine.ExpressionEngine.divide(extent, length - 1);\n            var curr = min;\n            for (var i = 0; i < length - 2; i++) {\n                curr = _sdExpressionEngine.ExpressionEngine.add(curr, step);\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(curr));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return ComputationsUtils;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\"}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpressionsEvaluator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Evaluates code and expressions in trees*/\nvar ExpressionsEvaluator = exports.ExpressionsEvaluator = function () {\n    function ExpressionsEvaluator(expressionEngine) {\n        _classCallCheck(this, ExpressionsEvaluator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ExpressionsEvaluator, [{\n        key: 'clear',\n        value: function clear(data) {\n            data.nodes.forEach(function (n) {\n                n.clearComputedValues();\n            });\n            data.edges.forEach(function (e) {\n                e.clearComputedValues();\n            });\n        }\n    }, {\n        key: 'clearTree',\n        value: function clearTree(data, root) {\n            data.getAllNodesInSubtree(root).forEach(function (n) {\n                n.clearComputedValues();\n                n.childEdges.forEach(function (e) {\n                    e.clearComputedValues();\n                });\n            });\n        }\n    }, {\n        key: 'evalExpressions',\n        value: function evalExpressions(data) {\n            var evalCode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var _this = this;\n\n            var evalNumeric = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var initScopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            _sdUtils.log.debug('evalExpressions evalCode:' + evalCode + ' evalNumeric:' + evalNumeric);\n            if (evalCode) {\n                this.evalGlobalCode(data);\n            }\n\n            data.getRoots().forEach(function (n) {\n                _this.clearTree(data, n);\n                _this.evalExpressionsForNode(data, n, evalCode, evalNumeric, initScopes);\n            });\n        }\n    }, {\n        key: 'evalGlobalCode',\n        value: function evalGlobalCode(data) {\n            data.clearExpressionScope();\n            data.$codeDirty = false;\n            try {\n                data.$codeError = null;\n                this.expressionEngine.eval(data.code, false, data.expressionScope);\n            } catch (e) {\n                data.$codeError = e;\n            }\n        }\n    }, {\n        key: 'evalExpressionsForNode',\n        value: function evalExpressionsForNode(data, node) {\n            var evalCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var _this2 = this;\n\n            var evalNumeric = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var initScope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            if (!node.expressionScope || initScope || evalCode) {\n                this.initScopeForNode(data, node);\n            }\n            if (evalCode) {\n                node.$codeDirty = false;\n                if (node.code) {\n                    try {\n                        node.$codeError = null;\n                        this.expressionEngine.eval(node.code, false, node.expressionScope);\n                    } catch (e) {\n                        node.$codeError = e;\n                        _sdUtils.log.debug(e);\n                    }\n                }\n            }\n\n            if (evalNumeric) {\n                var scope = node.expressionScope;\n                var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n                var hashEdges = [];\n                var invalidProb = false;\n\n                node.childEdges.forEach(function (e) {\n                    e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                        var path = 'payoff[' + payoffIndex + ']';\n                        if (e.isFieldValid(path, true, false)) {\n                            try {\n                                e.computedValue(null, path, _this2.expressionEngine.evalPayoff(e, payoffIndex));\n                            } catch (err) {\n                                //   Left empty intentionally\n                            }\n                        }\n                    });\n\n                    if (node instanceof _sdModel.domain.ChanceNode) {\n                        if (_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            hashEdges.push(e);\n                            return;\n                        }\n\n                        if (_sdExpressionEngine.ExpressionEngine.hasAssignmentExpression(e.probability)) {\n                            //It should not occur here!\n                            _sdUtils.log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                            return null;\n                        }\n\n                        if (e.isFieldValid('probability', true, false)) {\n                            try {\n                                var prob = _this2.expressionEngine.eval(e.probability, true, scope);\n                                e.computedValue(null, 'probability', prob);\n                                probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, prob);\n                            } catch (err) {\n                                invalidProb = true;\n                            }\n                        } else {\n                            invalidProb = true;\n                        }\n                    }\n                });\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var computeHash = hashEdges.length && !invalidProb && probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0;\n\n                    if (computeHash) {\n                        var hash = _sdExpressionEngine.ExpressionEngine.divide(_sdExpressionEngine.ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                        hashEdges.forEach(function (e) {\n                            e.computedValue(null, 'probability', hash);\n                        });\n                    }\n                }\n\n                node.childEdges.forEach(function (e) {\n                    _this2.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n                });\n            }\n        }\n    }, {\n        key: 'initScopeForNode',\n        value: function initScopeForNode(data, node) {\n            var parent = node.$parent;\n            var parentScope = parent ? parent.expressionScope : data.expressionScope;\n            node.expressionScope = _sdUtils.Utils.cloneDeep(parentScope);\n        }\n    }]);\n\n    return ExpressionsEvaluator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _computationsEngine = require('./computations-engine');\n\nObject.keys(_computationsEngine).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsEngine[key];\n    }\n  });\n});\n\nvar _computationsManager = require('./computations-manager');\n\nObject.keys(_computationsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _computationsManager[key];\n    }\n  });\n});\n\nvar _expressionsEvaluator = require('./expressions-evaluator');\n\nObject.keys(_expressionsEvaluator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expressionsEvaluator[key];\n    }\n  });\n});\n\nvar _index = require('./jobs/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./computations-engine\":2,\"./computations-manager\":3,\"./expressions-evaluator\":5,\"./jobs/index\":57}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJobParameters = exports.LeagueTableJobParameters = function (_JobParameters) {\n    _inherits(LeagueTableJobParameters, _JobParameters);\n\n    function LeagueTableJobParameters() {\n        _classCallCheck(this, LeagueTableJobParameters);\n\n        return _possibleConstructorReturn(this, (LeagueTableJobParameters.__proto__ || Object.getPrototypeOf(LeagueTableJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(LeagueTableJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            // this.definitions.push(new JobParameterDefinition(\"weightLowerBound\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['weightUpperBound']));\n            // this.definitions.push(new JobParameterDefinition(\"weightUpperBound\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['weightLowerBound']));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                nameOfCriterion1: 'Cost',\n                nameOfCriterion2: 'Effect',\n                extendedPolicyDescription: true,\n                weightLowerBound: 0,\n                weightUpperBound: Infinity\n            };\n        }\n    }]);\n\n    return LeagueTableJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LeagueTableJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _policy = require(\"../../../policies/policy\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _leagueTableJobParameters = require(\"./league-table-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LeagueTableJob = exports.LeagueTableJob = function (_SimpleJob) {\n    _inherits(LeagueTableJob, _SimpleJob);\n\n    function LeagueTableJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, LeagueTableJob);\n\n        var _this = _possibleConstructorReturn(this, (LeagueTableJob.__proto__ || Object.getPrototypeOf(LeagueTableJob)).call(this, \"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(LeagueTableJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _leagueTableJobParameters.LeagueTableJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio'];\n                result.push(headers);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                row.policies.forEach(function (policy) {\n                    var rowCells = [row.id, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription), row.payoffs[1], row.payoffs[0], row.dominatedBy, row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1], row.incratio];\n                    result.push(rowCells);\n                });\n            });\n\n            return result;\n        }\n    }]);\n\n    return LeagueTableJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../policies/policy\":80,\"../../engine/simple-job\":53,\"./league-table-job-parameters\":7,\"./steps/calculate-step\":9,\"sd-expression-engine\":\"sd-expression-engine\"}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../engine/step\");\n\nvar _jobStatus = require(\"../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../policies/policies-collector\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _treeValidator = require(\"../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_Step) {\n    _inherits(CalculateStep, _Step);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var rule = this.objectiveRulesManager.currentRule;\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n\n            var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n            this.expressionsEvaluator.evalExpressions(data);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            if (!vr.isValid()) {\n                return stepExecution;\n            }\n\n            var compare = function compare(a, b) {\n                return -payoffCoeffs[0] * (b.payoffs[0] - a.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            };\n\n            var rows = policies.map(function (policy) {\n                _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                return {\n                    policies: [policy],\n                    payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                    dominatedBy: null,\n                    extendedDominatedBy: null,\n                    incratio: null\n                };\n            }).sort(compare);\n\n            rows = rows.reduce(function (previousValue, currentValue, index, array) {\n                if (!previousValue.length) {\n                    return [currentValue];\n                }\n\n                var prev = previousValue[previousValue.length - 1];\n                if (compare(prev, currentValue) == 0) {\n                    var _prev$policies;\n\n                    (_prev$policies = prev.policies).push.apply(_prev$policies, _toConsumableArray(currentValue.policies));\n                    return previousValue;\n                }\n                return previousValue.concat(currentValue);\n            }, []);\n\n            rows.sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n            rows.forEach(function (r, i) {\n                r.id = i + 1;\n            });\n            // rows.sort(compare);\n            rows.sort(function (a, b) {\n                return -payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]) || -payoffCoeffs[1] * (a.payoffs[1] - b.payoffs[1]);\n            });\n\n            var bestCost = -payoffCoeffs[1] * Infinity,\n                bestCostRow = null;\n\n            var cmp = function cmp(a, b) {\n                return a > b;\n            };\n            if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            }\n\n            rows.forEach(function (r, i) {\n                if (cmp(r.payoffs[1], bestCost)) {\n                    bestCost = r.payoffs[1];\n                    bestCostRow = r;\n                } else if (bestCostRow) {\n                    r.dominatedBy = bestCostRow.id;\n                }\n            });\n\n            cmp = function cmp(a, b) {\n                return a < b;\n            };\n            if (payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0) {\n                cmp = function cmp(a, b) {\n                    return a < b;\n                };\n            } else if (payoffCoeffs[1] < 0) {\n                cmp = function cmp(a, b) {\n                    return a > b;\n                };\n            }\n\n            var prev2NotDominated = null;\n            rows.filter(function (r) {\n                return !r.dominatedBy;\n            }).sort(function (a, b) {\n                return payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]);\n            }).forEach(function (r, i, arr) {\n                if (i == 0) {\n                    r.incratio = 0;\n                    return;\n                }\n\n                var prev = arr[i - 1];\n\n                r.incratio = _this2.computeICER(r, prev);\n                if (i < 2) {\n                    return;\n                }\n\n                if (!prev2NotDominated) {\n                    prev2NotDominated = arr[i - 2];\n                }\n\n                if (cmp(r.incratio, prev.incratio)) {\n                    prev.incratio = null;\n                    prev.extendedDominatedBy = [prev2NotDominated.id, r.id];\n                    r.incratio = _this2.computeICER(r, prev2NotDominated);\n                } else {\n                    prev2NotDominated = prev;\n                }\n            });\n\n            var weightLowerBound = data.weightLowerBound !== Infinity ? _sdExpressionEngine.ExpressionEngine.toNumber(data.weightLowerBound) : data.weightLowerBound;\n            var weightUpperBound = data.weightUpperBound !== Infinity ? _sdExpressionEngine.ExpressionEngine.toNumber(data.weightUpperBound) : data.weightUpperBound;\n            //mark optimal for weight in [weightLowerBound, weightUpperBound]\n            var lastLELower = null;\n            rows.slice().filter(function (r) {\n                return !r.dominatedBy && !r.extendedDominatedBy;\n            }).sort(function (a, b) {\n                return a.incratio - b.incratio;\n            }).forEach(function (row, i, arr) {\n\n                if (row.incratio <= weightLowerBound) {\n                    lastLELower = row;\n                } else if (row.incratio == weightLowerBound) {\n                    lastLELower = null;\n                }\n\n                row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n            });\n            if (lastLELower) {\n                lastLELower.optimal = true;\n            }\n\n            rows.forEach(function (row) {\n                row.payoffs[0] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[0]);\n                row.payoffs[1] = _sdExpressionEngine.ExpressionEngine.toFloat(row.payoffs[1]);\n                row.incratio = row.incratio === null ? null : _sdExpressionEngine.ExpressionEngine.toFloat(row.incratio);\n            });\n\n            jobResult.data = {\n                payoffNames: data.payoffNames.slice(),\n                payoffCoeffs: payoffCoeffs,\n                rows: rows.sort(function (a, b) {\n                    return a.id - b.id;\n                })\n            };\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"computeICER\",\n        value: function computeICER(r, prev) {\n            var d = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n            var n = _sdExpressionEngine.ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n            if (d == 0) {\n                if (n < 0) {\n                    return -Infinity;\n                }\n                return Infinity;\n            }\n            return Math.abs(_sdExpressionEngine.ExpressionEngine.divide(n, d));\n        }\n    }]);\n\n    return CalculateStep;\n}(_step.Step);\n\n},{\"../../../../policies/policies-collector\":79,\"../../../../policies/policy\":80,\"../../../../validation/tree-validator\":83,\"../../../engine/job-status\":51,\"../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\"}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJobParameters = exports.RecomputeJobParameters = function (_JobParameters) {\n    _inherits(RecomputeJobParameters, _JobParameters);\n\n    function RecomputeJobParameters() {\n        _classCallCheck(this, RecomputeJobParameters);\n\n        return _possibleConstructorReturn(this, (RecomputeJobParameters.__proto__ || Object.getPrototypeOf(RecomputeJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(RecomputeJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 0));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalCode\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"evalNumeric\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                ruleName: null, //recompute all rules\n                evalCode: true,\n                evalNumeric: true\n            };\n        }\n    }]);\n\n    return RecomputeJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../engine/job-parameter-definition\":44,\"../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RecomputeJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../engine/simple-job\");\n\nvar _step = require(\"../../engine/step\");\n\nvar _jobStatus = require(\"../../engine/job-status\");\n\nvar _treeValidator = require(\"../../../validation/tree-validator\");\n\nvar _batchStep = require(\"../../engine/batch/batch-step\");\n\nvar _recomputeJobParameters = require(\"./recompute-job-parameters\");\n\nvar _job = require(\"../../engine/job\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RecomputeJob = exports.RecomputeJob = function (_Job) {\n    _inherits(RecomputeJob, _Job);\n\n    function RecomputeJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, RecomputeJob);\n\n        var _this = _possibleConstructorReturn(this, (RecomputeJob.__proto__ || Object.getPrototypeOf(RecomputeJob)).call(this, \"recompute\", jobRepository));\n\n        _this.isRestartable = false;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(RecomputeJob, [{\n        key: \"doExecute\",\n        value: function doExecute(execution) {\n            var data = execution.getData();\n            var params = execution.jobParameters;\n            var ruleName = params.value(\"ruleName\");\n            var allRules = !ruleName;\n            if (ruleName) {\n                this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            }\n            this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"));\n            return execution;\n        }\n    }, {\n        key: \"checkValidityAndRecomputeObjective\",\n        value: function checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n            var _this2 = this;\n\n            data.validationResults = [];\n\n            if (evalCode || evalNumeric) {\n                this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n            }\n\n            data.getRoots().forEach(function (root) {\n                var vr = _this2.treeValidator.validate(data.getAllNodesInSubtree(root));\n                data.validationResults.push(vr);\n                if (vr.isValid()) {\n                    _this2.objectiveRulesManager.recomputeTree(root, allRules);\n                }\n            });\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _recomputeJobParameters.RecomputeJobParameters(values);\n        }\n    }]);\n\n    return RecomputeJob;\n}(_job.Job);\n\n},{\"../../../validation/tree-validator\":83,\"../../engine/batch/batch-step\":26,\"../../engine/job\":52,\"../../engine/job-status\":51,\"../../engine/simple-job\":53,\"../../engine/step\":56,\"./recompute-job-parameters\":10}],12:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJobParameters = exports.SensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(SensitivityAnalysisJobParameters, _JobParameters);\n\n    function SensitivityAnalysisJobParameters() {\n        _classCallCheck(this, SensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (SensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(SensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 2;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] < v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return SensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],13:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _sensitivityAnalysisJobParameters = require(\"./sensitivity-analysis-job-parameters\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _policy = require(\"../../../../policies/policy\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SensitivityAnalysisJob = exports.SensitivityAnalysisJob = function (_SimpleJob) {\n    _inherits(SensitivityAnalysisJob, _SimpleJob);\n\n    function SensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, SensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (SensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(SensitivityAnalysisJob)).call(this, \"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager));\n\n        _this.batchSize = 5;\n        _this.initSteps();\n        return _this;\n    }\n\n    _createClass(SensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _prepareVariablesStep.PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _calculateStep.CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _sensitivityAnalysisJobParameters.SensitivityAnalysisJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n    }, {\n        key: \"setBatchSize\",\n        value: function setBatchSize(batchSize) {\n            this.batchSize = batchSize;\n            this.calculateStep.chunkSize = batchSize;\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            var withHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var result = [];\n            if (withHeaders) {\n                var headers = ['policy_number', 'policy'];\n                jobResult.variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                result.push(headers);\n            }\n\n            var roundVariables = !!jobParameters.values.roundVariables;\n            if (roundVariables) {\n                this.roundVariables(jobResult);\n            }\n\n            jobResult.rows.forEach(function (row) {\n                var policy = jobResult.policies[row.policyIndex];\n                var rowCells = [row.policyIndex + 1, _policy.Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n                row.variables.forEach(function (v) {\n                    return rowCells.push(v);\n                });\n                rowCells.push(row.payoff);\n                result.push(rowCells);\n\n                if (row._variables) {\n                    //revert original variables\n                    row.variables = row._variables;\n                    delete row._variables;\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"roundVariables\",\n        value: function roundVariables(jobResult) {\n            var uniqueValues = jobResult.variableNames.map(function () {\n                return new Set();\n            });\n\n            jobResult.rows.forEach(function (row) {\n                row._variables = row.variables.slice(); // save original row variables\n                row.variables.forEach(function (v, i) {\n                    uniqueValues[i].add(v);\n                });\n            });\n\n            var uniqueValuesNo = uniqueValues.map(function (s) {\n                return s.size;\n            });\n            var maxPrecision = 14;\n            var precision = 2;\n            var notReadyVariablesIndexes = jobResult.variableNames.map(function (v, i) {\n                return i;\n            });\n            while (precision <= maxPrecision && notReadyVariablesIndexes.length) {\n                uniqueValues = notReadyVariablesIndexes.map(function () {\n                    return new Set();\n                });\n                jobResult.rows.forEach(function (row) {\n                    notReadyVariablesIndexes.forEach(function (variableIndex, notReadyIndex) {\n\n                        var val = row._variables[variableIndex];\n                        val = _sdUtils.Utils.round(val, precision);\n                        uniqueValues[notReadyIndex].add(val);\n\n                        row.variables[variableIndex] = val;\n                    });\n                });\n\n                var newReadyIndexes = [];\n                uniqueValues.forEach(function (uniqueVals, notReadyIndex) {\n                    var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]];\n                    if (origUniqueCount == uniqueVals.size) {\n                        //ready in previous iteration\n                        newReadyIndexes.push(notReadyIndex);\n                    }\n                });\n                if (newReadyIndexes.length) {\n                    //revert values to prev iteration\n                    newReadyIndexes.reverse();\n                    newReadyIndexes.forEach(function (notReadyIndex) {\n                        notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                    });\n                }\n                precision++;\n            }\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return SensitivityAnalysisJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../../policies/policy\":80,\"../../../engine/simple-job\":53,\"./sensitivity-analysis-job-parameters\":12,\"./steps/calculate-step\":14,\"./steps/init-policies-step\":15,\"./steps/prepare-variables-step\":16,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],14:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, batchSize));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobResult.data.variableValues;\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var variableValues = jobResult.data.variableValues;\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n            variableNames.forEach(function (variableName, i) {\n                data.expressionScope[variableName] = item[i];\n            });\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n            var valid = vr.isValid();\n\n            if (!valid && failOnInvalidTree) {\n                var errorData = {\n                    variables: {}\n                };\n                variableNames.forEach(function (variableName, i) {\n                    errorData.variables[variableName] = item[i];\n                });\n                throw new _jobComputationException.JobComputationException(\"computations\", errorData);\n            }\n\n            var payoffs = [];\n\n            policies.forEach(function (policy) {\n                var payoff = 'n/a';\n                if (valid) {\n                    _this2.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                    payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n                }\n                payoffs.push(payoff);\n            });\n\n            return {\n                policies: policies,\n                variables: item,\n                payoffs: payoffs\n            };\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n            items.forEach(function (item) {\n                if (!item) {\n                    return;\n                }\n                item.policies.forEach(function (policy, i) {\n                    var variables = item.variables.map(function (v) {\n                        return _this3.toFloat(v);\n                    });\n\n                    var payoff = item.payoffs[i];\n                    var row = {\n                        policyIndex: i,\n                        variables: variables,\n                        payoff: _sdUtils.Utils.isString(payoff) ? payoff : _this3.toFloat(payoff)\n                    };\n                    jobResult.data.rows.push(row);\n                });\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            delete jobResult.data.variableValues;\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policy\":80,\"../../../../../validation/tree-validator\":83,\"../../../../engine/batch/batch-step\":26,\"../../../../engine/exceptions/job-computation-exception\":29,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],15:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            var policies = policiesCollector.policies;\n            stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n            if (!jobResult.data) {\n                jobResult.data = {};\n            }\n\n            jobResult.data.policies = policies;\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56}],16:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _computationsUtils = require(\"../../../../../computations-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository, expressionEngine) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        var _this = _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        return _this;\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_computationsUtils.ComputationsUtils.sequence(v.min, v.max, v.length));\n            });\n            variableValues = _sdUtils.Utils.cartesianProductOf(variableValues);\n            jobResult.data = {\n                variableValues: variableValues\n            };\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../../computations-utils\":4,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],17:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJobParameters = exports.ProbabilisticSensitivityAnalysisJobParameters = function (_JobParameters) {\n    _inherits(ProbabilisticSensitivityAnalysisJobParameters, _JobParameters);\n\n    function ProbabilisticSensitivityAnalysisJobParameters() {\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJobParameters);\n\n        return _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJobParameters.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"failOnInvalidTree\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"extendedPolicyDescription\", _jobParameterDefinition.PARAMETER_TYPE.BOOLEAN));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"numberOfRuns\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v > 0;\n            }));\n\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"formula\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER_EXPRESSION)], 1, Infinity, false, null, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid(),\n                extendedPolicyDescription: true,\n                failOnInvalidTree: true\n            };\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],18:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilisticSensitivityAnalysisJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _probabilisticSensitivityAnalysisJobParameters = require(\"./probabilistic-sensitivity-analysis-job-parameters\");\n\nvar _initPoliciesStep = require(\"../n-way/steps/init-policies-step\");\n\nvar _sensitivityAnalysisJob = require(\"../n-way/sensitivity-analysis-job\");\n\nvar _probCalculateStep = require(\"./steps/prob-calculate-step\");\n\nvar _computePolicyStatsStep = require(\"./steps/compute-policy-stats-step\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbabilisticSensitivityAnalysisJob = exports.ProbabilisticSensitivityAnalysisJob = function (_SensitivityAnalysisJ) {\n    _inherits(ProbabilisticSensitivityAnalysisJob, _SensitivityAnalysisJ);\n\n    function ProbabilisticSensitivityAnalysisJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        var batchSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n        _classCallCheck(this, ProbabilisticSensitivityAnalysisJob);\n\n        var _this = _possibleConstructorReturn(this, (ProbabilisticSensitivityAnalysisJob.__proto__ || Object.getPrototypeOf(ProbabilisticSensitivityAnalysisJob)).call(this, jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize));\n\n        _this.name = \"probabilistic-sensitivity-analysis\";\n        return _this;\n    }\n\n    _createClass(ProbabilisticSensitivityAnalysisJob, [{\n        key: \"initSteps\",\n        value: function initSteps() {\n            this.addStep(new _initPoliciesStep.InitPoliciesStep(this.jobRepository));\n            this.calculateStep = new _probCalculateStep.ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n            this.addStep(this.calculateStep);\n            this.addStep(new _computePolicyStatsStep.ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _probabilisticSensitivityAnalysisJobParameters.ProbabilisticSensitivityAnalysisJobParameters(values);\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 1) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[1].getProgress(execution.stepExecutions[1]);\n        }\n    }]);\n\n    return ProbabilisticSensitivityAnalysisJob;\n}(_sensitivityAnalysisJob.SensitivityAnalysisJob);\n\n},{\"../n-way/sensitivity-analysis-job\":13,\"../n-way/steps/init-policies-step\":15,\"./probabilistic-sensitivity-analysis-job-parameters\":17,\"./steps/compute-policy-stats-step\":19,\"./steps/prob-calculate-step\":20}],19:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ComputePolicyStatsStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComputePolicyStatsStep = exports.ComputePolicyStatsStep = function (_Step) {\n    _inherits(ComputePolicyStatsStep, _Step);\n\n    function ComputePolicyStatsStep(expressionEngine, objectiveRulesManager, jobRepository) {\n        _classCallCheck(this, ComputePolicyStatsStep);\n\n        var _this = _possibleConstructorReturn(this, (ComputePolicyStatsStep.__proto__ || Object.getPrototypeOf(ComputePolicyStatsStep)).call(this, \"compute_policy_stats\", jobRepository));\n\n        _this.expressionEngine = expressionEngine;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        return _this;\n    }\n\n    _createClass(ComputePolicyStatsStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var ruleName = params.value(\"ruleName\");\n\n            var rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n            var payoffsPerPolicy = jobResult.data.policies.map(function () {\n                return [];\n            });\n\n            jobResult.data.rows.forEach(function (row) {\n                payoffsPerPolicy[row.policyIndex].push(_sdUtils.Utils.isString(row.payoff) ? 0 : row.payoff);\n            });\n\n            _sdUtils.log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n            jobResult.data.medians = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.median(payoffs);\n            });\n            jobResult.data.standardDeviations = payoffsPerPolicy.map(function (payoffs) {\n                return _sdExpressionEngine.ExpressionEngine.std(payoffs);\n            });\n\n            if (rule.maximization) {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            } else {\n                jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                    return _sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.divide(v, numberOfRuns));\n                });\n            }\n\n            jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n            jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(function (v) {\n                return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n            });\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return ComputePolicyStatsStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],20:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbCalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _calculateStep = require(\"../../n-way/steps/calculate-step\");\n\nvar _jobComputationException = require(\"../../../../engine/exceptions/job-computation-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ProbCalculateStep = exports.ProbCalculateStep = function (_CalculateStep) {\n    _inherits(ProbCalculateStep, _CalculateStep);\n\n    function ProbCalculateStep() {\n        _classCallCheck(this, ProbCalculateStep);\n\n        return _possibleConstructorReturn(this, (ProbCalculateStep.__proto__ || Object.getPrototypeOf(ProbCalculateStep)).apply(this, arguments));\n    }\n\n    _createClass(ProbCalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n            if (!jobResult.data.rows) {\n                jobResult.data.rows = [];\n                jobResult.data.variableNames = variableNames;\n                jobResult.data.expectedValues = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToHighestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n                jobResult.data.policyToLowestPayoffCount = _sdUtils.Utils.fill(new Array(jobResult.data.policies.length), 0);\n            }\n\n            return params.value(\"numberOfRuns\");\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n            var data = stepExecution.getData();\n            var variableValues = [];\n            for (var runIndex = 0; runIndex < chunkSize; runIndex++) {\n                var singleRunVariableValues = [];\n                var errors = [];\n                variables.forEach(function (v) {\n                    try {\n                        var evaluated = _this2.expressionsEvaluator.expressionEngine.eval(v.formula, true, _sdUtils.Utils.cloneDeep(data.expressionScope));\n                        singleRunVariableValues.push(_sdExpressionEngine.ExpressionEngine.toFloat(evaluated));\n                    } catch (e) {\n                        errors.push({\n                            variable: v,\n                            error: e\n                        });\n                    }\n                });\n                if (errors.length) {\n                    var errorData = { variables: [] };\n                    errors.forEach(function (e) {\n                        errorData.variables[e.variable.name] = e.error.message;\n                    });\n                    throw new _jobComputationException.JobComputationException(\"param-computation\", errorData);\n                }\n                variableValues.push(singleRunVariableValues);\n            }\n\n            return variableValues;\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            var r = _get(ProbCalculateStep.prototype.__proto__ || Object.getPrototypeOf(ProbCalculateStep.prototype), \"processItem\", this).call(this, stepExecution, item, jobResult);\n\n            var params = stepExecution.getJobParameters();\n            var numberOfRuns = params.value(\"numberOfRuns\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n            return r;\n        }\n    }, {\n        key: \"updatePolicyStats\",\n        value: function updatePolicyStats(r, policies, numberOfRuns, jobResult) {\n            var highestPayoff = -Infinity;\n            var lowestPayoff = Infinity;\n            var bestPolicyIndexes = [];\n            var worstPolicyIndexes = [];\n\n            var zeroNum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n\n            policies.forEach(function (policy, i) {\n                var payoff = r.payoffs[i];\n                if (_sdUtils.Utils.isString(payoff)) {\n                    payoff = zeroNum;\n                }\n                if (payoff < lowestPayoff) {\n                    lowestPayoff = payoff;\n                    worstPolicyIndexes = [i];\n                } else if (payoff.equals(lowestPayoff)) {\n                    worstPolicyIndexes.push(i);\n                }\n                if (payoff > highestPayoff) {\n                    highestPayoff = payoff;\n                    bestPolicyIndexes = [i];\n                } else if (payoff.equals(highestPayoff)) {\n                    bestPolicyIndexes.push(i);\n                }\n\n                jobResult.data.expectedValues[i] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.expectedValues[i], _sdExpressionEngine.ExpressionEngine.divide(payoff, numberOfRuns));\n            });\n\n            bestPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToHighestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, bestPolicyIndexes.length));\n            });\n\n            worstPolicyIndexes.forEach(function (policyIndex) {\n                jobResult.data.policyToLowestPayoffCount[policyIndex] = _sdExpressionEngine.ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], _sdExpressionEngine.ExpressionEngine.divide(1, worstPolicyIndexes.length));\n            });\n        }\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {\n            var _this3 = this;\n\n            jobResult.data.expectedValues = jobResult.data.expectedValues.map(function (v) {\n                return _this3.toFloat(v);\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return ProbCalculateStep;\n}(_calculateStep.CalculateStep);\n\n},{\"../../../../engine/exceptions/job-computation-exception\":29,\"../../n-way/steps/calculate-step\":14,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],21:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CalculateStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _batchStep = require(\"../../../../engine/batch/batch-step\");\n\nvar _treeValidator = require(\"../../../../../validation/tree-validator\");\n\nvar _policy = require(\"../../../../../policies/policy\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CalculateStep = exports.CalculateStep = function (_BatchStep) {\n    _inherits(CalculateStep, _BatchStep);\n\n    function CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, CalculateStep);\n\n        var _this = _possibleConstructorReturn(this, (CalculateStep.__proto__ || Object.getPrototypeOf(CalculateStep)).call(this, \"calculate_step\", jobRepository, 1));\n\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n        _this.treeValidator = new _treeValidator.TreeValidator();\n        return _this;\n    }\n\n    _createClass(CalculateStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            var _this2 = this;\n\n            var jobExecutionContext = stepExecution.getJobExecutionContext();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n            var variableValues = jobExecutionContext.get(\"variableValues\");\n            var variableNames = params.value(\"variables\").map(function (v) {\n                return v.name;\n            });\n            stepExecution.executionContext.put(\"variableNames\", variableNames);\n            var data = stepExecution.getData();\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            var defaultValues = {};\n            _sdUtils.Utils.forOwn(data.expressionScope, function (v, k) {\n                defaultValues[k] = _this2.toFloat(v);\n            });\n\n            if (!jobResult.data) {\n                var headers = ['policy'];\n                variableNames.forEach(function (n) {\n                    return headers.push(n);\n                });\n                headers.push('payoff');\n                jobResult.data = {\n                    headers: headers,\n                    rows: [],\n                    variableNames: variableNames,\n                    defaultValues: defaultValues,\n                    policies: jobExecutionContext.get(\"policies\")\n                };\n            }\n\n            return variableValues.length;\n        }\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize) {\n            var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n            return variableValues.slice(startIndex, startIndex + chunkSize);\n        }\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, itemIndex) {\n            var _this3 = this;\n\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var data = stepExecution.getData();\n            var treeRoot = data.getRoots()[0];\n            var variableNames = stepExecution.executionContext.get(\"variableNames\");\n            var variableName = variableNames[itemIndex];\n\n            var results = [];\n\n            item.forEach(function (variableValue) {\n\n                _this3.expressionsEvaluator.clear(data);\n                _this3.expressionsEvaluator.evalGlobalCode(data);\n\n                data.expressionScope[variableName] = variableValue;\n\n                _this3.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n                var vr = _this3.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n                var valid = vr.isValid();\n\n                if (!valid) {\n                    return null;\n                }\n\n                _this3.objectiveRulesManager.recomputeTree(treeRoot, false);\n                var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot, ruleName);\n                var policies = policiesCollector.policies;\n\n                var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n                var r = {\n                    policies: policies,\n                    variableName: variableName,\n                    variableIndex: itemIndex,\n                    variableValue: variableValue,\n                    payoff: payoff\n                };\n                results.push(r);\n            });\n\n            return results;\n        }\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {\n            var _this4 = this;\n\n            var params = stepExecution.getJobParameters();\n\n            var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n            var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n            items.forEach(function (itemsWrapper) {\n                if (!itemsWrapper) {\n                    return;\n                }\n\n                itemsWrapper.forEach(function (item) {\n                    item.policies.forEach(function (policy) {\n\n                        var rowCells = [_policy.Policy.toPolicyString(policy)];\n                        jobResult.data.variableNames.forEach(function (v) {\n                            var value = \"default\";\n                            if (v == item.variableName) {\n                                value = _this4.toFloat(item.variableValue);\n                            } else if (jobResult.data.defaultValues.hasOwnProperty(v)) {\n                                value = jobResult.data.defaultValues[v];\n                            }\n                            rowCells.push(value);\n                        });\n                        var payoff = item.payoff;\n                        rowCells.push(_sdUtils.Utils.isString(payoff) ? payoff : _this4.toFloat(payoff));\n                        var row = {\n                            cells: rowCells,\n                            policyIndex: policies.indexOf(policyByKey[policy.key])\n                        };\n                        jobResult.data.rows.push(row);\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"toFloat\",\n        value: function toFloat(v) {\n            return _sdExpressionEngine.ExpressionEngine.toFloat(v);\n        }\n    }]);\n\n    return CalculateStep;\n}(_batchStep.BatchStep);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../../policies/policy\":80,\"../../../../../validation/tree-validator\":83,\"../../../../engine/batch/batch-step\":26,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],22:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InitPoliciesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _policiesCollector = require(\"../../../../../policies/policies-collector\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InitPoliciesStep = exports.InitPoliciesStep = function (_Step) {\n    _inherits(InitPoliciesStep, _Step);\n\n    function InitPoliciesStep(jobRepository) {\n        _classCallCheck(this, InitPoliciesStep);\n\n        return _possibleConstructorReturn(this, (InitPoliciesStep.__proto__ || Object.getPrototypeOf(InitPoliciesStep)).call(this, \"init_policies\", jobRepository));\n    }\n\n    _createClass(InitPoliciesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, result) {\n            var data = stepExecution.getData();\n            var params = stepExecution.getJobParameters();\n            var ruleName = params.value(\"ruleName\");\n            var treeRoot = data.getRoots()[0];\n            var policiesCollector = new _policiesCollector.PoliciesCollector(treeRoot);\n\n            stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n            stepExecution.getJobExecutionContext().put(\"policyByKey\", _sdUtils.Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }]);\n\n    return InitPoliciesStep;\n}(_step.Step);\n\n},{\"../../../../../policies/policies-collector\":79,\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-utils\":\"sd-utils\"}],23:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PrepareVariablesStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../../../../engine/step\");\n\nvar _jobStatus = require(\"../../../../engine/job-status\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PrepareVariablesStep = exports.PrepareVariablesStep = function (_Step) {\n    _inherits(PrepareVariablesStep, _Step);\n\n    function PrepareVariablesStep(jobRepository) {\n        _classCallCheck(this, PrepareVariablesStep);\n\n        return _possibleConstructorReturn(this, (PrepareVariablesStep.__proto__ || Object.getPrototypeOf(PrepareVariablesStep)).call(this, \"prepare_variables\", jobRepository));\n    }\n\n    _createClass(PrepareVariablesStep, [{\n        key: \"doExecute\",\n        value: function doExecute(stepExecution) {\n            var _this2 = this;\n\n            var params = stepExecution.getJobParameters();\n            var variables = params.value(\"variables\");\n\n            var variableValues = [];\n            variables.forEach(function (v) {\n                variableValues.push(_this2.sequence(v.min, v.max, v.length));\n            });\n            // variableValues = Utils.cartesianProductOf(variableValues);\n            stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n            stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n            return stepExecution;\n        }\n    }, {\n        key: \"sequence\",\n        value: function sequence(min, max, length) {\n            var extent = max - min;\n            var step = extent / (length - 1);\n            var result = [min];\n            var curr = min;\n\n            for (var i = 0; i < length - 2; i++) {\n                curr += step;\n\n                result.push(_sdExpressionEngine.ExpressionEngine.toFloat(_sdExpressionEngine.ExpressionEngine.round(curr, 16)));\n            }\n            result.push(max);\n            return result;\n        }\n    }]);\n\n    return PrepareVariablesStep;\n}(_step.Step);\n\n},{\"../../../../engine/job-status\":51,\"../../../../engine/step\":56,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],24:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParameters = require(\"../../../engine/job-parameters\");\n\nvar _jobParameterDefinition = require(\"../../../engine/job-parameter-definition\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJobParameters = exports.TornadoDiagramJobParameters = function (_JobParameters) {\n    _inherits(TornadoDiagramJobParameters, _JobParameters);\n\n    function TornadoDiagramJobParameters() {\n        _classCallCheck(this, TornadoDiagramJobParameters);\n\n        return _possibleConstructorReturn(this, (TornadoDiagramJobParameters.__proto__ || Object.getPrototypeOf(TornadoDiagramJobParameters)).apply(this, arguments));\n    }\n\n    _createClass(TornadoDiagramJobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"id\", _jobParameterDefinition.PARAMETER_TYPE.STRING, 1, 1, true));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"ruleName\", _jobParameterDefinition.PARAMETER_TYPE.STRING));\n            this.definitions.push(new _jobParameterDefinition.JobParameterDefinition(\"variables\", [new _jobParameterDefinition.JobParameterDefinition(\"name\", _jobParameterDefinition.PARAMETER_TYPE.STRING), new _jobParameterDefinition.JobParameterDefinition(\"min\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"max\", _jobParameterDefinition.PARAMETER_TYPE.NUMBER), new _jobParameterDefinition.JobParameterDefinition(\"length\", _jobParameterDefinition.PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", function (v) {\n                return v >= 0;\n            })], 1, Infinity, false, function (v) {\n                return v[\"min\"] <= v[\"max\"];\n            }, function (values) {\n                return _sdUtils.Utils.isUnique(values, function (v) {\n                    return v[\"name\"];\n                });\n            } //Variable names should be unique\n            ));\n        }\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {\n            this.values = {\n                id: _sdUtils.Utils.guid()\n            };\n        }\n    }]);\n\n    return TornadoDiagramJobParameters;\n}(_jobParameters.JobParameters);\n\n},{\"../../../engine/job-parameter-definition\":44,\"../../../engine/job-parameters\":45,\"sd-utils\":\"sd-utils\"}],25:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TornadoDiagramJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _simpleJob = require(\"../../../engine/simple-job\");\n\nvar _prepareVariablesStep = require(\"./steps/prepare-variables-step\");\n\nvar _initPoliciesStep = require(\"./steps/init-policies-step\");\n\nvar _calculateStep = require(\"./steps/calculate-step\");\n\nvar _tornadoDiagramJobParameters = require(\"./tornado-diagram-job-parameters\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TornadoDiagramJob = exports.TornadoDiagramJob = function (_SimpleJob) {\n    _inherits(TornadoDiagramJob, _SimpleJob);\n\n    function TornadoDiagramJob(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, TornadoDiagramJob);\n\n        var _this = _possibleConstructorReturn(this, (TornadoDiagramJob.__proto__ || Object.getPrototypeOf(TornadoDiagramJob)).call(this, \"tornado-diagram\", jobRepository));\n\n        _this.addStep(new _prepareVariablesStep.PrepareVariablesStep(jobRepository));\n        _this.addStep(new _initPoliciesStep.InitPoliciesStep(jobRepository));\n        _this.addStep(new _calculateStep.CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n        return _this;\n    }\n\n    _createClass(TornadoDiagramJob, [{\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            return new _tornadoDiagramJobParameters.TornadoDiagramJobParameters(values);\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return data.getRoots().length === 1;\n                }\n            };\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n\n            if (execution.stepExecutions.length <= 2) {\n                return {\n                    total: 1,\n                    current: 0\n                };\n            }\n\n            return this.steps[2].getProgress(execution.stepExecutions[2]);\n        }\n    }]);\n\n    return TornadoDiagramJob;\n}(_simpleJob.SimpleJob);\n\n},{\"../../../engine/simple-job\":53,\"./steps/calculate-step\":21,\"./steps/init-policies-step\":22,\"./steps/prepare-variables-step\":23,\"./tornado-diagram-job-parameters\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BatchStep = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _step = require(\"../step\");\n\nvar _jobInterruptedException = require(\"../exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*job step that process batch of items*/\nvar BatchStep = exports.BatchStep = function (_Step) {\n    _inherits(BatchStep, _Step);\n\n    function BatchStep(name, jobRepository, chunkSize) {\n        _classCallCheck(this, BatchStep);\n\n        var _this = _possibleConstructorReturn(this, (BatchStep.__proto__ || Object.getPrototypeOf(BatchStep)).call(this, name, jobRepository));\n\n        _this.chunkSize = chunkSize;\n        return _this;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n\n    _createClass(BatchStep, [{\n        key: \"init\",\n        value: function init(stepExecution, jobResult) {\n            throw \"BatchStep.init function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to read and return chunk of items to process\n         */\n\n    }, {\n        key: \"readNextChunk\",\n        value: function readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n            throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to process single item\n         * Must return processed item which will be passed in a chunk to writeChunk function\n         */\n\n    }, {\n        key: \"processItem\",\n        value: function processItem(stepExecution, item, currentItemCount, jobResult) {\n            throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n        }\n\n        /**\n         * Extension point for subclasses to write chunk of items. Not required\n         */\n\n    }, {\n        key: \"writeChunk\",\n        value: function writeChunk(stepExecution, items, jobResult) {}\n\n        /**\n         * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n         */\n\n    }, {\n        key: \"postProcess\",\n        value: function postProcess(stepExecution, jobResult) {}\n    }, {\n        key: \"setTotalItemCount\",\n        value: function setTotalItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getTotalItemCount\",\n        value: function getTotalItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n        }\n    }, {\n        key: \"setCurrentItemCount\",\n        value: function setCurrentItemCount(stepExecution, count) {\n            stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n        }\n    }, {\n        key: \"getCurrentItemCount\",\n        value: function getCurrentItemCount(stepExecution) {\n            return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                return _this2.init(stepExecution, jobResult);\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Failed to initialize batch step: \" + _this2.name, e);\n                throw e;\n            }).then(function (totalItemCount) {\n                return Promise.resolve().then(function () {\n                    _this2.setCurrentItemCount(stepExecution, _this2.getCurrentItemCount(stepExecution));\n                    _this2.setTotalItemCount(stepExecution, totalItemCount);\n                    return _this2.handleNextChunk(stepExecution, jobResult);\n                }).catch(function (e) {\n                    if (!(e instanceof _jobInterruptedException.JobInterruptedException)) {\n                        _sdUtils.log.error(\"Failed to handle batch step: \" + _this2.name, e);\n                    }\n                    throw e;\n                });\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this2.postProcess(stepExecution, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to postProcess batch step: \" + _this2.name, e);\n                    throw e;\n                });\n            }).then(function () {\n                stepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"handleNextChunk\",\n        value: function handleNextChunk(stepExecution, jobResult) {\n            var _this3 = this;\n\n            var currentItemCount = this.getCurrentItemCount(stepExecution);\n            var totalItemCount = this.getTotalItemCount(stepExecution);\n            var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n            if (currentItemCount >= totalItemCount) {\n                return stepExecution;\n            }\n            return this.checkJobExecutionFlags(stepExecution).then(function () {\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return stepExecution;\n            }).then(function () {\n                return Promise.resolve().then(function () {\n                    return _this3.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (chunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.processChunk(stepExecution, chunk, currentItemCount, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (processedChunk) {\n                return Promise.resolve().then(function () {\n                    return _this3.writeChunk(stepExecution, processedChunk, jobResult);\n                }).catch(function (e) {\n                    _sdUtils.log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + _this3.name, e);\n                    throw e;\n                });\n            }).then(function (res) {\n                currentItemCount += chunkSize;\n                _this3.setCurrentItemCount(stepExecution, currentItemCount);\n                return _this3.updateJobProgress(stepExecution).then(function () {\n                    return _this3.handleNextChunk(stepExecution, jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(stepExecution, chunk, currentItemCount, jobResult) {\n            var _this4 = this;\n\n            //TODO promisify\n            return chunk.map(function (item, i) {\n                return _this4.processItem(stepExecution, item, currentItemCount + i, jobResult);\n            });\n        }\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: this.getTotalItemCount(stepExecution),\n                current: this.getCurrentItemCount(stepExecution)\n            };\n        }\n    }, {\n        key: \"updateJobProgress\",\n        value: function updateJobProgress(stepExecution) {\n            var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n            return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n        }\n    }, {\n        key: \"checkJobExecutionFlags\",\n        value: function checkJobExecutionFlags(stepExecution) {\n            return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n        }\n    }]);\n\n    return BatchStep;\n}(_step.Step);\n\nBatchStep.CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\nBatchStep.TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n},{\"../exceptions/job-interrupted-exception\":33,\"../job-status\":51,\"../step\":56,\"sd-utils\":\"sd-utils\"}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExtendableError = exports.ExtendableError = function ExtendableError(message, data) {\n    _classCallCheck(this, ExtendableError);\n\n    this.message = message;\n    this.data = data;\n    this.name = this.constructor.name;\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extendableError = require('./extendable-error');\n\nObject.keys(_extendableError).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _extendableError[key];\n    }\n  });\n});\n\nvar _jobDataInvalidException = require('./job-data-invalid-exception');\n\nObject.keys(_jobDataInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobDataInvalidException[key];\n    }\n  });\n});\n\nvar _jobExecutionAlreadyRunningException = require('./job-execution-already-running-exception');\n\nObject.keys(_jobExecutionAlreadyRunningException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionAlreadyRunningException[key];\n    }\n  });\n});\n\nvar _jobInstanceAlreadyCompleteException = require('./job-instance-already-complete-exception');\n\nObject.keys(_jobInstanceAlreadyCompleteException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstanceAlreadyCompleteException[key];\n    }\n  });\n});\n\nvar _jobInterruptedException = require('./job-interrupted-exception');\n\nObject.keys(_jobInterruptedException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInterruptedException[key];\n    }\n  });\n});\n\nvar _jobParametersInvalidException = require('./job-parameters-invalid-exception');\n\nObject.keys(_jobParametersInvalidException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParametersInvalidException[key];\n    }\n  });\n});\n\nvar _jobRestartException = require('./job-restart-exception');\n\nObject.keys(_jobRestartException).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobRestartException[key];\n    }\n  });\n});\n\n},{\"./extendable-error\":27,\"./job-data-invalid-exception\":30,\"./job-execution-already-running-exception\":31,\"./job-instance-already-complete-exception\":32,\"./job-interrupted-exception\":33,\"./job-parameters-invalid-exception\":34,\"./job-restart-exception\":35}],29:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobComputationException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobComputationException = exports.JobComputationException = function (_ExtendableError) {\n  _inherits(JobComputationException, _ExtendableError);\n\n  function JobComputationException() {\n    _classCallCheck(this, JobComputationException);\n\n    return _possibleConstructorReturn(this, (JobComputationException.__proto__ || Object.getPrototypeOf(JobComputationException)).apply(this, arguments));\n  }\n\n  return JobComputationException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],30:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobDataInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobDataInvalidException = exports.JobDataInvalidException = function (_ExtendableError) {\n  _inherits(JobDataInvalidException, _ExtendableError);\n\n  function JobDataInvalidException() {\n    _classCallCheck(this, JobDataInvalidException);\n\n    return _possibleConstructorReturn(this, (JobDataInvalidException.__proto__ || Object.getPrototypeOf(JobDataInvalidException)).apply(this, arguments));\n  }\n\n  return JobDataInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],31:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobExecutionAlreadyRunningException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobExecutionAlreadyRunningException = exports.JobExecutionAlreadyRunningException = function (_ExtendableError) {\n  _inherits(JobExecutionAlreadyRunningException, _ExtendableError);\n\n  function JobExecutionAlreadyRunningException() {\n    _classCallCheck(this, JobExecutionAlreadyRunningException);\n\n    return _possibleConstructorReturn(this, (JobExecutionAlreadyRunningException.__proto__ || Object.getPrototypeOf(JobExecutionAlreadyRunningException)).apply(this, arguments));\n  }\n\n  return JobExecutionAlreadyRunningException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],32:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInstanceAlreadyCompleteException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInstanceAlreadyCompleteException = exports.JobInstanceAlreadyCompleteException = function (_ExtendableError) {\n  _inherits(JobInstanceAlreadyCompleteException, _ExtendableError);\n\n  function JobInstanceAlreadyCompleteException() {\n    _classCallCheck(this, JobInstanceAlreadyCompleteException);\n\n    return _possibleConstructorReturn(this, (JobInstanceAlreadyCompleteException.__proto__ || Object.getPrototypeOf(JobInstanceAlreadyCompleteException)).apply(this, arguments));\n  }\n\n  return JobInstanceAlreadyCompleteException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],33:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobInterruptedException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobInterruptedException = exports.JobInterruptedException = function (_ExtendableError) {\n  _inherits(JobInterruptedException, _ExtendableError);\n\n  function JobInterruptedException() {\n    _classCallCheck(this, JobInterruptedException);\n\n    return _possibleConstructorReturn(this, (JobInterruptedException.__proto__ || Object.getPrototypeOf(JobInterruptedException)).apply(this, arguments));\n  }\n\n  return JobInterruptedException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],34:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobParametersInvalidException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobParametersInvalidException = exports.JobParametersInvalidException = function (_ExtendableError) {\n  _inherits(JobParametersInvalidException, _ExtendableError);\n\n  function JobParametersInvalidException() {\n    _classCallCheck(this, JobParametersInvalidException);\n\n    return _possibleConstructorReturn(this, (JobParametersInvalidException.__proto__ || Object.getPrototypeOf(JobParametersInvalidException)).apply(this, arguments));\n  }\n\n  return JobParametersInvalidException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],35:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JobRestartException = undefined;\n\nvar _extendableError = require(\"./extendable-error\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar JobRestartException = exports.JobRestartException = function (_ExtendableError) {\n  _inherits(JobRestartException, _ExtendableError);\n\n  function JobRestartException() {\n    _classCallCheck(this, JobRestartException);\n\n    return _possibleConstructorReturn(this, (JobRestartException.__proto__ || Object.getPrototypeOf(JobRestartException)).apply(this, arguments));\n  }\n\n  return JobRestartException;\n}(_extendableError.ExtendableError);\n\n},{\"./extendable-error\":27}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExecutionContext = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ExecutionContext = exports.ExecutionContext = function () {\n    function ExecutionContext(context) {\n        _classCallCheck(this, ExecutionContext);\n\n        this.dirty = false;\n        this.context = {};\n\n        if (context) {\n            this.context = _sdUtils.Utils.clone(context);\n        }\n    }\n\n    _createClass(ExecutionContext, [{\n        key: \"put\",\n        value: function put(key, value) {\n            var prevValue = this.context[key];\n            if (value != null) {\n                var result = this.context[key] = value;\n                this.dirty = prevValue == null || prevValue != null && prevValue != value;\n            } else {\n                delete this.context[key];\n                this.dirty = prevValue != null;\n            }\n        }\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            return this.context[key];\n        }\n    }, {\n        key: \"containsKey\",\n        value: function containsKey(key) {\n            return this.context.hasOwnProperty(key);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            delete this.context[key];\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            //set data model\n            return this.put(\"data\", data);\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            // get data model\n            return this.get(\"data\");\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var dto = _sdUtils.Utils.cloneDeep(this);\n            var data = this.getData();\n            if (data) {\n                data = data.getDTO();\n                dto.context[\"data\"] = data;\n            }\n            return dto;\n        }\n    }]);\n\n    return ExecutionContext;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exceptions = undefined;\n\nvar _executionContext = require('./execution-context');\n\nObject.keys(_executionContext).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _executionContext[key];\n    }\n  });\n});\n\nvar _job = require('./job');\n\nObject.keys(_job).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _job[key];\n    }\n  });\n});\n\nvar _jobExecution = require('./job-execution');\n\nObject.keys(_jobExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecution[key];\n    }\n  });\n});\n\nvar _jobExecutionFlag = require('./job-execution-flag');\n\nObject.keys(_jobExecutionFlag).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionFlag[key];\n    }\n  });\n});\n\nvar _jobExecutionListener = require('./job-execution-listener');\n\nObject.keys(_jobExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobExecutionListener[key];\n    }\n  });\n});\n\nvar _jobInstance = require('./job-instance');\n\nObject.keys(_jobInstance).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobInstance[key];\n    }\n  });\n});\n\nvar _jobKeyGenerator = require('./job-key-generator');\n\nObject.keys(_jobKeyGenerator).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobKeyGenerator[key];\n    }\n  });\n});\n\nvar _jobLauncher = require('./job-launcher');\n\nObject.keys(_jobLauncher).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobLauncher[key];\n    }\n  });\n});\n\nvar _jobParameterDefinition = require('./job-parameter-definition');\n\nObject.keys(_jobParameterDefinition).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameterDefinition[key];\n    }\n  });\n});\n\nvar _jobParameters = require('./job-parameters');\n\nObject.keys(_jobParameters).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobParameters[key];\n    }\n  });\n});\n\nvar _jobStatus = require('./job-status');\n\nObject.keys(_jobStatus).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobStatus[key];\n    }\n  });\n});\n\nvar _simpleJob = require('./simple-job');\n\nObject.keys(_simpleJob).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _simpleJob[key];\n    }\n  });\n});\n\nvar _step = require('./step');\n\nObject.keys(_step).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _step[key];\n    }\n  });\n});\n\nvar _stepExecution = require('./step-execution');\n\nObject.keys(_stepExecution).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecution[key];\n    }\n  });\n});\n\nvar _stepExecutionListener = require('./step-execution-listener');\n\nObject.keys(_stepExecutionListener).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stepExecutionListener[key];\n    }\n  });\n});\n\nvar _exceptions = require('./exceptions');\n\nvar exceptions = _interopRequireWildcard(_exceptions);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.exceptions = exceptions;\n\n},{\"./exceptions\":28,\"./execution-context\":36,\"./job\":52,\"./job-execution\":40,\"./job-execution-flag\":38,\"./job-execution-listener\":39,\"./job-instance\":41,\"./job-key-generator\":42,\"./job-launcher\":43,\"./job-parameter-definition\":44,\"./job-parameters\":45,\"./job-status\":51,\"./simple-job\":53,\"./step\":56,\"./step-execution\":55,\"./step-execution-listener\":54}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_EXECUTION_FLAG = exports.JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobExecutionListener = exports.JobExecutionListener = function () {\n    function JobExecutionListener() {\n        _classCallCheck(this, JobExecutionListener);\n    }\n\n    _createClass(JobExecutionListener, [{\n        key: \"beforeJob\",\n\n        /*Called before a job executes*/\n        value: function beforeJob(jobExecution) {}\n\n        /*Called after completion of a job. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {}\n    }]);\n\n    return JobExecutionListener;\n}();\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the execution of a job.*/\nvar JobExecution = exports.JobExecution = function () {\n    function JobExecution(jobInstance, jobParameters, id) {\n        _classCallCheck(this, JobExecution);\n\n        this.stepExecutions = [];\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.UNKNOWN;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = null;\n        this.createTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n\n    _createClass(JobExecution, [{\n        key: \"createStepExecution\",\n        value: function createStepExecution(stepName) {\n            var stepExecution = new _stepExecution.StepExecution(stepName, this);\n            this.stepExecutions.push(stepExecution);\n            return stepExecution;\n        }\n    }, {\n        key: \"isRunning\",\n        value: function isRunning() {\n            return !this.endTime;\n        }\n\n        /**\n         * Test if this JobExecution has been signalled to\n         * stop.\n         */\n\n    }, {\n        key: \"isStopping\",\n        value: function isStopping() {\n            return this.status === _jobStatus.JOB_STATUS.STOPPING;\n        }\n\n        /**\n         * Signal the JobExecution to stop.\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.stepExecutions.forEach(function (se) {\n                se.terminateOnly = true;\n            });\n            this.status = _jobStatus.JOB_STATUS.STOPPING;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.executionContext.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n\n                if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _stepExecution.StepExecution) {\n                    return value.getDTO([\"jobExecution\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return JobExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],41:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nvar JobInstance = exports.JobInstance = function JobInstance(id, jobName) {\n    _classCallCheck(this, JobInstance);\n\n    this.id = id;\n    this.jobName = jobName;\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobKeyGenerator = exports.JobKeyGenerator = function () {\n    function JobKeyGenerator() {\n        _classCallCheck(this, JobKeyGenerator);\n    }\n\n    _createClass(JobKeyGenerator, null, [{\n        key: \"generateKey\",\n\n        /*Method to generate the unique key used to identify a job instance.*/\n        value: function generateKey(jobParameters) {\n            var result = \"\";\n            jobParameters.definitions.forEach(function (d, i) {\n                if (d.identifying) {\n                    result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n                }\n            });\n            return result;\n        }\n    }]);\n\n    return JobKeyGenerator;\n}();\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobLauncher = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobLauncher = exports.JobLauncher = function () {\n    function JobLauncher(jobRepository, jobWorker, dataModelSerializer) {\n        _classCallCheck(this, JobLauncher);\n\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n    _createClass(JobLauncher, [{\n        key: \"run\",\n        value: function run(jobOrName, jobParametersValues, data) {\n            var _this = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var job;\n            var jobParameters;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobOrName)) {\n                    job = _this.jobRepository.getJobByName(jobOrName);\n                } else {\n                    job = jobOrName;\n                }\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobOrName);\n                }\n\n                jobParameters = job.createJobParameters(jobParametersValues);\n\n                return _this.validate(job, jobParameters, data);\n            }).then(function (valid) {\n                return _this.jobRepository.createJobExecution(job.name, jobParameters, data).then(function (jobExecution) {\n\n                    if (_this.jobWorker) {\n                        _sdUtils.log.debug(\"Job: [\" + job.name + \"] execution [\" + jobExecution.id + \"] delegated to worker\");\n                        _this.jobWorker.executeJob(jobExecution.id);\n                        return jobExecution;\n                    }\n\n                    var executionPromise = _this._execute(job, jobExecution);\n                    if (resolvePromiseAfterJobIsLaunched) {\n                        return jobExecution;\n                    }\n                    return executionPromise;\n                });\n            });\n        }\n    }, {\n        key: \"validate\",\n        value: function validate(job, jobParameters, data) {\n            return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(function (lastExecution) {\n                if (lastExecution != null) {\n                    if (!job.isRestartable) {\n                        throw new _jobRestartException.JobRestartException(\"JobInstance already exists and is not restartable\");\n                    }\n\n                    lastExecution.stepExecutions.forEach(function (execution) {\n                        if (execution.status == _jobStatus.JOB_STATUS.UNKNOWN) {\n                            throw new _jobRestartException.JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                        }\n                    });\n                }\n                if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \" + job.name);\n                }\n\n                if (job.jobDataValidator && !job.jobDataValidator.validate(data)) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \" + job.name);\n                }\n\n                return true;\n            });\n        }\n\n        /**Execute previously created job execution*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            var _this2 = this;\n\n            return Promise.resolve().then(function () {\n                if (_sdUtils.Utils.isString(jobExecutionOrId)) {\n                    return _this2.jobRepository.getJobExecutionById(jobExecutionOrId);\n                }\n                return jobExecutionOrId;\n            }).then(function (jobExecution) {\n                if (!jobExecution) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n                }\n\n                if (jobExecution.status !== _jobStatus.JOB_STATUS.STARTING) {\n                    throw new _jobRestartException.JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n                }\n\n                var jobName = jobExecution.jobInstance.jobName;\n                var job = _this2.jobRepository.getJobByName(jobName);\n                if (!job) {\n                    throw new _jobRestartException.JobRestartException(\"No such job: \" + jobName);\n                }\n\n                return _this2._execute(job, jobExecution);\n            });\n        }\n    }, {\n        key: \"_execute\",\n        value: function _execute(job, jobExecution) {\n            var jobName = job.name;\n            _sdUtils.log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n            return job.execute(jobExecution).then(function (jobExecution) {\n                _sdUtils.log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n                return jobExecution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n                throw e;\n            });\n        }\n    }]);\n\n    return JobLauncher;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-parameters-invalid-exception\":34,\"./exceptions/job-restart-exception\":35,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameterDefinition = exports.PARAMETER_TYPE = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PARAMETER_TYPE = exports.PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nvar JobParameterDefinition = exports.JobParameterDefinition = function () {\n    function JobParameterDefinition(name, typeOrNestedParametersDefinitions) {\n        var minOccurs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var maxOccurs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n        var identifying = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var singleValueValidator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var validator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n        _classCallCheck(this, JobParameterDefinition);\n\n        this.nestedParameters = [];\n        this.required = true;\n\n        this.name = name;\n        if (_sdUtils.Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    _createClass(JobParameterDefinition, [{\n        key: 'set',\n        value: function set(key, val) {\n            this[key] = val;\n            return this;\n        }\n    }, {\n        key: 'validate',\n        value: function validate(value, allValues) {\n            var _this = this;\n\n            var isArray = _sdUtils.Utils.isArray(value);\n\n            if (this.maxOccurs > 1 && !isArray) {\n                return false;\n            }\n\n            if (!isArray) {\n                return this.validateSingleValue(value, allValues);\n            }\n\n            if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n                return false;\n            }\n\n            if (!value.every(function (v) {\n                return _this.validateSingleValue(v, value);\n            })) {\n                return false;\n            }\n\n            if (this.validator) {\n                return this.validator(value, allValues);\n            }\n\n            return true;\n        }\n        // allValues - all values on the same level\n\n    }, {\n        key: 'validateSingleValue',\n        value: function validateSingleValue(value, allValues) {\n            if ((value === null || value === undefined) && this.minOccurs > 0) {\n                return false;\n            }\n\n            if (this.required && !value && value !== 0 && value !== false) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.STRING === this.type && !_sdUtils.Utils.isString(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.DATE === this.type && !_sdUtils.Utils.isDate(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.INTEGER === this.type && !_sdUtils.Utils.isInt(value)) {\n                return false;\n            }\n            if (PARAMETER_TYPE.NUMBER === this.type && !_sdUtils.Utils.isNumber(value)) {\n                return false;\n            }\n\n            if (PARAMETER_TYPE.COMPOSITE === this.type) {\n                if (!_sdUtils.Utils.isObject(value)) {\n                    return false;\n                }\n                if (!this.nestedParameters.every(function (nestedDef, i) {\n                    return nestedDef.validate(value[nestedDef.name]);\n                })) {\n                    return false;\n                }\n            }\n\n            if (this.singleValueValidator) {\n                return this.singleValueValidator(value, allValues);\n            }\n\n            return true;\n        }\n    }]);\n\n    return JobParameterDefinition;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],45:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobParameters = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobParameterDefinition = require(\"./job-parameter-definition\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobParameters = function () {\n    function JobParameters(values) {\n        _classCallCheck(this, JobParameters);\n\n        this.definitions = [];\n        this.values = {};\n\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            _sdUtils.Utils.deepExtend(this.values, values);\n        }\n    }\n\n    _createClass(JobParameters, [{\n        key: \"initDefinitions\",\n        value: function initDefinitions() {}\n    }, {\n        key: \"initDefaultValues\",\n        value: function initDefaultValues() {}\n    }, {\n        key: \"validate\",\n        value: function validate() {\n            var _this = this;\n\n            return this.definitions.every(function (def, i) {\n                return def.validate(_this.values[def.name], _this.values);\n            });\n        }\n\n        /*get or set value by path*/\n\n    }, {\n        key: \"value\",\n        value: function value(path, _value) {\n            if (arguments.length === 1) {\n                return _sdUtils.Utils.get(this.values, path, null);\n            }\n            _sdUtils.Utils.set(this.values, path, _value);\n            return _value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var _this2 = this;\n\n            var result = \"JobParameters[\";\n\n            this.definitions.forEach(function (d, i) {\n\n                var val = _this2.values[d.name];\n                // if(Utils.isArray(val)){\n                //     var values = val;\n                //\n                //\n                // }\n                // if(PARAMETER_TYPE.COMPOSITE == d.type){\n                //\n                // }\n\n                result += d.name + \"=\" + val + \";\";\n            });\n            result += \"]\";\n            return result;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            return {\n                values: this.values\n            };\n        }\n    }]);\n\n    return JobParameters;\n}();\n\nexports.JobParameters = JobParameters;\n\n},{\"./job-parameter-definition\":44,\"sd-utils\":\"sd-utils\"}],46:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IdbJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _idb = require(\"idb\");\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _sdModel = require(\"sd-model\");\n\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* IndexedDB job repository*/\nvar IdbJobRepository = exports.IdbJobRepository = function (_JobRepository) {\n    _inherits(IdbJobRepository, _JobRepository);\n\n    function IdbJobRepository(expressionsReviver) {\n        var dbName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sd-job-repository';\n        var deleteDB = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _classCallCheck(this, IdbJobRepository);\n\n        var _this = _possibleConstructorReturn(this, (IdbJobRepository.__proto__ || Object.getPrototypeOf(IdbJobRepository)).call(this));\n\n        _this.dbName = dbName;\n        _this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            _this.deleteDB().then(function () {\n                _this.initDB();\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n                _this.initDB();\n            });\n        } else {\n            _this.initDB();\n        }\n        return _this;\n    }\n\n    _createClass(IdbJobRepository, [{\n        key: \"initDB\",\n        value: function initDB() {\n            this.dbPromise = _idb2.default.open(this.dbName, 2, function (upgradeDB) {\n                // Note: we don't use 'break' in this switch statement,\n                // the fall-through behaviour is what we want.\n                switch (upgradeDB.oldVersion) {\n                    case 0:\n                        upgradeDB.createObjectStore('job-instances');\n                        var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                        jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: false });\n                        jobExecutionsOS.createIndex(\"createTime\", \"createTime\", { unique: false });\n                        jobExecutionsOS.createIndex(\"status\", \"status\", { unique: false });\n                        upgradeDB.createObjectStore('job-execution-progress');\n                        upgradeDB.createObjectStore('job-execution-flags');\n                        var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                        stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", { unique: false });\n\n                        var jobResultOS = upgradeDB.createObjectStore('job-results');\n                        jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", { unique: true });\n                    case 1:\n                        upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", { unique: true });\n                }\n            });\n\n            this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n            this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n            this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n            this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n            this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n            this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n        }\n    }, {\n        key: \"deleteDB\",\n        value: function deleteDB() {\n            var _this2 = this;\n\n            return Promise.resolve().then(function (_) {\n                return _idb2.default.delete(_this2.dbName);\n            });\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            var _this3 = this;\n\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.remove(key).then(function () {\n                _this3.findJobExecutions(jobInstance, false).then(function (jobExecutions) {\n                    //  Not waiting for promise resolves\n                    jobExecutions.forEach(_this3.removeJobExecution, _this3);\n                });\n\n                _this3.getJobResultByInstance(jobInstance).then(function (jobResult) {\n                    return _this3.removeJobResult(jobResult);\n                });\n            });\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var _this4 = this;\n\n            return this.jobExecutionDao.remove(jobExecution.id).then(function () {\n                return _this4.findStepExecutions(jobExecution.id, false).then(function (stepExecutions) {\n                    // Not waiting for promise resolves\n                    stepExecutions.forEach(_this4.removeStepExecution, _this4);\n                });\n            });\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            return this.stepExecutionDao.remove(stepExecution.id);\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            return this.jobResultDao.remove(jobResult.id);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.jobResultDao.get(jobResultId);\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            return this.jobResultDao.set(jobResult.id, jobResult).then(function (r) {\n                return jobResult;\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var _this5 = this;\n\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.jobInstanceDao.get(key).then(function (dto) {\n                return dto ? _this5.reviveJobInstance(dto) : dto;\n            });\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            return this.jobInstanceDao.set(key, jobInstance).then(function (r) {\n                return jobInstance;\n            });\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            var _this6 = this;\n\n            var dto = jobExecution.getDTO();\n            var stepExecutionsDTOs = dto.stepExecutions;\n            dto.stepExecutions = null;\n            return this.jobExecutionDao.set(jobExecution.id, dto).then(function (r) {\n                return _this6.saveStepExecutionsDTOS(stepExecutionsDTOs);\n            }).then(function (r) {\n                return jobExecution;\n            });\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            return this.jobExecutionProgressDao.set(jobExecutionId, progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.jobExecutionProgressDao.get(jobExecutionId);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            return this.jobExecutionFlagDao.set(jobExecutionId, flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.jobExecutionFlagDao.get(jobExecutionId);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            var dto = stepExecution.getDTO([\"jobExecution\"]);\n            return this.stepExecutionDao.set(stepExecution.id, dto).then(function (r) {\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"saveStepExecutionsDTOS\",\n        value: function saveStepExecutionsDTOS(stepExecutions) {\n            var _this7 = this;\n\n            var savedExecutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (stepExecutions.length <= savedExecutions.length) {\n                return Promise.resolve(savedExecutions);\n            }\n            var stepExecutionDTO = stepExecutions[savedExecutions.length];\n            return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(function () {\n                savedExecutions.push(stepExecutionDTO);\n                return _this7.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n            });\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            var _this8 = this;\n\n            return this.jobExecutionDao.get(id).then(function (dto) {\n                return _this8.fetchJobExecutionRelations(dto);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionRelations\",\n        value: function fetchJobExecutionRelations(jobExecutionDTO) {\n            var _this9 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!jobExecutionDTO) {\n                return Promise.resolve(null);\n            }\n            return this.findStepExecutions(jobExecutionDTO.id, false).then(function (steps) {\n                jobExecutionDTO.stepExecutions = steps;\n                if (!revive) {\n                    return jobExecutionDTO;\n                }\n                return _this9.reviveJobExecution(jobExecutionDTO);\n            });\n        }\n    }, {\n        key: \"fetchJobExecutionsRelations\",\n        value: function fetchJobExecutionsRelations(jobExecutionDtoList) {\n            var _this10 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            if (jobExecutionDtoList.length <= fetched.length) {\n                return Promise.resolve(fetched);\n            }\n            return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then(function (jobExecution) {\n                fetched.push(jobExecution);\n\n                return _this10.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n            });\n        }\n    }, {\n        key: \"findStepExecutions\",\n        value: function findStepExecutions(jobExecutionId) {\n            var _this11 = this;\n\n            var revive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(function (dtos) {\n                if (!revive) {\n                    return dtos;\n                }\n                return dtos.map(function (dto) {\n                    return _this11.reviveStepExecution(dto);\n                });\n            });\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            var _this12 = this;\n\n            var fetchRelationsAndRevive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(function (values) {\n                var sorted = values.sort(function (a, b) {\n                    return a.createTime.getTime() - b.createTime.getTime();\n                });\n\n                if (!fetchRelationsAndRevive) {\n                    return sorted;\n                }\n\n                return _this12.fetchJobExecutionsRelations(sorted, true);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            var _this13 = this;\n\n            return this.findJobExecutions(jobInstance, false).then(function (executions) {\n                return _this13.fetchJobExecutionRelations(executions[executions.length - 1]);\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return new _jobInstance.JobInstance(dto.id, dto.jobName);\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            var executionContext = new _executionContext.ExecutionContext();\n            executionContext.context = dto.context;\n            var data = executionContext.getData();\n            if (data) {\n                var dataModel = new _sdModel.DataModel();\n                dataModel.loadFromDTO(data, this.expressionsReviver);\n                executionContext.setData(dataModel);\n            }\n            return executionContext;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            var _this14 = this;\n\n            var job = this.getJobByName(dto.jobInstance.jobName);\n            var jobInstance = this.reviveJobInstance(dto.jobInstance);\n            var jobParameters = job.createJobParameters(dto.jobParameters.values);\n            var jobExecution = new _jobExecution.JobExecution(jobInstance, jobParameters, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(jobExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobInstance\") {\n                    return jobInstance;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n                if (key === \"jobParameters\") {\n                    return jobParameters;\n                }\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n\n                if (key === \"stepExecutions\") {\n                    return srcValue.map(function (stepDTO) {\n                        return _this14.reviveStepExecution(stepDTO, jobExecution);\n                    });\n                }\n            });\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            var stepExecution = new _stepExecution.StepExecution(dto.stepName, jobExecution, dto.id);\n            var executionContext = this.reviveExecutionContext(dto.executionContext);\n            return _sdUtils.Utils.mergeWith(stepExecution, dto, function (objValue, srcValue, key, object, source, stack) {\n                if (key === \"jobExecution\") {\n                    return jobExecution;\n                }\n                if (key === \"executionContext\") {\n                    return executionContext;\n                }\n            });\n        }\n    }]);\n\n    return IdbJobRepository;\n}(_jobRepository.JobRepository);\n\nvar ObjectStoreDao = function () {\n    function ObjectStoreDao(name, dbPromise) {\n        _classCallCheck(this, ObjectStoreDao);\n\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    _createClass(ObjectStoreDao, [{\n        key: \"get\",\n        value: function get(key) {\n            var _this15 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this15.name).objectStore(_this15.name).get(key);\n            });\n        }\n    }, {\n        key: \"getAllByIndex\",\n        value: function getAllByIndex(indexName, key) {\n            var _this16 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this16.name).objectStore(_this16.name).index(indexName).getAll(key);\n            });\n        }\n    }, {\n        key: \"getByIndex\",\n        value: function getByIndex(indexName, key) {\n            var _this17 = this;\n\n            return this.dbPromise.then(function (db) {\n                return db.transaction(_this17.name).objectStore(_this17.name).index(indexName).get(key);\n            });\n        }\n    }, {\n        key: \"set\",\n        value: function set(key, val) {\n            var _this18 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this18.name, 'readwrite');\n                tx.objectStore(_this18.name).put(val, key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(key) {\n            var _this19 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this19.name, 'readwrite');\n                tx.objectStore(_this19.name).delete(key);\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            var _this20 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this20.name, 'readwrite');\n                tx.objectStore(_this20.name).clear();\n                return tx.complete;\n            });\n        }\n    }, {\n        key: \"keys\",\n        value: function keys() {\n            var _this21 = this;\n\n            return this.dbPromise.then(function (db) {\n                var tx = db.transaction(_this21.name);\n                var keys = [];\n                var store = tx.objectStore(_this21.name);\n\n                // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n                // openKeyCursor isn't supported by Safari, so we fall back\n                (store.iterateKeyCursor || store.iterateCursor).call(store, function (cursor) {\n                    if (!cursor) return;\n                    keys.push(cursor.key);\n                    cursor.continue();\n                });\n\n                return tx.complete.then(function () {\n                    return keys;\n                });\n            });\n        }\n    }]);\n\n    return ObjectStoreDao;\n}();\n\n},{\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../step-execution\":55,\"./job-repository\":47,\"idb\":1,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],47:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobKeyGenerator = require(\"../job-key-generator\");\n\nvar _jobInstance = require(\"../job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobExecution = require(\"../job-execution\");\n\nvar _jobExecutionAlreadyRunningException = require(\"../exceptions/job-execution-already-running-exception\");\n\nvar _jobStatus = require(\"../job-status\");\n\nvar _jobInstanceAlreadyCompleteException = require(\"../exceptions/job-instance-already-complete-exception\");\n\nvar _executionContext = require(\"../execution-context\");\n\nvar _stepExecution = require(\"../step-execution\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _jobResult = require(\"../job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobRepository = exports.JobRepository = function () {\n    function JobRepository() {\n        _classCallCheck(this, JobRepository);\n\n        this.jobByName = {};\n    }\n\n    _createClass(JobRepository, [{\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobByName[job.name] = job;\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(name) {\n            return this.jobByName[name];\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            throw \"JobRepository getJobInstance function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(key, jobInstance) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            throw \"JobRepository.getJobExecutionById function not implemented!\";\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            throw \"JobRepository.saveJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionProgress function not implemented!\";\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            throw \"JobRepository.saveJobExecutionFlag function not implemented!\";\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            throw \"JobRepository.getJobExecutionFlag function not implemented!\";\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            throw \"JobRepository.saveStepExecution function not implemented!\";\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            throw \"JobRepository.findJobExecutions function not implemented!\";\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            throw \"JobRepository.getJobResult function not implemented!\";\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            throw \"JobRepository.getJobResultByInstance function not implemented!\";\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            throw \"JobRepository.setJobResult function not implemented!\";\n        }\n    }, {\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance, jobParameters) {\n            throw \"JobRepository.removeJobInstance function not implemented!\";\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            throw \"JobRepository.removeJobExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            throw \"JobRepository.removeStepExecution function not implemented!\";\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            throw \"JobRepository.removeJobResult function not implemented!\";\n        }\n\n        /*Create a new JobInstance with the name and job parameters provided. return promise*/\n\n    }, {\n        key: \"createJobInstance\",\n        value: function createJobInstance(jobName, jobParameters) {\n            var jobInstance = new _jobInstance.JobInstance(_sdUtils.Utils.guid(), jobName);\n            return this.saveJobInstance(jobInstance, jobParameters);\n        }\n\n        /*Check if an instance of this job already exists with the parameters provided.*/\n\n    }, {\n        key: \"isJobInstanceExists\",\n        value: function isJobInstanceExists(jobName, jobParameters) {\n            return this.getJobInstance(jobName, jobParameters).then(function (result) {\n                return !!result;\n            }).catch(function (error) {\n                return false;\n            });\n        }\n    }, {\n        key: \"generateJobInstanceKey\",\n        value: function generateJobInstanceKey(jobName, jobParameters) {\n            return jobName + \"|\" + _jobKeyGenerator.JobKeyGenerator.generateKey(jobParameters);\n        }\n\n        /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n         * the job must be restartable and it's last JobExecution must *not* be\n         * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    }, {\n        key: \"createJobExecution\",\n        value: function createJobExecution(jobName, jobParameters, data) {\n            var _this = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (jobInstance != null) {\n                    return _this.findJobExecutions(jobInstance).then(function (executions) {\n                        executions.forEach(function (execution) {\n                            if (execution.isRunning()) {\n                                throw new _jobExecutionAlreadyRunningException.JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                            }\n                            if (execution.status == _jobStatus.JOB_STATUS.COMPLETED || execution.status == _jobStatus.JOB_STATUS.ABANDONED) {\n                                throw new _jobInstanceAlreadyCompleteException.JobInstanceAlreadyCompleteException(\"A job instance already exists and is complete for parameters=\" + jobParameters + \".  If you want to run this job again, change the parameters.\");\n                            }\n                        });\n\n                        var executionContext = executions[executions.length - 1].executionContext;\n\n                        return [jobInstance, executionContext];\n                    });\n                }\n\n                // no job found, create one\n                jobInstance = _this.createJobInstance(jobName, jobParameters);\n                var executionContext = new _executionContext.ExecutionContext();\n                var dataModel = new _sdModel.DataModel();\n                dataModel._setNewState(data.createStateSnapshot());\n                executionContext.setData(dataModel);\n                return Promise.all([jobInstance, executionContext]);\n            }).then(function (instanceAndExecutionContext) {\n                var jobExecution = new _jobExecution.JobExecution(instanceAndExecutionContext[0], jobParameters);\n                jobExecution.executionContext = instanceAndExecutionContext[1];\n                jobExecution.lastUpdated = new Date();\n                return _this.saveJobExecution(jobExecution);\n            }).catch(function (e) {\n                throw e;\n            });\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            var _this2 = this;\n\n            return this.getJobInstance(jobName, jobParameters).then(function (jobInstance) {\n                if (!jobInstance) {\n                    return null;\n                }\n                return _this2.getLastJobExecutionByInstance(jobInstance);\n            });\n        }\n    }, {\n        key: \"getLastJobExecutionByInstance\",\n        value: function getLastJobExecutionByInstance(jobInstance) {\n            return this.findJobExecutions(jobInstance).then(function (executions) {\n                return executions[executions.length - 1];\n            });\n        }\n    }, {\n        key: \"getLastStepExecution\",\n        value: function getLastStepExecution(jobInstance, stepName) {\n            return this.findJobExecutions(jobInstance).then(function (jobExecutions) {\n                var stepExecutions = [];\n                jobExecutions.forEach(function (jobExecution) {\n                    return jobExecution.stepExecutions.filter(function (s) {\n                        return s.stepName === stepName;\n                    }).forEach(function (s) {\n                        return stepExecutions.push(s);\n                    });\n                });\n                var latest = null;\n                stepExecutions.forEach(function (s) {\n                    if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                        latest = s;\n                    }\n                });\n                return latest;\n            });\n        }\n    }, {\n        key: \"addStepExecution\",\n        value: function addStepExecution(stepExecution) {\n            stepExecution.lastUpdated = new Date();\n            return this.saveStepExecution(stepExecution);\n        }\n    }, {\n        key: \"update\",\n        value: function update(o) {\n            o.lastUpdated = new Date();\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.saveJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.saveStepExecution(o);\n            }\n\n            throw \"Object not updatable: \" + o;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(o) {\n\n            if (o instanceof _jobExecution.JobExecution) {\n                return this.removeJobExecution(o);\n            }\n\n            if (o instanceof _stepExecution.StepExecution) {\n                return this.removeStepExecution(o);\n            }\n\n            if (o instanceof _jobResult.JobResult) {\n                return this.removeJobResult();\n            }\n\n            return Promise.reject(\"Object not removable: \" + o);\n        }\n    }, {\n        key: \"reviveJobInstance\",\n        value: function reviveJobInstance(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveExecutionContext\",\n        value: function reviveExecutionContext(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveJobExecution\",\n        value: function reviveJobExecution(dto) {\n            return dto;\n        }\n    }, {\n        key: \"reviveStepExecution\",\n        value: function reviveStepExecution(dto, jobExecution) {\n            return dto;\n        }\n    }]);\n\n    return JobRepository;\n}();\n\n},{\"../exceptions/job-execution-already-running-exception\":31,\"../exceptions/job-instance-already-complete-exception\":32,\"../execution-context\":36,\"../job-execution\":40,\"../job-instance\":41,\"../job-key-generator\":42,\"../job-result\":50,\"../job-status\":51,\"../step-execution\":55,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SimpleJobRepository = exports.SimpleJobRepository = function (_JobRepository) {\n    _inherits(SimpleJobRepository, _JobRepository);\n\n    function SimpleJobRepository() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SimpleJobRepository);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SimpleJobRepository.__proto__ || Object.getPrototypeOf(SimpleJobRepository)).call.apply(_ref, [this].concat(args))), _this), _this.jobInstancesByKey = {}, _this.jobExecutions = [], _this.stepExecutions = [], _this.executionProgress = {}, _this.executionFlags = {}, _this.jobResults = [], _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(SimpleJobRepository, [{\n        key: \"removeJobInstance\",\n        value: function removeJobInstance(jobInstance) {\n            var _this2 = this;\n\n            _sdUtils.Utils.forOwn(this.jobInstancesByKey, function (ji, key) {\n                if (ji === jobInstance) {\n                    delete _this2.jobInstancesByKey[key];\n                }\n            });\n\n            this.jobExecutions.filter(function (jobExecution) {\n                return jobExecution.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobExecution, this);\n            this.jobResults.filter(function (jobResult) {\n                return jobResult.jobInstance.id == jobInstance.id;\n            }).reverse().forEach(this.removeJobResult, this);\n\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobExecution\",\n        value: function removeJobExecution(jobExecution) {\n            var index = this.jobExecutions.indexOf(jobExecution);\n            if (index > -1) {\n                this.jobExecutions.splice(index, 1);\n            }\n\n            this.stepExecutions.filter(function (stepExecution) {\n                return stepExecution.jobExecution.id === jobExecution.id;\n            }).reverse().forEach(this.removeStepExecution, this);\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeStepExecution\",\n        value: function removeStepExecution(stepExecution) {\n            var index = this.stepExecutions.indexOf(stepExecution);\n            if (index > -1) {\n                this.stepExecutions.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n    }, {\n        key: \"removeJobResult\",\n        value: function removeJobResult(jobResult) {\n            var index = this.jobResults.indexOf(jobResult);\n            if (index > -1) {\n                this.jobResults.splice(index, 1);\n            }\n            return Promise.resolve();\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return Promise.resolve(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return Promise.resolve(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return Promise.resolve(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return Promise.resolve(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return Promise.resolve(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return Promise.resolve(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return Promise.resolve(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return Promise.resolve(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return Promise.resolve(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return Promise.resolve(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return Promise.resolve(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }]);\n\n    return SimpleJobRepository;\n}(_jobRepository.JobRepository);\n\n},{\"./job-repository\":47,\"sd-utils\":\"sd-utils\"}],49:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TimeoutJobRepository = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobRepository = require(\"./job-repository\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _simpleJobRepository = require(\"./simple-job-repository\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeoutJobRepository = exports.TimeoutJobRepository = function (_SimpleJobRepository) {\n    _inherits(TimeoutJobRepository, _SimpleJobRepository);\n\n    function TimeoutJobRepository() {\n        _classCallCheck(this, TimeoutJobRepository);\n\n        return _possibleConstructorReturn(this, (TimeoutJobRepository.__proto__ || Object.getPrototypeOf(TimeoutJobRepository)).apply(this, arguments));\n    }\n\n    _createClass(TimeoutJobRepository, [{\n        key: \"createTimeoutPromise\",\n        value: function createTimeoutPromise(valueToResolve) {\n            var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(valueToResolve);\n                }, delay);\n            });\n        }\n\n        /*returns promise*/\n\n    }, {\n        key: \"getJobInstance\",\n        value: function getJobInstance(jobName, jobParameters) {\n            var key = this.generateJobInstanceKey(jobName, jobParameters);\n            return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n        }\n\n        /*should return promise that resolves to saved instance*/\n\n    }, {\n        key: \"saveJobInstance\",\n        value: function saveJobInstance(jobInstance, jobParameters) {\n            var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n            this.jobInstancesByKey[key] = jobInstance;\n            return this.createTimeoutPromise(jobInstance);\n        }\n    }, {\n        key: \"getJobResult\",\n        value: function getJobResult(jobResultId) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.id === jobResultId;\n            }));\n        }\n    }, {\n        key: \"getJobResultByInstance\",\n        value: function getJobResultByInstance(jobInstance) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobResults, function (r) {\n                return r.jobInstance.id === jobInstance.id;\n            }));\n        }\n    }, {\n        key: \"saveJobResult\",\n        value: function saveJobResult(jobResult) {\n            this.jobResults.push(jobResult);\n            return this.createTimeoutPromise(jobResult);\n        }\n    }, {\n        key: \"getJobExecutionById\",\n        value: function getJobExecutionById(id) {\n            return this.createTimeoutPromise(_sdUtils.Utils.find(this.jobExecutions, function (ex) {\n                return ex.id === id;\n            }));\n        }\n\n        /*should return promise that resolves to saved jobExecution*/\n\n    }, {\n        key: \"saveJobExecution\",\n        value: function saveJobExecution(jobExecution) {\n            this.jobExecutions.push(jobExecution);\n            return this.createTimeoutPromise(jobExecution);\n        }\n    }, {\n        key: \"updateJobExecutionProgress\",\n        value: function updateJobExecutionProgress(jobExecutionId, progress) {\n            this.executionProgress[jobExecutionId] = progress;\n            return this.createTimeoutPromise(progress);\n        }\n    }, {\n        key: \"getJobExecutionProgress\",\n        value: function getJobExecutionProgress(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n        }\n    }, {\n        key: \"saveJobExecutionFlag\",\n        value: function saveJobExecutionFlag(jobExecutionId, flag) {\n            this.executionFlags[jobExecutionId] = flag;\n            return this.createTimeoutPromise(flag);\n        }\n    }, {\n        key: \"getJobExecutionFlag\",\n        value: function getJobExecutionFlag(jobExecutionId) {\n            return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n        }\n\n        /*should return promise which resolves to saved stepExecution*/\n\n    }, {\n        key: \"saveStepExecution\",\n        value: function saveStepExecution(stepExecution) {\n            this.stepExecutions.push(stepExecution);\n            return this.createTimeoutPromise(stepExecution);\n        }\n\n        /*find job executions sorted by createTime, returns promise*/\n\n    }, {\n        key: \"findJobExecutions\",\n        value: function findJobExecutions(jobInstance) {\n            return this.createTimeoutPromise(this.jobExecutions.filter(function (e) {\n                return e.jobInstance.id == jobInstance.id;\n            }).sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime();\n            }));\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(object) {//TODO\n\n        }\n    }]);\n\n    return TimeoutJobRepository;\n}(_simpleJobRepository.SimpleJobRepository);\n\n},{\"./job-repository\":47,\"./simple-job-repository\":48,\"sd-utils\":\"sd-utils\"}],50:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobResult = undefined;\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _stepExecution = require(\"./step-execution\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the result of a job instance.*/\nvar JobResult = exports.JobResult = function JobResult(jobInstance, id) {\n    _classCallCheck(this, JobResult);\n\n    this.lastUpdated = null;\n\n    if (id === null || id === undefined) {\n        this.id = _sdUtils.Utils.guid();\n    } else {\n        this.id = id;\n    }\n\n    this.jobInstance = jobInstance;\n};\n\n},{\"./execution-context\":36,\"./job-status\":51,\"./step-execution\":55,\"sd-utils\":\"sd-utils\"}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar JOB_STATUS = exports.JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Job = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobParametersInvalidException = require(\"./exceptions/job-parameters-invalid-exception\");\n\nvar _jobDataInvalidException = require(\"./exceptions/job-data-invalid-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nvar _jobResult = require(\"./job-result\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nvar Job = exports.Job = function () {\n    function Job(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, Job);\n\n        this.steps = [];\n        this.isRestartable = true;\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    _createClass(Job, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(execution) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Job execution starting: \", execution);\n            var jobResult;\n            return this.checkExecutionFlags(execution).then(function (execution) {\n\n                if (execution.status === _jobStatus.JOB_STATUS.STOPPING) {\n                    // The job was already stopped\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    _sdUtils.log.debug(\"Job execution was stopped: \" + execution);\n                    return execution;\n                }\n\n                if (_this.jobParametersValidator && !_this.jobParametersValidator.validate(execution.jobParameters)) {\n                    throw new _jobParametersInvalidException.JobParametersInvalidException(\"Invalid job parameters in job execute\");\n                }\n\n                if (_this.jobDataValidator && !_this.jobDataValidator.validate(execution.getData())) {\n                    throw new _jobDataInvalidException.JobDataInvalidException(\"Invalid job data in job execute\");\n                }\n\n                execution.startTime = new Date();\n                return Promise.all([_this.updateStatus(execution, _jobStatus.JOB_STATUS.STARTED), _this.getResult(execution), _this.updateProgress(execution)]).then(function (res) {\n                    execution = res[0];\n                    jobResult = res[1];\n                    if (!jobResult) {\n                        jobResult = new _jobResult.JobResult(execution.jobInstance);\n                    }\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.beforeJob(execution);\n                    });\n\n                    return _this.doExecute(execution, jobResult);\n                });\n            }).then(function (execution) {\n                _sdUtils.log.debug(\"Job execution complete: \", execution);\n                return execution;\n            }).catch(function (e) {\n                if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                    _sdUtils.log.info(\"Encountered interruption executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.STOPPED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.STOPPED;\n                } else {\n                    _sdUtils.log.error(\"Encountered fatal error executing job\", e);\n                    execution.status = _jobStatus.JOB_STATUS.FAILED;\n                    execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                }\n                execution.failureExceptions.push(e);\n                return execution;\n            }).then(function (execution) {\n                if (jobResult) {\n                    return _this.jobRepository.saveJobResult(jobResult).then(function () {\n                        return execution;\n                    });\n                }\n                return execution;\n            }).catch(function (e) {\n                _sdUtils.log.error(\"Encountered fatal error saving job results\", e);\n                if (e) {\n                    execution.failureExceptions.push(e);\n                }\n                execution.status = _jobStatus.JOB_STATUS.FAILED;\n                execution.exitStatus = _jobStatus.JOB_STATUS.FAILED;\n                return execution;\n            }).then(function (execution) {\n                execution.endTime = new Date();\n                return Promise.all([_this.jobRepository.update(execution), _this.updateProgress(execution)]).then(function (res) {\n                    return res[0];\n                });\n            }).then(function (execution) {\n                try {\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterJob(execution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception encountered in afterStep callback\", e);\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"updateStatus\",\n        value: function updateStatus(jobExecution, status) {\n            jobExecution.status = status;\n            return this.jobRepository.update(jobExecution);\n        }\n    }, {\n        key: \"updateProgress\",\n        value: function updateProgress(jobExecution) {\n            return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n        }\n\n        /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n            throw 'doExecute function not implemented for job: ' + this.name;\n        }\n    }, {\n        key: \"getJobParametersValidator\",\n        value: function getJobParametersValidator() {\n            return {\n                validate: function validate(params) {\n                    return params.validate();\n                }\n            };\n        }\n    }, {\n        key: \"getJobDataValidator\",\n        value: function getJobDataValidator() {\n            return {\n                validate: function validate(data) {\n                    return true;\n                }\n            };\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep(step) {\n            this.steps.push(step);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(values) {\n            throw 'createJobParameters function not implemented for job: ' + this.name;\n        }\n\n        /*Should return progress object with fields:\n        * current\n        * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            return {\n                total: 1,\n                current: execution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }, {\n        key: \"registerExecutionListener\",\n        value: function registerExecutionListener(listener) {\n            this.executionListeners.push(listener);\n        }\n    }, {\n        key: \"checkExecutionFlags\",\n        value: function checkExecutionFlags(execution) {\n            return this.jobRepository.getJobExecutionFlag(execution.id).then(function (flag) {\n                if (_jobExecutionFlag.JOB_EXECUTION_FLAG.STOP === flag) {\n                    execution.stop();\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(execution) {\n            return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n        }\n    }, {\n        key: \"jobResultToCsvRows\",\n        value: function jobResultToCsvRows(jobResult, jobParameters) {\n            throw 'jobResultToCsvRows function not implemented for job: ' + this.name;\n        }\n    }]);\n\n    return Job;\n}();\n\n},{\"./exceptions/job-data-invalid-exception\":30,\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-parameters-invalid-exception\":34,\"./job-execution-flag\":38,\"./job-result\":50,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],53:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SimpleJob = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if (\"value\" in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;if (getter === undefined) {\n            return undefined;\n        }return getter.call(receiver);\n    }\n};\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _job = require(\"./job\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _step = require(\"./step\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nvar _jobRestartException = require(\"./exceptions/job-restart-exception\");\n\nvar _jobExecutionFlag = require(\"./job-execution-flag\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nvar SimpleJob = exports.SimpleJob = function (_Job) {\n    _inherits(SimpleJob, _Job);\n\n    function SimpleJob(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        _classCallCheck(this, SimpleJob);\n\n        return _possibleConstructorReturn(this, (SimpleJob.__proto__ || Object.getPrototypeOf(SimpleJob)).call(this, name, jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    _createClass(SimpleJob, [{\n        key: \"getStep\",\n        value: function getStep(stepName) {\n            return _sdUtils.Utils.find(this.steps, function (s) {\n                return s.name == stepName;\n            });\n        }\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(execution, jobResult) {\n\n            return this.handleNextStep(execution, jobResult).then(function (lastExecutedStepExecution) {\n                if (lastExecutedStepExecution != null) {\n                    var _execution$failureExc;\n\n                    _sdUtils.log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                    execution.status = lastExecutedStepExecution.status;\n                    execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                    (_execution$failureExc = execution.failureExceptions).push.apply(_execution$failureExc, _toConsumableArray(lastExecutedStepExecution.failureExceptions));\n                }\n                return execution;\n            });\n        }\n    }, {\n        key: \"handleNextStep\",\n        value: function handleNextStep(jobExecution, jobResult) {\n            var _this2 = this;\n\n            var prevStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var prevStepExecution = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            var stepIndex = 0;\n            if (prevStep) {\n                stepIndex = this.steps.indexOf(prevStep) + 1;\n            }\n            if (stepIndex >= this.steps.length) {\n                return Promise.resolve(prevStepExecution);\n            }\n            var step = this.steps[stepIndex];\n            return this.handleStep(step, jobExecution, jobResult).then(function (stepExecution) {\n                if (stepExecution.status !== _jobStatus.JOB_STATUS.COMPLETED) {\n                    // Terminate the job if a step fails\n                    return stepExecution;\n                }\n                return _this2.handleNextStep(jobExecution, jobResult, step, stepExecution);\n            });\n        }\n    }, {\n        key: \"handleStep\",\n        value: function handleStep(step, jobExecution, jobResult) {\n            var _this3 = this;\n\n            var jobInstance = jobExecution.jobInstance;\n            return this.checkExecutionFlags(jobExecution).then(function (jobExecution) {\n                if (jobExecution.isStopping()) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                return _this3.jobRepository.getLastStepExecution(jobInstance, step.name);\n            }).then(function (lastStepExecution) {\n                if (_this3.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                    // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                    _sdUtils.log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                    lastStepExecution = null;\n                }\n\n                var currentStepExecution = lastStepExecution;\n\n                if (!_this3.shouldStart(currentStepExecution, jobExecution, step)) {\n                    return currentStepExecution;\n                }\n\n                currentStepExecution = jobExecution.createStepExecution(step.name);\n\n                var isCompleted = lastStepExecution != null && lastStepExecution.status === _jobStatus.JOB_STATUS.COMPLETED;\n                var isRestart = lastStepExecution != null && !isCompleted;\n                var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n                if (isRestart) {\n                    currentStepExecution.executionContext = lastStepExecution.executionContext;\n                    if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                        currentStepExecution.executionContext.remove(\"executed\");\n                    }\n                } else {\n\n                    currentStepExecution.executionContext = new _executionContext.ExecutionContext();\n                }\n                if (skipExecution) {\n                    currentStepExecution.exitStatus = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                    currentStepExecution.executionContext.put(\"skipped\", true);\n                }\n\n                return _this3.jobRepository.addStepExecution(currentStepExecution).then(function (_currentStepExecution) {\n                    currentStepExecution = _currentStepExecution;\n                    if (skipExecution) {\n                        _sdUtils.log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                        return currentStepExecution;\n                    }\n                    _sdUtils.log.info(\"Executing step: [\" + step.name + \"]\");\n                    return step.execute(currentStepExecution, jobResult);\n                }).then(function () {\n                    currentStepExecution.executionContext.put(\"executed\", true);\n                    return currentStepExecution;\n                }).catch(function (e) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    return _this3.jobRepository.update(jobExecution).then(function (jobExecution) {\n                        throw e;\n                    });\n                });\n            }).then(function (currentStepExecution) {\n                if (currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPING || currentStepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    // Ensure that the job gets the message that it is stopping\n                    jobExecution.status = _jobStatus.JOB_STATUS.STOPPING;\n                    // throw new Error(\"Job interrupted by step execution\");\n                }\n                return _this3.updateProgress(jobExecution).then(function () {\n                    return currentStepExecution;\n                });\n            });\n        }\n    }, {\n        key: \"stepExecutionPartOfExistingJobExecution\",\n        value: function stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n            return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id;\n        }\n    }, {\n        key: \"shouldStart\",\n        value: function shouldStart(lastStepExecution, execution, step) {\n            var stepStatus;\n            if (lastStepExecution == null) {\n                stepStatus = _jobStatus.JOB_STATUS.STARTING;\n            } else {\n                stepStatus = lastStepExecution.status;\n            }\n\n            if (stepStatus == _jobStatus.JOB_STATUS.UNKNOWN) {\n                throw new _jobRestartException.JobRestartException(\"Cannot restart step from UNKNOWN status\");\n            }\n\n            return stepStatus != _jobStatus.JOB_STATUS.COMPLETED || step.isRestartable;\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(execution) {\n            var completedSteps = execution.stepExecutions.length;\n            var progress = {\n                total: this.steps.length,\n                current: completedSteps\n            };\n            if (!completedSteps) {\n                return progress;\n            }\n            if (_jobStatus.JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length - 1].status) {\n                progress.current--;\n            }\n\n            return progress;\n        }\n    }, {\n        key: \"addStep\",\n        value: function addStep() {\n            if (arguments.length === 1) {\n                return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, arguments[0]);\n            }\n            var step = new _step.Step(arguments[0], this.jobRepository);\n            step.doExecute = arguments[1];\n            return _get(SimpleJob.prototype.__proto__ || Object.getPrototypeOf(SimpleJob.prototype), \"addStep\", this).call(this, step);\n        }\n    }]);\n\n    return SimpleJob;\n}(_job.Job);\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./exceptions/job-restart-exception\":35,\"./execution-context\":36,\"./job\":52,\"./job-execution-flag\":38,\"./job-status\":51,\"./step\":56,\"sd-utils\":\"sd-utils\"}],54:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar StepExecutionListener = exports.StepExecutionListener = function () {\n    function StepExecutionListener() {\n        _classCallCheck(this, StepExecutionListener);\n    }\n\n    _createClass(StepExecutionListener, [{\n        key: \"beforeStep\",\n\n        /*Called before a step executes*/\n        value: function beforeStep(jobExecution) {}\n\n        /*Called after completion of a step. Called after both successful and failed executions*/\n\n    }, {\n        key: \"afterStep\",\n        value: function afterStep(jobExecution) {}\n    }]);\n\n    return StepExecutionListener;\n}();\n\n},{}],55:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.StepExecution = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _executionContext = require(\"./execution-context\");\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _jobExecution = require(\"./job-execution\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n representation of the execution of a step\n */\nvar StepExecution = exports.StepExecution = function () {\n    function StepExecution(stepName, jobExecution, id) {\n        _classCallCheck(this, StepExecution);\n\n        this.status = _jobStatus.JOB_STATUS.STARTING;\n        this.exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n        this.executionContext = new _executionContext.ExecutionContext();\n        this.startTime = new Date();\n        this.endTime = null;\n        this.lastUpdated = null;\n        this.terminateOnly = false;\n        this.failureExceptions = [];\n\n        if (id === null || id === undefined) {\n            this.id = _sdUtils.Utils.guid();\n        } else {\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    } //flag to indicate that an execution should halt\n    //execution context for single step level,\n\n    _createClass(StepExecution, [{\n        key: \"getJobParameters\",\n        value: function getJobParameters() {\n            return this.jobExecution.jobParameters;\n        }\n    }, {\n        key: \"getJobExecutionContext\",\n        value: function getJobExecutionContext() {\n            return this.jobExecution.executionContext;\n        }\n    }, {\n        key: \"getData\",\n        value: function getData() {\n            return this.jobExecution.getData();\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filteredProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var deepClone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var cloneMethod = _sdUtils.Utils.cloneDeepWith;\n            if (!deepClone) {\n                cloneMethod = _sdUtils.Utils.cloneWith;\n            }\n\n            return _sdUtils.Utils.assign({}, cloneMethod(this, function (value, key, object, stack) {\n                if (filteredProperties.indexOf(key) > -1) {\n                    return null;\n                }\n                if ([\"executionContext\"].indexOf(key) > -1) {\n                    return value.getDTO();\n                }\n                if (value instanceof Error) {\n                    return _sdUtils.Utils.getErrorDTO(value);\n                }\n\n                if (value instanceof _jobExecution.JobExecution) {\n                    return value.getDTO([\"stepExecutions\"], deepClone);\n                }\n            }));\n        }\n    }]);\n\n    return StepExecution;\n}();\n\n},{\"./execution-context\":36,\"./job-execution\":40,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],56:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Step = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobStatus = require(\"./job-status\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _jobInterruptedException = require(\"./exceptions/job-interrupted-exception\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*domain object representing the configuration of a job step*/\nvar Step = exports.Step = function () {\n    function Step(name, jobRepository) {\n        _classCallCheck(this, Step);\n\n        this.isRestartable = true;\n        this.skipOnRestartIfCompleted = true;\n        this.steps = [];\n        this.executionListeners = [];\n\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    _createClass(Step, [{\n        key: \"setJobRepository\",\n        value: function setJobRepository(jobRepository) {\n            this.jobRepository = jobRepository;\n        }\n\n        /*Process the step and assign progress and status meta information to the StepExecution provided*/\n\n    }, {\n        key: \"execute\",\n        value: function execute(stepExecution, jobResult) {\n            var _this = this;\n\n            _sdUtils.log.debug(\"Executing step: name=\" + this.name);\n            stepExecution.startTime = new Date();\n            stepExecution.status = _jobStatus.JOB_STATUS.STARTED;\n            var exitStatus;\n            return this.jobRepository.update(stepExecution).then(function (stepExecution) {\n                exitStatus = _jobStatus.JOB_STATUS.EXECUTING;\n\n                _this.executionListeners.forEach(function (listener) {\n                    return listener.beforeStep(stepExecution);\n                });\n                _this.open(stepExecution.executionContext);\n\n                return _this.doExecute(stepExecution, jobResult);\n            }).then(function (_stepExecution) {\n                stepExecution = _stepExecution;\n                exitStatus = stepExecution.exitStatus;\n\n                // Check if someone is trying to stop us\n                if (stepExecution.terminateOnly) {\n                    throw new _jobInterruptedException.JobInterruptedException(\"JobExecution interrupted.\");\n                }\n                // Need to upgrade here not set, in case the execution was stopped\n                stepExecution.status = _jobStatus.JOB_STATUS.COMPLETED;\n                _sdUtils.log.debug(\"Step execution success: name=\" + _this.name);\n                return stepExecution;\n            }).catch(function (e) {\n                stepExecution.status = _this.determineJobStatus(e);\n                exitStatus = stepExecution.status;\n                stepExecution.failureExceptions.push(e);\n\n                if (stepExecution.status == _jobStatus.JOB_STATUS.STOPPED) {\n                    _sdUtils.log.info(\"Encountered interruption executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                } else {\n                    _sdUtils.log.error(\"Encountered an error executing step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n                return stepExecution;\n            }).then(function (stepExecution) {\n                try {\n                    stepExecution.exitStatus = exitStatus;\n                    _this.executionListeners.forEach(function (listener) {\n                        return listener.afterStep(stepExecution);\n                    });\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception in afterStep callback in step \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                }\n\n                stepExecution.endTime = new Date();\n                stepExecution.exitStatus = exitStatus;\n\n                return _this.jobRepository.update(stepExecution);\n            }).then(function (stepExecution) {\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                try {\n                    _this.close(stepExecution.executionContext);\n                } catch (e) {\n                    _sdUtils.log.error(\"Exception while closing step execution resources in step: \" + _this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                    stepExecution.failureExceptions.push(e);\n                }\n\n                // doExecutionRelease();\n\n                _sdUtils.log.debug(\"Step execution complete: \" + stepExecution.id);\n                return stepExecution;\n            });\n        }\n    }, {\n        key: \"determineJobStatus\",\n        value: function determineJobStatus(e) {\n            if (e instanceof _jobInterruptedException.JobInterruptedException) {\n                return _jobStatus.JOB_STATUS.STOPPED;\n            } else {\n                return _jobStatus.JOB_STATUS.FAILED;\n            }\n        }\n\n        /**\n         * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n         * StepExecution before returning. Must return stepExecution\n         */\n\n    }, {\n        key: \"doExecute\",\n        value: function doExecute(stepExecution, jobResult) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n         * acquire resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"open\",\n        value: function open(executionContext) {}\n\n        /**\n         * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n         * of the finally block), to close or release resources. Does nothing by default.\n         */\n\n    }, {\n        key: \"close\",\n        value: function close(executionContext) {}\n\n        /*Should return progress object with fields:\n         * current\n         * total */\n\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(stepExecution) {\n            return {\n                total: 1,\n                current: stepExecution.status === _jobStatus.JOB_STATUS.COMPLETED ? 1 : 0\n            };\n        }\n    }]);\n\n    return Step;\n}();\n\n},{\"./exceptions/job-interrupted-exception\":33,\"./job-status\":51,\"sd-utils\":\"sd-utils\"}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.engine = undefined;\n\nvar _jobsManager = require('./jobs-manager');\n\nObject.keys(_jobsManager).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobsManager[key];\n    }\n  });\n});\n\nvar _jobWorker = require('./job-worker');\n\nObject.keys(_jobWorker).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _jobWorker[key];\n    }\n  });\n});\n\nvar _index = require('./engine/index');\n\nvar engine = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.engine = engine;\n\n},{\"./engine/index\":37,\"./job-worker\":59,\"./jobs-manager\":60}],58:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobInstanceManager = exports.JobInstanceManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _jobInstance = require(\"./engine/job-instance\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobInstanceManagerConfig = exports.JobInstanceManagerConfig = function JobInstanceManagerConfig(custom) {\n    _classCallCheck(this, JobInstanceManagerConfig);\n\n    this.onJobStarted = function () {};\n\n    this.onJobCompleted = function (result) {};\n\n    this.onJobFailed = function (errors) {};\n\n    this.onJobStopped = function () {};\n\n    this.onJobTerminated = function () {};\n\n    this.onProgress = function (progress) {};\n\n    this.updateInterval = 100;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\n/*convenience class for managing and tracking job instance progress*/\n\nvar JobInstanceManager = exports.JobInstanceManager = function (_JobExecutionListener) {\n    _inherits(JobInstanceManager, _JobExecutionListener);\n\n    function JobInstanceManager(jobsManger, jobInstanceOrExecution, config) {\n        _classCallCheck(this, JobInstanceManager);\n\n        var _this = _possibleConstructorReturn(this, (JobInstanceManager.__proto__ || Object.getPrototypeOf(JobInstanceManager)).call(this));\n\n        _this.progress = null;\n\n        _this.config = new JobInstanceManagerConfig(config);\n        _this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof _jobInstance.JobInstance) {\n            _this.jobInstance = jobInstanceOrExecution;\n            _this.getLastJobExecution().then(function (je) {\n                _this.checkProgress();\n            });\n        } else {\n            _this.lastJobExecution = jobInstanceOrExecution;\n            _this.jobInstance = _this.lastJobExecution.jobInstance;\n            _this.checkProgress();\n        }\n        if (_this.lastJobExecution && !_this.lastJobExecution.isRunning()) {\n            _this.afterJob(_this.lastJobExecution);\n            return _possibleConstructorReturn(_this);\n        }\n        jobsManger.registerJobExecutionListener(_this);\n        return _this;\n    }\n\n    _createClass(JobInstanceManager, [{\n        key: \"checkProgress\",\n        value: function checkProgress() {\n            var _this2 = this;\n\n            var self = this;\n            if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n                return;\n            }\n            this.jobsManger.getProgress(this.lastJobExecution).then(function (progress) {\n                _this2.lastUpdateTime = new Date();\n                if (progress) {\n                    _this2.progress = progress;\n                    _this2.config.onProgress.call(_this2.config.callbacksThisArg || _this2, progress);\n                }\n\n                setTimeout(function () {\n                    self.checkProgress();\n                }, _this2.config.updateInterval);\n            });\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n\n            this.lastJobExecution = jobExecution;\n            this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n        }\n    }, {\n        key: \"getProgressPercents\",\n        value: function getProgressPercents(progress) {\n            if (!progress) {\n                return 0;\n            }\n            return progress.current * 100 / progress.total;\n        }\n    }, {\n        key: \"getProgressFromExecution\",\n        value: function getProgressFromExecution(jobExecution) {\n            var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n            return job.getProgress(jobExecution);\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            var _this3 = this;\n\n            if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n                return;\n            }\n            this.lastJobExecution = jobExecution;\n            if (_jobStatus.JOB_STATUS.COMPLETED === jobExecution.status) {\n                this.jobsManger.deregisterJobExecutionListener(this);\n                this.progress = this.getProgressFromExecution(jobExecution);\n                this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n                this.jobsManger.getResult(jobExecution.jobInstance).then(function (result) {\n                    _this3.config.onJobCompleted.call(_this3.config.callbacksThisArg || _this3, result.data);\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            } else if (_jobStatus.JOB_STATUS.FAILED === jobExecution.status) {\n                this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n            } else if (_jobStatus.JOB_STATUS.STOPPED === jobExecution.status) {\n                this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n            }\n        }\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution() {\n            var _this4 = this;\n\n            var forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.lastJobExecution || forceUpdate) {\n                return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(function (je) {\n                    _this4.lastJobExecution = je;\n                    return je;\n                });\n            }\n            return Promise.resolve(this.lastJobExecution);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this5 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this5.jobsManger.stop(_this5.lastJobExecution);\n            });\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            var _this6 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this6.jobsManger.run(_this6.jobInstance.jobName, _this6.lastJobExecution.jobParameters.values, _this6.lastJobExecution.getData()).then(function (je) {\n                    _this6.lastJobExecution = je;\n                    _this6.checkProgress();\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            });\n        }\n    }, {\n        key: \"terminate\",\n        value: function terminate() {\n            var _this7 = this;\n\n            return this.getLastJobExecution().then(function () {\n                return _this7.jobsManger.terminate(_this7.jobInstance).then(function () {\n                    _this7.terminated = true;\n                    _this7.config.onJobTerminated.call(_this7.config.callbacksThisArg || _this7, _this7.lastJobExecution);\n                    _this7.jobsManger.deregisterJobExecutionListener(_this7);\n\n                    return _this7.lastJobExecution;\n                });\n            }).catch(function (e) {\n                _sdUtils.log.error(e);\n            });\n        }\n    }]);\n\n    return JobInstanceManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./engine/job-execution-listener\":39,\"./engine/job-instance\":41,\"./engine/job-status\":51,\"sd-utils\":\"sd-utils\"}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobWorker = exports.JobWorker = function () {\n    function JobWorker(url, defaultListener, onError) {\n        _classCallCheck(this, JobWorker);\n\n        this.listeners = {};\n\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function () {};\n        if (onError) {\n            this.worker.onerror = onError;\n        }\n\n        this.worker.onmessage = function (event) {\n            if (event.data instanceof Object && event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if (listener.deserializer) {\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        };\n    }\n\n    _createClass(JobWorker, [{\n        key: 'sendQuery',\n        value: function sendQuery() {\n            if (arguments.length < 1) {\n                throw new TypeError('JobWorker.sendQuery takes at least one argument');\n            }\n            this.worker.postMessage({\n                'queryMethod': arguments[0],\n                'queryArguments': Array.prototype.slice.call(arguments, 1)\n            });\n        }\n    }, {\n        key: 'runJob',\n        value: function runJob(jobName, jobParametersValues, dataDTO) {\n            this.sendQuery('runJob', jobName, jobParametersValues, dataDTO);\n        }\n    }, {\n        key: 'executeJob',\n        value: function executeJob(jobExecutionId) {\n            this.sendQuery('executeJob', jobExecutionId);\n        }\n    }, {\n        key: 'recompute',\n        value: function recompute(dataDTO, ruleNames, evalCode, evalNumeric) {\n            this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric);\n        }\n    }, {\n        key: 'postMessage',\n        value: function postMessage(message) {\n            this.worker.postMessage(message);\n        }\n    }, {\n        key: 'terminate',\n        value: function terminate() {\n            this.worker.terminate();\n        }\n    }, {\n        key: 'addListener',\n        value: function addListener(name, listener, thisArg, deserializer) {\n            this.listeners[name] = {\n                fn: listener,\n                thisArg: thisArg || this,\n                deserializer: deserializer\n            };\n        }\n    }, {\n        key: 'removeListener',\n        value: function removeListener(name) {\n            delete this.listeners[name];\n        }\n    }]);\n\n    return JobWorker;\n}();\n\n},{}],60:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.JobsManager = exports.JobsManagerConfig = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\");\n\nvar _jobLauncher = require(\"./engine/job-launcher\");\n\nvar _jobWorker = require(\"./job-worker\");\n\nvar _jobExecutionListener = require(\"./engine/job-execution-listener\");\n\nvar _jobParameters = require(\"./engine/job-parameters\");\n\nvar _idbJobRepository = require(\"./engine/job-repository/idb-job-repository\");\n\nvar _jobExecutionFlag = require(\"./engine/job-execution-flag\");\n\nvar _recomputeJob = require(\"./configurations/recompute/recompute-job\");\n\nvar _probabilisticSensitivityAnalysisJob = require(\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\");\n\nvar _timeoutJobRepository = require(\"./engine/job-repository/timeout-job-repository\");\n\nvar _tornadoDiagramJob = require(\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\");\n\nvar _jobStatus = require(\"./engine/job-status\");\n\nvar _simpleJobRepository = require(\"./engine/job-repository/simple-job-repository\");\n\nvar _leagueTableJob = require(\"./configurations/league-table/league-table-job\");\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar JobsManagerConfig = exports.JobsManagerConfig = function JobsManagerConfig(custom) {\n    _classCallCheck(this, JobsManagerConfig);\n\n    this.workerUrl = null;\n    this.repositoryType = 'idb';\n    this.clearRepository = false;\n\n    if (custom) {\n        _sdUtils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar JobsManager = exports.JobsManager = function (_JobExecutionListener) {\n    _inherits(JobsManager, _JobExecutionListener);\n\n    function JobsManager(expressionsEvaluator, objectiveRulesManager, config) {\n        _classCallCheck(this, JobsManager);\n\n        var _this = _possibleConstructorReturn(this, (JobsManager.__proto__ || Object.getPrototypeOf(JobsManager)).call(this));\n\n        _this.jobExecutionListeners = [];\n        _this.afterJobExecutionPromiseResolves = {};\n        _this.jobInstancesToTerminate = {};\n\n        _this.setConfig(config);\n        _this.expressionEngine = expressionsEvaluator.expressionEngine;\n        _this.expressionsEvaluator = expressionsEvaluator;\n        _this.objectiveRulesManager = objectiveRulesManager;\n\n        _this.useWorker = !!_this.config.workerUrl;\n        if (_this.useWorker) {\n            _this.initWorker(_this.config.workerUrl);\n        }\n\n        _this.initRepository();\n\n        _this.registerJobs();\n\n        _this.jobLauncher = new _jobLauncher.JobLauncher(_this.jobRepository, _this.jobWorker, function (data) {\n            return _this.serializeData(data);\n        });\n        return _this;\n    }\n\n    _createClass(JobsManager, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            this.config = new JobsManagerConfig(config);\n            return this;\n        }\n    }, {\n        key: \"initRepository\",\n        value: function initRepository() {\n            if (this.config.repositoryType === 'idb') {\n                this.jobRepository = new _idbJobRepository.IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n            } else if ('timeout') {\n                this.jobRepository = new _timeoutJobRepository.TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n            } else if ('simple') {\n                this.jobRepository = new _simpleJobRepository.SimpleJobRepository(this.expressionEngine.getJsonReviver());\n            } else {\n                _sdUtils.log.error('JobsManager configuration error! Unknown repository type: ' + this.config.repositoryType + '. Using default: idb');\n                this.config.repositoryType = 'idb';\n                this.initRepository();\n            }\n        }\n    }, {\n        key: \"serializeData\",\n        value: function serializeData(data) {\n            return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n        }\n    }, {\n        key: \"getProgress\",\n        value: function getProgress(jobExecutionOrId) {\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n            return this.jobRepository.getJobExecutionProgress(id);\n        }\n    }, {\n        key: \"getResult\",\n        value: function getResult(jobInstance) {\n            return this.jobRepository.getJobResultByInstance(jobInstance);\n        }\n    }, {\n        key: \"run\",\n        value: function run(jobName, jobParametersValues, data) {\n            var _this2 = this;\n\n            var resolvePromiseAfterJobIsLaunched = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(function (jobExecution) {\n                if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                    return jobExecution;\n                }\n                //job was delegated to worker and is still running\n\n                return new Promise(function (resolve, reject) {\n                    _this2.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n                });\n            });\n        }\n    }, {\n        key: \"execute\",\n        value: function execute(jobExecutionOrId) {\n            return this.jobLauncher.execute(jobExecutionOrId);\n        }\n    }, {\n        key: \"stop\",\n        value: function stop(jobExecutionOrId) {\n            var _this3 = this;\n\n            var id = jobExecutionOrId;\n            if (!_sdUtils.Utils.isString(jobExecutionOrId)) {\n                id = jobExecutionOrId.id;\n            }\n\n            return this.jobRepository.getJobExecutionById(id).then(function (jobExecution) {\n                if (!jobExecution) {\n                    _sdUtils.log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                    return null;\n                }\n                if (!jobExecution.isRunning()) {\n                    _sdUtils.log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                    return jobExecution;\n                }\n\n                return _this3.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                    return jobExecution;\n                });\n            });\n        }\n\n        /*stop job execution if running and delete job instance from repository*/\n\n    }, {\n        key: \"terminate\",\n        value: function terminate(jobInstance) {\n            var _this4 = this;\n\n            return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(function (jobExecution) {\n                if (jobExecution) {\n                    if (jobExecution.isRunning()) {\n                        return _this4.jobRepository.saveJobExecutionFlag(jobExecution.id, _jobExecutionFlag.JOB_EXECUTION_FLAG.STOP).then(function () {\n                            return jobExecution;\n                        });\n                    } else {\n                        return _this4.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                    }\n                }\n            }).then(function () {\n                _this4.jobInstancesToTerminate[jobInstance.id] = jobInstance;\n            });\n        }\n    }, {\n        key: \"getJobByName\",\n        value: function getJobByName(jobName) {\n            return this.jobRepository.getJobByName(jobName);\n        }\n    }, {\n        key: \"createJobParameters\",\n        value: function createJobParameters(jobName, jobParametersValues) {\n            var job = this.jobRepository.getJobByName(jobName);\n            return job.createJobParameters(jobParametersValues);\n        }\n\n        /*Returns a promise*/\n\n    }, {\n        key: \"getLastJobExecution\",\n        value: function getLastJobExecution(jobName, jobParameters) {\n            if (this.useWorker) {\n                return this.jobWorker;\n            }\n            if (!(jobParameters instanceof _jobParameters.JobParameters)) {\n                jobParameters = this.createJobParameters(jobParameters);\n            }\n            return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n        }\n    }, {\n        key: \"initWorker\",\n        value: function initWorker(workerUrl) {\n            var _arguments = arguments,\n                _this5 = this;\n\n            this.jobWorker = new _jobWorker.JobWorker(workerUrl, function () {\n                _sdUtils.log.error('error in worker', _arguments);\n            });\n            var argsDeserializer = function argsDeserializer(args) {\n                return [_this5.jobRepository.reviveJobExecution(args[0])];\n            };\n\n            this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n            this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n        }\n    }, {\n        key: \"registerJobs\",\n        value: function registerJobs() {\n\n            var sensitivityAnalysisJob = new _sensitivityAnalysisJob.SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            var probabilisticSensitivityAnalysisJob = new _probabilisticSensitivityAnalysisJob.ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n            if (!_sdUtils.Utils.isWorker()) {\n                sensitivityAnalysisJob.setBatchSize(1);\n                probabilisticSensitivityAnalysisJob.setBatchSize(1);\n            }\n\n            this.registerJob(sensitivityAnalysisJob);\n            this.registerJob(new _tornadoDiagramJob.TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(probabilisticSensitivityAnalysisJob);\n            this.registerJob(new _recomputeJob.RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n            this.registerJob(new _leagueTableJob.LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        }\n    }, {\n        key: \"registerJob\",\n        value: function registerJob(job) {\n            this.jobRepository.registerJob(job);\n            job.registerExecutionListener(this);\n        }\n    }, {\n        key: \"registerJobExecutionListener\",\n        value: function registerJobExecutionListener(listener) {\n            this.jobExecutionListeners.push(listener);\n        }\n    }, {\n        key: \"deregisterJobExecutionListener\",\n        value: function deregisterJobExecutionListener(listener) {\n            var index = this.jobExecutionListeners.indexOf(listener);\n            if (index > -1) {\n                this.jobExecutionListeners.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"beforeJob\",\n        value: function beforeJob(jobExecution) {\n            _sdUtils.log.debug(\"beforeJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.beforeJob(jobExecution);\n            });\n        }\n    }, {\n        key: \"afterJob\",\n        value: function afterJob(jobExecution) {\n            _sdUtils.log.debug(\"afterJob\", this.useWorker, jobExecution);\n            this.jobExecutionListeners.forEach(function (l) {\n                return l.afterJob(jobExecution);\n            });\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n            if (promiseResolve) {\n                promiseResolve(jobExecution);\n            }\n\n            if (this.jobInstancesToTerminate[jobExecution.jobInstance.id]) {\n                this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n            }\n        }\n    }, {\n        key: \"onJobFatalError\",\n        value: function onJobFatalError(jobExecutionId, error) {\n            var _this6 = this;\n\n            var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n            if (promiseResolve) {\n                this.jobRepository.getJobExecutionById(jobExecutionId).then(function (jobExecution) {\n                    jobExecution.status = _jobStatus.JOB_STATUS.FAILED;\n                    if (error) {\n                        jobExecution.failureExceptions.push(error);\n                    }\n\n                    return _this6.jobRepository.saveJobExecution(jobExecution).then(function () {\n                        promiseResolve(jobExecution);\n                    });\n                }).catch(function (e) {\n                    _sdUtils.log.error(e);\n                });\n            }\n            _sdUtils.log.debug('onJobFatalError', jobExecutionId, error);\n        }\n    }]);\n\n    return JobsManager;\n}(_jobExecutionListener.JobExecutionListener);\n\n},{\"./configurations/league-table/league-table-job\":8,\"./configurations/recompute/recompute-job\":11,\"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\":13,\"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\":18,\"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\":25,\"./engine/job-execution-flag\":38,\"./engine/job-execution-listener\":39,\"./engine/job-launcher\":43,\"./engine/job-parameters\":45,\"./engine/job-repository/idb-job-repository\":46,\"./engine/job-repository/simple-job-repository\":48,\"./engine/job-repository/timeout-job-repository\":49,\"./engine/job-status\":51,\"./job-worker\":59,\"sd-utils\":\"sd-utils\"}],61:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRulesManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _rules = require(\"./rules\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar model = _interopRequireWildcard(_sdModel);\n\nvar _minMaxRule = require(\"./rules/min-max-rule\");\n\nvar _maxMinRule = require(\"./rules/max-min-rule\");\n\nvar _minMinRule = require(\"./rules/min-min-rule\");\n\nvar _maxMaxRule = require(\"./rules/max-max-rule\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectiveRulesManager = exports.ObjectiveRulesManager = function () {\n    function ObjectiveRulesManager(expressionEngine, currentRuleName) {\n        _classCallCheck(this, ObjectiveRulesManager);\n\n        this.ruleByName = {};\n        this.rules = [];\n        this.flipPair = {};\n        this.payoffIndex = 0;\n\n        this.expressionEngine = expressionEngine;\n        this.addRule(new _rules.ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new _rules.ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new _rules.MaxiMinRule(expressionEngine));\n        this.addRule(new _rules.MaxiMaxRule(expressionEngine));\n        this.addRule(new _rules.MiniMinRule(expressionEngine));\n        this.addRule(new _rules.MiniMaxRule(expressionEngine));\n\n        var minMax = new _minMaxRule.MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        var maxMin = new _maxMinRule.MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        var minMin = new _minMinRule.MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        var maxMax = new _maxMaxRule.MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n    }\n\n    _createClass(ObjectiveRulesManager, [{\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex || 0;\n        }\n    }, {\n        key: \"addRule\",\n        value: function addRule(rule) {\n            this.ruleByName[rule.name] = rule;\n            this.rules.push(rule);\n        }\n    }, {\n        key: \"isRuleName\",\n        value: function isRuleName(ruleName) {\n            return !!this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"setCurrentRuleByName\",\n        value: function setCurrentRuleByName(ruleName) {\n            this.currentRule = this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"getObjectiveRuleByName\",\n        value: function getObjectiveRuleByName(ruleName) {\n            return this.ruleByName[ruleName];\n        }\n    }, {\n        key: \"flipRule\",\n        value: function flipRule() {\n            var flipped = this.flipPair[this.currentRule.name];\n            if (flipped) {\n                this.currentRule = flipped;\n            }\n        }\n    }, {\n        key: \"updateDefaultCriterion1Weight\",\n        value: function updateDefaultCriterion1Weight(defaultCriterion1Weight) {\n            this.rules.filter(function (r) {\n                return r.multiCriteria;\n            }).forEach(function (r) {\n                return r.setDefaultCriterion1Weight(parseFloat(defaultCriterion1Weight));\n            });\n        }\n    }, {\n        key: \"recompute\",\n        value: function recompute(dataModel, allRules) {\n            var _this = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            var startTime = new Date().getTime();\n            _sdUtils.log.trace('recomputing rules, all: ' + allRules);\n\n            dataModel.getRoots().forEach(function (n) {\n                _this.recomputeTree(n, allRules, decisionPolicy);\n            });\n\n            var time = new Date().getTime() - startTime / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"recomputeTree\",\n        value: function recomputeTree(root, allRules) {\n            var _this2 = this;\n\n            var decisionPolicy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            _sdUtils.log.trace('recomputing rules for tree ...', root);\n\n            var startTime = new Date().getTime();\n\n            var rules = [this.currentRule];\n            if (allRules) {\n                rules = this.rules;\n            }\n\n            rules.forEach(function (rule) {\n                rule.setPayoffIndex(_this2.payoffIndex);\n                rule.setDecisionPolicy(decisionPolicy);\n                rule.computePayoff(root);\n                rule.computeOptimal(root);\n                rule.clearDecisionPolicy();\n            });\n\n            var time = (new Date().getTime() - startTime) / 1000;\n            _sdUtils.log.trace('recomputation took ' + time + 's');\n\n            return this;\n        }\n    }, {\n        key: \"getNodeDisplayValue\",\n        value: function getNodeDisplayValue(node, name) {\n            return node.computedValue(this.currentRule.name, name);\n        }\n    }, {\n        key: \"getEdgeDisplayValue\",\n        value: function getEdgeDisplayValue(e, name) {\n            if (name === 'probability') {\n                if (e.parentNode instanceof model.domain.DecisionNode) {\n                    return e.computedValue(this.currentRule.name, 'probability');\n                }\n                if (e.parentNode instanceof model.domain.ChanceNode) {\n                    return e.computedBaseProbability();\n                }\n                return null;\n            }\n            if (name === 'payoff') {\n                if (this.currentRule.multiCriteria) {\n                    return e.computedValue(null, 'payoff');\n                } else {\n                    return e.computedValue(null, 'payoff[' + this.payoffIndex + ']');\n                }\n            }\n            if (name === 'optimal') {\n                return e.computedValue(this.currentRule.name, 'optimal');\n            }\n        }\n    }, {\n        key: \"addFlipPair\",\n        value: function addFlipPair(rule1, rule2) {\n            this.flipPair[rule1.name] = rule2;\n            this.flipPair[rule2.name] = rule1;\n        }\n    }]);\n\n    return ObjectiveRulesManager;\n}();\n\n},{\"./rules\":64,\"./rules/max-max-rule\":65,\"./rules/max-min-rule\":66,\"./rules/min-max-rule\":69,\"./rules/min-min-rule\":70,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],62:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMaximizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value maximization rule*/\nvar ExpectedValueMaximizationRule = exports.ExpectedValueMaximizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMaximizationRule, _ObjectiveRule);\n\n    function ExpectedValueMaximizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMaximizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMaximizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMaximizationRule)).call(this, ExpectedValueMaximizationRule.NAME, true, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMaximizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMaximizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMaximizationRule.NAME = 'expected-value-maximization';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],63:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ExpectedValueMinimizationRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*expected value minimization rule*/\nvar ExpectedValueMinimizationRule = exports.ExpectedValueMinimizationRule = function (_ObjectiveRule) {\n    _inherits(ExpectedValueMinimizationRule, _ObjectiveRule);\n\n    function ExpectedValueMinimizationRule(expressionEngine) {\n        _classCallCheck(this, ExpectedValueMinimizationRule);\n\n        return _possibleConstructorReturn(this, (ExpectedValueMinimizationRule.__proto__ || Object.getPrototypeOf(ExpectedValueMinimizationRule)).call(this, ExpectedValueMinimizationRule.NAME, false, expressionEngine));\n    }\n\n    //  payoff - parent edge payoff\n\n\n    _createClass(ExpectedValueMinimizationRule, [{\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this2.subtract(_this2.computedPayoff(node), payoff).equals(_this2.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this2.cValue(e, 'optimal', true);\n                    _this2.computeOptimal(e.childNode, _this2.basePayoff(e), _this2.multiply(probabilityToEnter, _this2.cValue(e, 'probability')));\n                } else {\n                    _this2.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return ExpectedValueMinimizationRule;\n}(_objectiveRule.ObjectiveRule);\n\nExpectedValueMinimizationRule.NAME = 'expected-value-minimization';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectiveRule = require('./objective-rule');\n\nObject.keys(_objectiveRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _objectiveRule[key];\n    }\n  });\n});\n\nvar _expectedValueMaximizationRule = require('./expected-value-maximization-rule');\n\nObject.keys(_expectedValueMaximizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMaximizationRule[key];\n    }\n  });\n});\n\nvar _expectedValueMinimizationRule = require('./expected-value-minimization-rule');\n\nObject.keys(_expectedValueMinimizationRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _expectedValueMinimizationRule[key];\n    }\n  });\n});\n\nvar _maxiMaxRule = require('./maxi-max-rule');\n\nObject.keys(_maxiMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMaxRule[key];\n    }\n  });\n});\n\nvar _maxiMinRule = require('./maxi-min-rule');\n\nObject.keys(_maxiMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _maxiMinRule[key];\n    }\n  });\n});\n\nvar _miniMaxRule = require('./mini-max-rule');\n\nObject.keys(_miniMaxRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMaxRule[key];\n    }\n  });\n});\n\nvar _miniMinRule = require('./mini-min-rule');\n\nObject.keys(_miniMinRule).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _miniMinRule[key];\n    }\n  });\n});\n\n},{\"./expected-value-maximization-rule\":62,\"./expected-value-minimization-rule\":63,\"./maxi-max-rule\":67,\"./maxi-min-rule\":68,\"./mini-max-rule\":71,\"./mini-min-rule\":72,\"./objective-rule\":74}],65:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMaxRule = exports.MaxMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMaxRule, _MultiCriteriaRule);\n\n    function MaxMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxMaxRule.__proto__ || Object.getPrototypeOf(MaxMaxRule)).call(this, MaxMaxRule.NAME, [1, 1], expressionEngine));\n    }\n\n    return MaxMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMaxRule.NAME = 'max-max';\n\n},{\"./multi-criteria-rule\":73}],66:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaxMinRule = exports.MaxMinRule = function (_MultiCriteriaRule) {\n    _inherits(MaxMinRule, _MultiCriteriaRule);\n\n    function MaxMinRule(expressionEngine) {\n        _classCallCheck(this, MaxMinRule);\n\n        return _possibleConstructorReturn(this, (MaxMinRule.__proto__ || Object.getPrototypeOf(MaxMinRule)).call(this, MaxMinRule.NAME, [1, -1], expressionEngine));\n    }\n\n    return MaxMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMaxMinRule.NAME = 'max-min';\n\n},{\"./multi-criteria-rule\":73}],67:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-max rule*/\nvar MaxiMaxRule = exports.MaxiMaxRule = function (_ObjectiveRule) {\n    _inherits(MaxiMaxRule, _ObjectiveRule);\n\n    function MaxiMaxRule(expressionEngine) {\n        _classCallCheck(this, MaxiMaxRule);\n\n        return _possibleConstructorReturn(this, (MaxiMaxRule.__proto__ || Object.getPrototypeOf(MaxiMaxRule)).call(this, MaxiMaxRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMaxRule.NAME = 'maxi-max';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],68:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MaxiMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*maxi-min rule*/\nvar MaxiMinRule = exports.MaxiMinRule = function (_ObjectiveRule) {\n    _inherits(MaxiMinRule, _ObjectiveRule);\n\n    function MaxiMinRule(expressionEngine) {\n        _classCallCheck(this, MaxiMinRule);\n\n        return _possibleConstructorReturn(this, (MaxiMinRule.__proto__ || Object.getPrototypeOf(MaxiMinRule)).call(this, MaxiMinRule.NAME, true, expressionEngine));\n    }\n\n    _createClass(MaxiMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MaxiMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMaxiMinRule.NAME = 'maxi-min';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],69:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMaxRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMaxRule = exports.MinMaxRule = function (_MultiCriteriaRule) {\n    _inherits(MinMaxRule, _MultiCriteriaRule);\n\n    function MinMaxRule(expressionEngine) {\n        _classCallCheck(this, MinMaxRule);\n\n        return _possibleConstructorReturn(this, (MinMaxRule.__proto__ || Object.getPrototypeOf(MinMaxRule)).call(this, MinMaxRule.NAME, [-1, 1], expressionEngine));\n    }\n\n    return MinMaxRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMaxRule.NAME = 'min-max';\n\n},{\"./multi-criteria-rule\":73}],70:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MinMinRule = undefined;\n\nvar _multiCriteriaRule = require(\"./multi-criteria-rule\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MinMinRule = exports.MinMinRule = function (_MultiCriteriaRule) {\n    _inherits(MinMinRule, _MultiCriteriaRule);\n\n    function MinMinRule(expressionEngine) {\n        _classCallCheck(this, MinMinRule);\n\n        return _possibleConstructorReturn(this, (MinMinRule.__proto__ || Object.getPrototypeOf(MinMinRule)).call(this, MinMinRule.NAME, [-1, -1], expressionEngine));\n    }\n\n    return MinMinRule;\n}(_multiCriteriaRule.MultiCriteriaRule);\n\nMinMinRule.NAME = 'min-min';\n\n},{\"./multi-criteria-rule\":73}],71:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMaxRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-max rule*/\nvar MiniMaxRule = exports.MiniMaxRule = function (_ObjectiveRule) {\n    _inherits(MiniMaxRule, _ObjectiveRule);\n\n    function MiniMaxRule(expressionEngine) {\n        _classCallCheck(this, MiniMaxRule);\n\n        return _possibleConstructorReturn(this, (MiniMaxRule.__proto__ || Object.getPrototypeOf(MiniMaxRule)).call(this, MiniMaxRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMaxRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) < bestChildPayoff ? 0.0 : 1.0 / bestCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.maxBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMaxRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMaxRule.NAME = 'mini-max';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],72:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MiniMinRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _objectiveRule = require('./objective-rule');\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*mini-min rule*/\nvar MiniMinRule = exports.MiniMinRule = function (_ObjectiveRule) {\n    _inherits(MiniMinRule, _ObjectiveRule);\n\n    function MiniMinRule(expressionEngine) {\n        _classCallCheck(this, MiniMinRule);\n\n        return _possibleConstructorReturn(this, (MiniMinRule.__proto__ || Object.getPrototypeOf(MiniMinRule)).call(this, MiniMinRule.NAME, false, expressionEngine));\n    }\n\n    _createClass(MiniMinRule, [{\n        key: 'modifyChanceProbability',\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n            var _this2 = this;\n\n            edges.forEach(function (e) {\n                _this2.clearComputedValues(e);\n                _this2.cValue(e, 'probability', _this2.computedPayoff(e.childNode) > worstChildPayoff ? 0.0 : 1.0 / worstCount);\n            });\n        }\n\n        //  payoff - parent edge payoff\n\n    }, {\n        key: 'computeOptimal',\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            var optimalEdge = null;\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                optimalEdge = _sdUtils.Utils.minBy(node.childEdges, function (e) {\n                    return _this3.computedPayoff(e.childNode);\n                });\n            }\n\n            node.childEdges.forEach(function (e) {\n                var isOptimal = false;\n                if (optimalEdge) {\n                    isOptimal = _this3.computedPayoff(optimalEdge.childNode).equals(_this3.computedPayoff(e.childNode));\n                } else isOptimal = !!(_this3.subtract(_this3.computedPayoff(node), payoff).equals(_this3.computedPayoff(e.childNode)) || !(node instanceof _sdModel.domain.DecisionNode));\n\n                if (isOptimal) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.basePayoff(e), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MiniMinRule;\n}(_objectiveRule.ObjectiveRule);\n\nMiniMinRule.NAME = 'mini-min';\n\n},{\"./objective-rule\":74,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],73:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultiCriteriaRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _objectiveRule = require(\"./objective-rule\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MultiCriteriaRule = exports.MultiCriteriaRule = function (_ObjectiveRule) {\n    _inherits(MultiCriteriaRule, _ObjectiveRule);\n\n    function MultiCriteriaRule(name, payoffCoeffs, expressionEngine) {\n        _classCallCheck(this, MultiCriteriaRule);\n\n        var _this = _possibleConstructorReturn(this, (MultiCriteriaRule.__proto__ || Object.getPrototypeOf(MultiCriteriaRule)).call(this, name, true, expressionEngine, true));\n\n        _this.criterion1Weight = 1;\n        _this.payoffCoeffs = [1, -1];\n\n        _this.payoffCoeffs = payoffCoeffs;\n\n        return _this;\n    }\n\n    _createClass(MultiCriteriaRule, [{\n        key: \"setDefaultCriterion1Weight\",\n        value: function setDefaultCriterion1Weight(criterion1Weight) {\n            this.criterion1Weight = criterion1Weight;\n        }\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this2 = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n\n            var childrenPayoff = [0, 0];\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = [];\n                    var bestChild = -Infinity;\n\n                    node.childEdges.forEach(function (e, i) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        var childPayoff = _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        var childCombinedPayoff = _this2.cValue(e.childNode, 'combinedPayoff');\n                        if (childCombinedPayoff > bestChild) {\n                            bestChild = childCombinedPayoff;\n                            selectedIndexes = [i];\n                        } else if (bestChild.equals(childCombinedPayoff)) {\n                            selectedIndexes.push(i);\n                        }\n                    });\n\n                    if (this.decisionPolicy) {\n                        selectedIndexes = [];\n                        var decision = _policy.Policy.getDecision(this.decisionPolicy, node);\n                        if (decision) {\n                            selectedIndexes = [decision.decisionValue];\n                        }\n                    }\n\n                    node.childEdges.forEach(function (e, i) {\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    node.childEdges.forEach(function (e) {\n                        var basePayoffs = [_this2.basePayoff(e, 0), _this2.basePayoff(e, 1)];\n                        _this2.computePayoff(e.childNode, basePayoffs, [_this2.add(basePayoffs[0], aggregatedPayoff[0]), _this2.add(basePayoffs[1], aggregatedPayoff[1])]);\n                        _this2.clearComputedValues(e);\n                        _this2.cValue(e, 'probability', _this2.baseProbability(e));\n                    });\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this2.add(sumweight, _this2.cValue(e, 'probability'));\n                });\n\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff.forEach(function (p, i) {\n                            var ep = _this2.cValue(e.childNode, 'payoff[' + i + ']');\n                            childrenPayoff[i] = _this2.add(p, _this2.multiply(_this2.cValue(e, 'probability'), ep).div(sumweight));\n                        });\n                    });\n                }\n            }\n            payoff.forEach(function (p, i) {\n                payoff[i] = _this2.add(p, childrenPayoff[i]);\n            });\n\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff', childrenPayoff);\n            }\n\n            this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n            return this.cValue(node, 'payoff', payoff);\n        }\n    }, {\n        key: \"computeCombinedPayoff\",\n        value: function computeCombinedPayoff(payoff) {\n            // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n            if (this.criterion1Weight === Infinity) {\n                return this.multiply(this.payoffCoeffs[0], payoff[0]);\n            }\n            return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n        }\n\n        //  combinedPayoff - parent edge combinedPayoff\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            var _this3 = this;\n\n            var combinedPayoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var probabilityToEnter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            this.cValue(node, 'optimal', true);\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n            }\n\n            node.childEdges.forEach(function (e) {\n                if (_this3.subtract(_this3.cValue(node, 'combinedPayoff'), combinedPayoff).equals(_this3.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof _sdModel.domain.DecisionNode)) {\n                    _this3.cValue(e, 'optimal', true);\n                    _this3.computeOptimal(e.childNode, _this3.computeCombinedPayoff([_this3.basePayoff(e, 0), _this3.basePayoff(e, 1)]), _this3.multiply(probabilityToEnter, _this3.cValue(e, 'probability')));\n                } else {\n                    _this3.cValue(e, 'optimal', false);\n                }\n            });\n        }\n    }]);\n\n    return MultiCriteriaRule;\n}(_objectiveRule.ObjectiveRule);\n\n},{\"../../policies/policy\":80,\"./objective-rule\":74,\"sd-model\":\"sd-model\"}],74:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectiveRule = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdModel = require(\"sd-model\");\n\nvar _policy = require(\"../../policies/policy\");\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for objective rules*/\nvar ObjectiveRule = exports.ObjectiveRule = function () {\n    function ObjectiveRule(name, maximization, expressionEngine) {\n        var multiCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        _classCallCheck(this, ObjectiveRule);\n\n        this.payoffIndex = 0;\n        this.multiCriteria = false;\n\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    _createClass(ObjectiveRule, [{\n        key: \"setDecisionPolicy\",\n        value: function setDecisionPolicy(decisionPolicy) {\n            this.decisionPolicy = decisionPolicy;\n        }\n    }, {\n        key: \"setPayoffIndex\",\n        value: function setPayoffIndex(payoffIndex) {\n            this.payoffIndex = payoffIndex;\n        }\n    }, {\n        key: \"clearDecisionPolicy\",\n        value: function clearDecisionPolicy() {\n            this.decisionPolicy = null;\n        }\n\n        // should return array of selected children indexes\n\n    }, {\n        key: \"makeDecision\",\n        value: function makeDecision(decisionNode, childrenPayoffs) {\n            var best;\n            if (this.maximization) {\n                best = this.max.apply(this, _toConsumableArray(childrenPayoffs));\n            } else {\n                best = this.min.apply(this, _toConsumableArray(childrenPayoffs));\n            }\n            var selectedIndexes = [];\n            childrenPayoffs.forEach(function (p, i) {\n                if (_sdExpressionEngine.ExpressionEngine.compare(best, p) == 0) {\n                    selectedIndexes.push(i);\n                }\n            });\n            return selectedIndexes;\n        }\n    }, {\n        key: \"_makeDecision\",\n        value: function _makeDecision(decisionNode, childrenPayoffs) {\n            if (this.decisionPolicy) {\n                var decision = _policy.Policy.getDecision(this.decisionPolicy, decisionNode);\n                if (decision) {\n                    return [decision.decisionValue];\n                }\n                return [];\n            }\n            return this.makeDecision(decisionNode, childrenPayoffs);\n        }\n\n        // extension point for changing computed probability of edges in a chance node\n\n    }, {\n        key: \"modifyChanceProbability\",\n        value: function modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {}\n\n        // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n\n    }, {\n        key: \"computePayoff\",\n        value: function computePayoff(node) {\n            var _this = this;\n\n            var payoff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var aggregatedPayoff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var childrenPayoff = 0;\n            if (node.childEdges.length) {\n                if (node instanceof _sdModel.domain.DecisionNode) {\n\n                    var selectedIndexes = this._makeDecision(node, node.childEdges.map(function (e) {\n                        return _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                    }));\n                    node.childEdges.forEach(function (e, i) {\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                    });\n                } else {\n                    var bestChild = -Infinity;\n                    var bestCount = 1;\n                    var worstChild = Infinity;\n                    var worstCount = 1;\n\n                    node.childEdges.forEach(function (e) {\n                        var childPayoff = _this.computePayoff(e.childNode, _this.basePayoff(e), _this.add(_this.basePayoff(e), aggregatedPayoff));\n                        if (childPayoff < worstChild) {\n                            worstChild = childPayoff;\n                            worstCount = 1;\n                        } else if (childPayoff.equals(worstChild)) {\n                            worstCount++;\n                        }\n                        if (childPayoff > bestChild) {\n                            bestChild = childPayoff;\n                            bestCount = 1;\n                        } else if (childPayoff.equals(bestChild)) {\n                            bestCount++;\n                        }\n\n                        _this.clearComputedValues(e);\n                        _this.cValue(e, 'probability', _this.baseProbability(e));\n                    });\n                    this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n                }\n\n                var sumweight = 0;\n                node.childEdges.forEach(function (e) {\n                    sumweight = _this.add(sumweight, _this.cValue(e, 'probability'));\n                });\n\n                // console.log(payoff,node.childEdges,'sumweight',sumweight);\n                if (sumweight > 0) {\n                    node.childEdges.forEach(function (e) {\n                        childrenPayoff = _this.add(childrenPayoff, _this.multiply(_this.cValue(e, 'probability'), _this.computedPayoff(e.childNode)).div(sumweight));\n                    });\n                }\n            }\n\n            payoff = this.add(payoff, childrenPayoff);\n            this.clearComputedValues(node);\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                this.cValue(node, 'aggregatedPayoff' + '[' + this.payoffIndex + ']', aggregatedPayoff);\n                this.cValue(node, 'probabilityToEnter', 0); //initial value\n            } else {\n                this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n            }\n\n            return this.computedPayoff(node, payoff);\n        }\n\n        // koloruje optymalne ścieżki\n\n    }, {\n        key: \"computeOptimal\",\n        value: function computeOptimal(node) {\n            throw 'computeOptimal function not implemented for rule: ' + this.name;\n        }\n\n        /* get or set computed payoff*/\n\n    }, {\n        key: \"computedPayoff\",\n        value: function computedPayoff(node, value) {\n            return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value);\n        }\n\n        /*Get or set object's computed value for current rule*/\n\n    }, {\n        key: \"cValue\",\n        value: function cValue(object, fieldPath, value) {\n            // if(fieldPath.trim() === 'payoff'){\n            //     fieldPath += '[' + this.payoffIndex + ']';\n            // }\n\n            return object.computedValue(this.name, fieldPath, value);\n        }\n    }, {\n        key: \"baseProbability\",\n        value: function baseProbability(edge) {\n            return edge.computedBaseProbability();\n        }\n    }, {\n        key: \"basePayoff\",\n        value: function basePayoff(edge, payoffIndex) {\n            return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n        }\n    }, {\n        key: \"clearComputedValues\",\n        value: function clearComputedValues(object) {\n            object.clearComputedValues(this.name);\n        }\n    }, {\n        key: \"add\",\n        value: function add(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.add(a, b);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.subtract(a, b);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.divide(a, b);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            return _sdExpressionEngine.ExpressionEngine.multiply(a, b);\n        }\n    }, {\n        key: \"max\",\n        value: function max() {\n            return _sdExpressionEngine.ExpressionEngine.max.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }, {\n        key: \"min\",\n        value: function min() {\n            return _sdExpressionEngine.ExpressionEngine.min.apply(_sdExpressionEngine.ExpressionEngine, arguments);\n        }\n    }]);\n\n    return ObjectiveRule;\n}();\n\n},{\"../../policies/policy\":80,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],75:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlipSubtree = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require('sd-model');\n\nvar _sdExpressionEngine = require('sd-expression-engine');\n\nvar _sdUtils = require('sd-utils');\n\nvar _operation = require('./operation');\n\nvar _treeValidator = require('../validation/tree-validator');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/*Subtree flipping operation*/\nvar FlipSubtree = exports.FlipSubtree = function (_Operation) {\n    _inherits(FlipSubtree, _Operation);\n\n    function FlipSubtree(data, expressionEngine) {\n        _classCallCheck(this, FlipSubtree);\n\n        var _this = _possibleConstructorReturn(this, (FlipSubtree.__proto__ || Object.getPrototypeOf(FlipSubtree)).call(this, FlipSubtree.$NAME));\n\n        _this.data = data;\n        _this.expressionEngine = expressionEngine;\n        _this.treeValidator = new _treeValidator.TreeValidator(expressionEngine);\n        return _this;\n    }\n\n    _createClass(FlipSubtree, [{\n        key: 'isApplicable',\n        value: function isApplicable(object) {\n            return object instanceof _sdModel.domain.ChanceNode;\n        }\n    }, {\n        key: 'canPerform',\n        value: function canPerform(node) {\n            if (!this.isApplicable(node)) {\n                return false;\n            }\n\n            if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) {\n                //check if the whole subtree is proper\n                return false;\n            }\n\n            if (node.childEdges.length < 1) {\n                return false;\n            }\n\n            var grandchildrenNumber = null;\n            var grandchildrenEdgeLabels = [];\n            var childrenEdgeLabelsSet = new Set();\n            var grandchildrenEdgeLabelsSet;\n            if (!node.childEdges.every(function (e) {\n\n                var child = e.childNode;\n                if (!(child instanceof _sdModel.domain.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) {\n                    // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(function (ge) {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) {\n                        //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every(function (ge, i) {\n                    return grandchildrenEdgeLabels[i] === ge.name.trim();\n                })) {\n                    return false;\n                }\n\n                return true;\n            })) {\n\n                return false;\n            }\n\n            return true;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(root) {\n            var _this2 = this;\n\n            var rootClone = this.data.cloneSubtree(root, true);\n            var oldChildrenNumber = root.childEdges.length;\n            var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n            var childrenNumber = oldGrandChildrenNumber;\n            var grandChildrenNumber = oldChildrenNumber;\n\n            var callbacksDisabled = this.data.callbacksDisabled;\n            this.data.callbacksDisabled = true;\n\n            var childX = root.childEdges[0].childNode.location.x;\n            var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n            var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n            var extentY = bottomY - topY;\n            var stepY = extentY / (childrenNumber + 1);\n\n            root.childEdges.slice().forEach(function (e) {\n                return _this2.data.removeNode(e.childNode);\n            });\n\n            for (var i = 0; i < childrenNumber; i++) {\n                var child = new _sdModel.domain.ChanceNode(new _sdModel.domain.Point(childX, topY + (i + 1) * stepY));\n                var edge = this.data.addNode(child, root);\n                edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n                edge.probability = 0;\n\n                for (var j = 0; j < grandChildrenNumber; j++) {\n                    var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n                    var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                    grandChildEdge.name = rootClone.childEdges[j].name;\n                    grandChildEdge.payoff = _sdExpressionEngine.ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                    grandChildEdge.probability = _sdExpressionEngine.ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                    edge.probability = _sdExpressionEngine.ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n                }\n\n                var divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                    return _sdExpressionEngine.ExpressionEngine.divide(p, edge.probability);\n                };\n                if (edge.probability.equals(0)) {\n                    var prob = _sdExpressionEngine.ExpressionEngine.divide(1, grandChildrenNumber);\n                    divideGrandChildEdgeProbability = function divideGrandChildEdgeProbability(p) {\n                        return prob;\n                    };\n                }\n\n                var probabilitySum = 0.0;\n                child.childEdges.forEach(function (grandChildEdge) {\n                    grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                    grandChildEdge.probability = _this2.expressionEngine.serialize(grandChildEdge.probability);\n                });\n\n                this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n                edge.probability = this.expressionEngine.serialize(edge.probability);\n            }\n            this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n            this.data.callbacksDisabled = callbacksDisabled;\n            this.data._fireNodeAddedCallback();\n        }\n    }, {\n        key: '_normalizeProbabilitiesAfterFlip',\n        value: function _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum) {\n            var _this3 = this;\n\n            if (!probabilitySum) {\n                probabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, e.probability);\n                });\n            }\n            if (!probabilitySum.equals(1)) {\n                _sdUtils.log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n                var newProbabilitySum = 0.0;\n                var cf = 1000000000000; //10^12\n                var prec = 12;\n                childEdges.forEach(function (e) {\n                    e.probability = parseInt(_sdExpressionEngine.ExpressionEngine.round(e.probability, prec) * cf);\n                    newProbabilitySum = newProbabilitySum + e.probability;\n                });\n                var rest = cf - newProbabilitySum;\n                _sdUtils.log.info('Normalizing with rounding to precision: ' + prec, rest);\n                childEdges[0].probability = _sdExpressionEngine.ExpressionEngine.add(rest, childEdges[0].probability);\n                newProbabilitySum = 0.0;\n                childEdges.forEach(function (e) {\n                    e.probability = _this3.expressionEngine.serialize(_sdExpressionEngine.ExpressionEngine.divide(parseInt(e.probability), cf));\n                });\n            }\n        }\n    }]);\n\n    return FlipSubtree;\n}(_operation.Operation);\n\nFlipSubtree.$NAME = 'flipSubtree';\n\n},{\"../validation/tree-validator\":83,\"./operation\":76,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],76:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Base class for complex operations on tree structure*/\nvar Operation = exports.Operation = function () {\n    function Operation(name) {\n        _classCallCheck(this, Operation);\n\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n\n\n    _createClass(Operation, [{\n        key: 'isApplicable',\n        value: function isApplicable() {\n            throw 'isApplicable function not implemented for operation: ' + this.name;\n        }\n\n        //check if can perform operation for applicable object\n\n    }, {\n        key: 'canPerform',\n        value: function canPerform(object) {\n            throw 'canPerform function not implemented for operation: ' + this.name;\n        }\n    }, {\n        key: 'perform',\n        value: function perform(object) {\n            throw 'perform function not implemented for operation: ' + this.name;\n        }\n    }]);\n\n    return Operation;\n}();\n\n},{}],77:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.OperationsManager = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _flipSubtree = require(\"./flip-subtree\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar OperationsManager = exports.OperationsManager = function () {\n    function OperationsManager(data, expressionEngine) {\n        _classCallCheck(this, OperationsManager);\n\n        this.operations = [];\n        this.operationByName = {};\n\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new _flipSubtree.FlipSubtree(data, expressionEngine));\n    }\n\n    _createClass(OperationsManager, [{\n        key: \"registerOperation\",\n        value: function registerOperation(operation) {\n            this.operations.push(operation);\n            this.operationByName[operation.name] = operation;\n        }\n    }, {\n        key: \"getOperationByName\",\n        value: function getOperationByName(name) {\n            return this.operationByName[name];\n        }\n    }, {\n        key: \"operationsForObject\",\n        value: function operationsForObject(object) {\n            return this.operations.filter(function (op) {\n                return op.isApplicable(object);\n            });\n        }\n    }]);\n\n    return OperationsManager;\n}();\n\n},{\"./flip-subtree\":75}],78:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Decision = exports.Decision = function () {\n    //index of  selected edge\n    function Decision(node, decisionValue) {\n        _classCallCheck(this, Decision);\n\n        this.children = [];\n\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    _createClass(Decision, [{\n        key: 'addDecision',\n        value: function addDecision(node, decisionValue) {\n            var decision = new Decision(node, decisionValue);\n            this.children.push(decision);\n            this.key = Decision.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decisionNode) {\n            return Decision.getDecision(this, decisionNode);\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Decision.toDecisionString(this, indent);\n        }\n    }], [{\n        key: 'generateKey',\n        value: function generateKey(decision) {\n            var keyProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$id';\n\n            var e = decision.node.childEdges[decision.decisionValue];\n            var key = decision.node[keyProperty] + \":\" + (e[keyProperty] ? e[keyProperty] : decision.decisionValue + 1);\n            return key.replace(/\\n/g, ' ');\n        }\n    }, {\n        key: 'getDecision',\n        value: function getDecision(decision, decisionNode) {\n            if (decision.node === decisionNode || decision.node.$id === decisionNode.$id) {\n                return decision;\n            }\n            for (var i = 0; i < decision.children.length; i++) {\n                var d = Decision.getDecision(decision.children[i], decisionNode);\n                if (d) {\n                    return d;\n                }\n            }\n        }\n    }, {\n        key: 'toDecisionString',\n        value: function toDecisionString(decision) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var keyProperty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'name';\n            var indent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n            var res = Decision.generateKey(decision, keyProperty);\n            var childrenRes = \"\";\n\n            decision.children.forEach(function (d) {\n                if (childrenRes) {\n                    if (extended) {\n                        childrenRes += '\\n' + indent;\n                    } else {\n                        childrenRes += \", \";\n                    }\n                }\n                childrenRes += Decision.toDecisionString(d, extended, keyProperty, indent + '\\t');\n            });\n            if (decision.children.length) {\n                if (extended) {\n                    childrenRes = '\\n' + indent + childrenRes;\n                } else {\n                    childrenRes = \" - (\" + childrenRes + \")\";\n                }\n            }\n\n            return res + childrenRes;\n        }\n    }]);\n\n    return Decision;\n}();\n\n},{}],79:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PoliciesCollector = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _policy = require('./policy');\n\nvar _sdModel = require('sd-model');\n\nvar _sdUtils = require('sd-utils');\n\nvar _decision = require('./decision');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar PoliciesCollector = exports.PoliciesCollector = function () {\n    function PoliciesCollector(root, optimalForRuleName) {\n        var _this = this;\n\n        _classCallCheck(this, PoliciesCollector);\n\n        this.policies = [];\n        this.ruleName = false;\n\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach(function (decisions, i) {\n            _this.policies.push(new _policy.Policy(\"#\" + (i + 1), decisions));\n        });\n        if (this.policies.length === 1) {\n            this.policies[0].id = \"default\";\n        }\n    }\n\n    _createClass(PoliciesCollector, [{\n        key: 'collect',\n        value: function collect(root) {\n            var _this2 = this;\n\n            var nodeQueue = [root];\n            var node;\n            var decisionNodes = [];\n            while (nodeQueue.length) {\n                node = nodeQueue.shift();\n\n                if (this.ruleName && !node.computedValue(this.ruleName, 'optimal')) {\n                    continue;\n                }\n\n                if (node instanceof _sdModel.domain.DecisionNode) {\n                    decisionNodes.push(node);\n                    continue;\n                }\n\n                node.childEdges.forEach(function (edge, i) {\n                    nodeQueue.push(edge.childNode);\n                });\n            }\n\n            return _sdUtils.Utils.cartesianProductOf(decisionNodes.map(function (decisionNode) {\n                var decisions = [];\n                decisionNode.childEdges.forEach(function (edge, i) {\n\n                    if (_this2.ruleName && !edge.computedValue(_this2.ruleName, 'optimal')) {\n                        return;\n                    }\n\n                    var childDecisions = _this2.collect(edge.childNode); //all possible child decisions (cartesian)\n                    childDecisions.forEach(function (cd) {\n                        var decision = new _decision.Decision(decisionNode, i);\n                        decisions.push(decision);\n                        decision.children = cd;\n                    });\n                });\n                return decisions;\n            }));\n        }\n    }]);\n\n    return PoliciesCollector;\n}();\n\n},{\"./decision\":78,\"./policy\":80,\"sd-model\":\"sd-model\",\"sd-utils\":\"sd-utils\"}],80:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Policy = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _decision = require(\"./decision\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Policy = exports.Policy = function () {\n    function Policy(id, decisions) {\n        _classCallCheck(this, Policy);\n\n        this.decisions = [];\n\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    _createClass(Policy, [{\n        key: \"addDecision\",\n        value: function addDecision(node, decisionValue) {\n            var decision = new _decision.Decision(node, decisionValue);\n            this.decisions.push(decision);\n            this.key = Policy.generateKey(this);\n            return decision;\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(policy) {\n            var ignoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (this.key != policy.key) {\n                return false;\n            }\n\n            return ignoreId || this.id === policy.id;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(decisionNode) {\n            return Policy.getDecision(this, decisionNode);\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString() {\n            var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            return Policy.toPolicyString(this, indent);\n        }\n    }], [{\n        key: \"generateKey\",\n        value: function generateKey(policy) {\n            var key = \"\";\n            policy.decisions.forEach(function (d) {\n                return key += (key ? \"&\" : \"\") + d.key;\n            });\n            return key;\n        }\n    }, {\n        key: \"getDecision\",\n        value: function getDecision(policy, decisionNode) {\n            for (var i = 0; i < policy.decisions.length; i++) {\n                var decision = _decision.Decision.getDecision(policy.decisions[i], decisionNode);\n                if (decision) {\n                    return decision;\n                }\n            }\n            return null;\n        }\n    }, {\n        key: \"toPolicyString\",\n        value: function toPolicyString(policy) {\n            var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var prependId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var res = \"\";\n            policy.decisions.forEach(function (d) {\n                if (res) {\n                    if (extended) {\n                        res += \"\\n\";\n                    } else {\n                        res += \", \";\n                    }\n                }\n                res += _decision.Decision.toDecisionString(d, extended, 'name', '\\t');\n            });\n            if (prependId && policy.id !== undefined) {\n                return policy.id + \" \" + res;\n            }\n            return res;\n        }\n    }]);\n\n    return Policy;\n}();\n\n},{\"./decision\":78}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PayoffValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar PayoffValueValidator = exports.PayoffValueValidator = function () {\n    function PayoffValueValidator(expressionEngine) {\n        _classCallCheck(this, PayoffValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(PayoffValueValidator, [{\n        key: \"validate\",\n        value: function validate(value) {\n\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n            return _sdExpressionEngine.ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && _sdExpressionEngine.ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n        }\n    }]);\n\n    return PayoffValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],82:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProbabilityValueValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*Computed base value validator*/\nvar ProbabilityValueValidator = exports.ProbabilityValueValidator = function () {\n    function ProbabilityValueValidator(expressionEngine) {\n        _classCallCheck(this, ProbabilityValueValidator);\n\n        this.expressionEngine = expressionEngine;\n    }\n\n    _createClass(ProbabilityValueValidator, [{\n        key: \"validate\",\n        value: function validate(value, edge) {\n            if (value === null || value === undefined) {\n                return false;\n            }\n\n            var value = _sdExpressionEngine.ExpressionEngine.toNumber(value);\n            return value.compare(0) >= 0 && value.compare(1) <= 0;\n        }\n    }]);\n\n    return ProbabilityValueValidator;\n}();\n\n},{\"sd-expression-engine\":\"sd-expression-engine\",\"sd-utils\":\"sd-utils\"}],83:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TreeValidator = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdModel = require(\"sd-model\");\n\nvar _sdExpressionEngine = require(\"sd-expression-engine\");\n\nvar _probabilityValueValidator = require(\"./probability-value-validator\");\n\nvar _payoffValueValidator = require(\"./payoff-value-validator\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar TreeValidator = exports.TreeValidator = function () {\n    function TreeValidator(expressionEngine) {\n        _classCallCheck(this, TreeValidator);\n\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new _probabilityValueValidator.ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new _payoffValueValidator.PayoffValueValidator(expressionEngine);\n    }\n\n    _createClass(TreeValidator, [{\n        key: \"validate\",\n        value: function validate(nodes) {\n            var _this = this;\n\n            var validationResult = new _sdModel.ValidationResult();\n\n            nodes.forEach(function (n) {\n                _this.validateNode(n, validationResult);\n            });\n\n            return validationResult;\n        }\n    }, {\n        key: \"validateNode\",\n        value: function validateNode(node) {\n            var _this2 = this;\n\n            var validationResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _sdModel.ValidationResult();\n\n            if (node instanceof _sdModel.domain.TerminalNode) {\n                return;\n            }\n            if (!node.childEdges.length) {\n                validationResult.addError('incompletePath', node);\n            }\n\n            var probabilitySum = _sdExpressionEngine.ExpressionEngine.toNumber(0);\n            var withHash = false;\n            node.childEdges.forEach(function (e, i) {\n                e.setValueValidity('probability', true);\n\n                if (node instanceof _sdModel.domain.ChanceNode) {\n                    var probability = e.computedBaseProbability();\n                    if (!_this2.probabilityValueValidator.validate(probability)) {\n                        if (!_sdExpressionEngine.ExpressionEngine.isHash(e.probability)) {\n                            validationResult.addError({ name: 'invalidProbability', data: { 'number': i + 1 } }, node);\n                            e.setValueValidity('probability', false);\n                        }\n                    } else {\n                        probabilitySum = _sdExpressionEngine.ExpressionEngine.add(probabilitySum, probability);\n                    }\n                }\n\n                e.payoff.forEach(function (rawPayoff, payoffIndex) {\n                    var path = 'payoff[' + payoffIndex + ']';\n                    e.setValueValidity(path, true);\n                    var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                    if (!_this2.payoffValueValidator.validate(payoff)) {\n                        validationResult.addError({ name: 'invalidPayoff', data: { 'number': i + 1 } }, node);\n                        e.setValueValidity(path, false);\n                    }\n                });\n            });\n            if (node instanceof _sdModel.domain.ChanceNode) {\n                if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                    validationResult.addError('probabilityDoNotSumUpTo1', node);\n                }\n            }\n\n            return validationResult;\n        }\n    }]);\n\n    return TreeValidator;\n}();\n\n},{\"./payoff-value-validator\":81,\"./probability-value-validator\":82,\"sd-expression-engine\":\"sd-expression-engine\",\"sd-model\":\"sd-model\"}],\"sd-computations\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":6}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport {DataModel} from \"sd-model\";\nimport {ComputationsManager} from \"./computations-manager\";\nimport {ComputationsManagerConfig} from \"./computations-manager\";\n\n\n\nexport class ComputationsEngineConfig extends ComputationsManagerConfig{\n    logLevel = 'warn';\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//Entry point class for standalone computation workers\nexport class ComputationsEngine extends ComputationsManager{\n\n    global = Utils.getGlobalObject();\n    isWorker = Utils.isWorker();\n\n    constructor(config, data){\n        super(config, data);\n\n        if(this.isWorker) {\n            this.jobsManger.registerJobExecutionListener({\n                beforeJob: (jobExecution)=>{\n                    this.reply('beforeJob', jobExecution.getDTO());\n                },\n\n                afterJob: (jobExecution)=>{\n                    this.reply('afterJob', jobExecution.getDTO());\n                }\n            });\n\n            var instance = this;\n            this.queryableFunctions = {\n                runJob: function(jobName, jobParametersValues, dataDTO){\n                    // console.log(jobName, jobParameters, serializedData);\n                    var data = new DataModel(dataDTO);\n                    instance.runJob(jobName, jobParametersValues, data);\n                },\n                executeJob: function(jobExecutionId){\n                    instance.jobsManger.execute(jobExecutionId).catch(e=>{\n                        instance.reply('jobFatalError', jobExecutionId, Utils.getErrorDTO(e));\n                    })\n                },\n                recompute: function(dataDTO, ruleName, evalCode, evalNumeric){\n                    if(ruleName){\n                        instance.objectiveRulesManager.setCurrentRuleByName(ruleName);\n                    }\n                    var allRules = !ruleName;\n                    var data = new DataModel(dataDTO);\n                    instance._checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric)\n                    this.reply('recomputed', data.getDTO());\n                }\n            };\n\n            global.onmessage = function(oEvent) {\n                if (oEvent.data instanceof Object && oEvent.data.hasOwnProperty('queryMethod') && oEvent.data.hasOwnProperty('queryArguments')) {\n                    instance.queryableFunctions[oEvent.data.queryMethod].apply(self, oEvent.data.queryArguments);\n                } else {\n                    instance.defaultReply(oEvent.data);\n                }\n            };\n        }\n    }\n\n\n\n    setConfig(config) {\n        super.setConfig(config);\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    setLogLevel(level){\n        log.setLevel(level)\n    }\n\n    defaultReply(message) {\n        this.reply('test', message);\n    }\n\n    reply() {\n        if (arguments.length < 1) {\n            throw new TypeError('reply - not enough arguments');\n        }\n        this.global.postMessage({\n            'queryMethodListener': arguments[0],\n            'queryMethodArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n}\n\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectiveRulesManager} from \"./objective/objective-rules-manager\";\nimport {TreeValidator} from \"./validation/tree-validator\";\nimport {OperationsManager} from \"./operations/operations-manager\";\nimport {JobsManager} from \"./jobs/jobs-manager\";\nimport {ExpressionsEvaluator} from \"./expressions-evaluator\";\nimport {JobInstanceManager} from \"./jobs/job-instance-manager\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"./policies/policy\";\n\nexport class ComputationsManagerConfig {\n\n    logLevel = null;\n\n    ruleName = null;\n    worker = {\n        delegateRecomputation: false,\n        url: null\n    };\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class ComputationsManager {\n    data;\n    expressionEngine;\n\n    expressionsEvaluator;\n    objectiveRulesManager;\n    operationsManager;\n    jobsManger;\n\n    treeValidator;\n\n    constructor(config, data = null) {\n        this.data = data;\n        this.setConfig(config);\n        this.expressionEngine = new ExpressionEngine();\n        this.expressionsEvaluator = new ExpressionsEvaluator(this.expressionEngine);\n        this.objectiveRulesManager = new ObjectiveRulesManager(this.expressionEngine, this.config.ruleName);\n        this.operationsManager = new OperationsManager(this.data, this.expressionEngine);\n        this.jobsManger = new JobsManager(this.expressionsEvaluator, this.objectiveRulesManager, {\n            workerUrl: this.config.worker.url,\n            repositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        });\n        this.treeValidator = new TreeValidator(this.expressionEngine);\n    }\n\n    setConfig(config) {\n        this.config = new ComputationsManagerConfig(config);\n        return this;\n    }\n\n    getCurrentRule() {\n        return this.objectiveRulesManager.currentRule;\n    }\n\n    flipCriteria(data){\n        data = data || this.data;\n        data.reversePayoffs();\n        let tmp = data.weightLowerBound;\n        data.weightLowerBound = this.flip(data.weightUpperBound);\n        data.weightUpperBound = this.flip(tmp);\n        data.defaultCriterion1Weight = this.flip(data.defaultCriterion1Weight);\n        this.objectiveRulesManager.flipRule();\n        return this.checkValidityAndRecomputeObjective(false);\n    }\n\n    flip(a){\n        if(a == Infinity){\n            return 0;\n        }\n\n        if(a == 0){\n            return Infinity;\n        }\n\n        return ExpressionEngine.divide(1, a)\n\n    }\n\n    getJobByName(jobName) {\n        return this.jobsManger.getJobByName(jobName);\n    }\n\n    runJob(name, jobParamsValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobsManger.run(name, jobParamsValues, data || this.data, resolvePromiseAfterJobIsLaunched)\n    }\n\n    runJobWithInstanceManager(name, jobParamsValues, jobInstanceManagerConfig) {\n        return this.runJob(name, jobParamsValues).then(je=> {\n            return new JobInstanceManager(this.jobsManger, je, jobInstanceManagerConfig);\n        })\n    }\n\n    getObjectiveRules() {\n        return this.objectiveRulesManager.rules;\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.objectiveRulesManager.getObjectiveRuleByName(ruleName)\n    }\n\n    isRuleName(ruleName) {\n        return this.objectiveRulesManager.isRuleName(ruleName)\n    }\n\n    setCurrentRuleByName(ruleName) {\n        this.config.ruleName = ruleName;\n        return this.objectiveRulesManager.setCurrentRuleByName(ruleName)\n    }\n\n    operationsForObject(object) {\n        return this.operationsManager.operationsForObject(object);\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true) {\n        return Promise.resolve().then(()=> {\n            if (this.config.worker.delegateRecomputation) {\n                var params = {\n                    evalCode: evalCode,\n                    evalNumeric: evalNumeric\n                };\n                if (!allRules) {\n                    params.ruleName = this.getCurrentRule().name;\n                }\n                return this.runJob(\"recompute\", params, this.data, false).then((jobExecution)=> {\n                    var d = jobExecution.getData();\n                    this.data.updateFrom(d)\n                })\n            }\n            return this._checkValidityAndRecomputeObjective(this.data, allRules, evalCode, evalNumeric);\n        }).then(()=> {\n            this.updateDisplayValues(this.data);\n        })\n\n    }\n\n    _checkValidityAndRecomputeObjective(data, allRules, evalCode = false, evalNumeric = true) {\n        this.objectiveRulesManager.updateDefaultCriterion1Weight(data.defaultCriterion1Weight);\n        data.validationResults = [];\n\n        if (evalCode || evalNumeric) {\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    //Checks validity of data model without recomputation and revalidation\n    isValid(data) {\n        var data = data || this.data;\n        return data.validationResults.every(vr=>vr.isValid());\n    }\n\n    updateDisplayValues(data, policyToDisplay = null) {\n        data = data || this.data;\n        if (policyToDisplay) {\n            return this.displayPolicy(data, policyToDisplay);\n        }\n\n        data.nodes.forEach(n=> {\n            this.updateNodeDisplayValues(n);\n        });\n        data.edges.forEach(e=> {\n            this.updateEdgeDisplayValues(e);\n        })\n    }\n\n    updateNodeDisplayValues(node) {\n        node.$DISPLAY_VALUE_NAMES.forEach(n=>node.displayValue(n, this.objectiveRulesManager.getNodeDisplayValue(node, n)));\n    }\n\n    updateEdgeDisplayValues(e) {\n        e.$DISPLAY_VALUE_NAMES.forEach(n=>e.displayValue(n, this.objectiveRulesManager.getEdgeDisplayValue(e, n)));\n    }\n\n    displayPolicy(policyToDisplay, data) {\n\n\n        data = data || this.data;\n        data.nodes.forEach(n=> {\n            n.clearDisplayValues();\n        });\n        data.edges.forEach(e=> {\n            e.clearDisplayValues();\n        });\n        data.getRoots().forEach((root)=>this.displayPolicyForNode(root, policyToDisplay));\n    }\n\n    displayPolicyForNode(node, policy) {\n        if (node instanceof model.DecisionNode) {\n            var decision = Policy.getDecision(policy, node);\n            //console.log(decision, node, policy);\n            if (decision) {\n                node.displayValue('optimal', true)\n                var childEdge = node.childEdges[decision.decisionValue];\n                childEdge.displayValue('optimal', true)\n                return this.displayPolicyForNode(childEdge.childNode, policy)\n            }\n            return;\n        }\n\n        node.childEdges.forEach(e=>this.displayPolicyForNode(e.childNode, policy))\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nexport class ComputationsUtils{\n\n    static sequence(min, max, length) {\n        var extent = ExpressionEngine.subtract(max, min);\n        var result = [min];\n        var steps = length - 1;\n        if(!steps){\n            return result;\n        }\n        var step = ExpressionEngine.divide(extent,length - 1);\n        var curr = min;\n        for (var i = 0; i < length - 2; i++) {\n            curr = ExpressionEngine.add(curr, step);\n            result.push(ExpressionEngine.toFloat(curr));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from 'sd-model'\nimport {Utils, log} from 'sd-utils'\n\n/*Evaluates code and expressions in trees*/\nexport class ExpressionsEvaluator {\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine = expressionEngine;\n    }\n\n    clear(data){\n        data.nodes.forEach(n=>{\n            n.clearComputedValues();\n        });\n        data.edges.forEach(e=>{\n            e.clearComputedValues();\n        });\n    }\n\n    clearTree(data, root){\n        data.getAllNodesInSubtree(root).forEach(n=>{\n            n.clearComputedValues();\n            n.childEdges.forEach(e=>{\n                e.clearComputedValues();\n            })\n        })\n    }\n\n    evalExpressions(data, evalCode=true, evalNumeric=true, initScopes=false){\n        log.debug('evalExpressions evalCode:'+evalCode+' evalNumeric:'+evalNumeric);\n        if(evalCode){\n            this.evalGlobalCode(data);\n        }\n\n        data.getRoots().forEach(n=>{\n            this.clearTree(data, n);\n            this.evalExpressionsForNode(data, n, evalCode, evalNumeric,initScopes);\n        });\n\n    }\n\n    evalGlobalCode(data){\n        data.clearExpressionScope();\n        data.$codeDirty = false;\n        try{\n            data.$codeError = null;\n            this.expressionEngine.eval(data.code, false, data.expressionScope);\n        }catch (e){\n            data.$codeError = e;\n        }\n    }\n\n    evalExpressionsForNode(data, node, evalCode=true, evalNumeric=true, initScope=false) {\n        if(!node.expressionScope || initScope || evalCode){\n            this.initScopeForNode(data, node);\n        }\n        if(evalCode){\n            node.$codeDirty = false;\n            if(node.code){\n                try{\n                    node.$codeError = null;\n                    this.expressionEngine.eval(node.code, false, node.expressionScope);\n                }catch (e){\n                    node.$codeError = e;\n                    log.debug(e);\n                }\n            }\n        }\n\n        if(evalNumeric){\n            var scope = node.expressionScope;\n            var probabilitySum=ExpressionEngine.toNumber(0);\n            var hashEdges= [];\n            var invalidProb = false;\n\n            node.childEdges.forEach(e=>{\n                e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                    let path = 'payoff[' + payoffIndex + ']';\n                    if(e.isFieldValid(path, true, false)){\n                        try{\n                            e.computedValue(null, path, this.expressionEngine.evalPayoff(e, payoffIndex))\n                        }catch (err){\n                            //   Left empty intentionally\n                        }\n                    }\n                });\n\n\n\n                if(node instanceof model.ChanceNode){\n                    if(ExpressionEngine.isHash(e.probability)){\n                        hashEdges.push(e);\n                        return;\n                    }\n\n                    if(ExpressionEngine.hasAssignmentExpression(e.probability)){ //It should not occur here!\n                        log.warn(\"evalExpressionsForNode hasAssignmentExpression!\", e);\n                        return null;\n                    }\n\n                    if(e.isFieldValid('probability', true, false)){\n                        try{\n                            var prob = this.expressionEngine.eval(e.probability, true, scope);\n                            e.computedValue(null, 'probability', prob);\n                            probabilitySum = ExpressionEngine.add(probabilitySum, prob);\n                        }catch (err){\n                            invalidProb = true;\n                        }\n                    }else{\n                        invalidProb = true;\n                    }\n                }\n\n            });\n\n\n            if(node instanceof model.ChanceNode){\n                var computeHash = hashEdges.length && !invalidProb && (probabilitySum.compare(0) >= 0 && probabilitySum.compare(1) <= 0);\n\n                if(computeHash) {\n                    var hash = ExpressionEngine.divide(ExpressionEngine.subtract(1, probabilitySum), hashEdges.length);\n                    hashEdges.forEach(e=> {\n                        e.computedValue(null, 'probability', hash);\n                    });\n                }\n            }\n\n            node.childEdges.forEach(e=>{\n                this.evalExpressionsForNode(data, e.childNode, evalCode, evalNumeric, initScope);\n            });\n        }\n    }\n\n    initScopeForNode(data, node){\n        var parent = node.$parent;\n        var parentScope = parent?parent.expressionScope : data.expressionScope;\n        node.expressionScope = Utils.cloneDeep(parentScope);\n    }\n}\n","export * from './computations-engine'\nexport * from './computations-manager'\nexport * from './expressions-evaluator'\nexport * from './jobs/index'\n\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\n\nexport class LeagueTableJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        // this.definitions.push(new JobParameterDefinition(\"weightLowerBound\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v <= allVals['weightUpperBound']));\n        // this.definitions.push(new JobParameterDefinition(\"weightUpperBound\", PARAMETER_TYPE.NUMBER).set(\"singleValueValidator\", (v, allVals) => v >= 0 && v >= allVals['weightLowerBound']));\n\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            nameOfCriterion1: 'Cost',\n            nameOfCriterion2: 'Effect',\n            extendedPolicyDescription: true,\n            weightLowerBound: 0,\n            weightUpperBound: Infinity,\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Policy} from \"../../../policies/policy\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {LeagueTableJobParameters} from \"./league-table-job-parameters\";\n\n\nexport class LeagueTableJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"league-table\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.initSteps();\n    }\n\n    initSteps() {\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new LeagueTableJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders = true) {\n        var result = [];\n        if (withHeaders) {\n            var headers = ['policy_id', 'policy', jobResult.payoffNames[0], jobResult.payoffNames[1], 'dominated_by', 'extended-dominated_by', 'incratio'];\n            result.push(headers);\n        }\n\n        jobResult.rows.forEach(row => {\n            row.policies.forEach(policy=> {\n                var rowCells = [\n                    row.id,\n                    Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                    row.payoffs[1],\n                    row.payoffs[0],\n                    row.dominatedBy,\n                    row.extendedDominatedBy === null ? null : row.extendedDominatedBy[0] + ', ' + row.extendedDominatedBy[1],\n                    row.incratio\n                ];\n                result.push(rowCells);\n            })\n        });\n\n        return result;\n    }\n}\n","import {Step} from \"../../../engine/step\";\nimport {JOB_STATUS} from \"../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../policies/policies-collector\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {TreeValidator} from \"../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../policies/policy\";\n\nexport class CalculateStep extends Step {\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        let rule = this.objectiveRulesManager.currentRule;\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n\n\n        var payoffCoeffs = this.payoffCoeffs = rule.payoffCoeffs;\n\n        this.expressionsEvaluator.evalExpressions(data);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        if (!vr.isValid()) {\n            return stepExecution;\n        }\n\n        var compare = (a, b)=>(-payoffCoeffs[0] *  (b.payoffs[0] - a.payoffs[0])) || (-payoffCoeffs[1] *  (a.payoffs[1] - b.payoffs[1]));\n\n        var rows = policies.map(policy => {\n            this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n            return {\n                policies: [policy],\n                payoffs: treeRoot.computedValue(ruleName, 'payoff').slice(),\n                dominatedBy: null,\n                extendedDominatedBy: null,\n                incratio: null\n            }\n        }).sort(compare);\n\n        rows = rows.reduce((previousValue, currentValue, index, array)=>{\n            if(!previousValue.length){\n                return [currentValue]\n            }\n\n            let prev = previousValue[previousValue.length-1];\n            if(compare(prev, currentValue) == 0){\n                prev.policies.push(...currentValue.policies);\n                return previousValue\n            }\n            return previousValue.concat(currentValue)\n        }, []);\n\n        rows.sort((a, b)=>(payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n        rows.forEach((r, i)=> {\n            r.id = i+1;\n        });\n        // rows.sort(compare);\n        rows.sort((a, b)=>(-payoffCoeffs[0] *  (a.payoffs[0] - b.payoffs[0])) || (-payoffCoeffs[1] *   (a.payoffs[1] - b.payoffs[1])));\n\n        let bestCost = -payoffCoeffs[1] * Infinity,\n            bestCostRow = null;\n\n        let cmp= (a, b) => a > b;\n        if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a < b;\n        }\n\n        rows.forEach((r, i)=> {\n            if (cmp(r.payoffs[1], bestCost)) {\n                bestCost = r.payoffs[1];\n                bestCostRow = r;\n            } else if(bestCostRow) {\n                r.dominatedBy = bestCostRow.id;\n            }\n        });\n\n        cmp= (a, b) => a < b;\n        if(payoffCoeffs[0] > 0 && payoffCoeffs[1] < 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[0] < 0 && payoffCoeffs[1] > 0){\n            cmp= (a, b) => a < b;\n        }else if(payoffCoeffs[1]<0){\n            cmp= (a, b) => a > b;\n        }\n\n        let prev2NotDominated = null;\n        rows.filter(r=>!r.dominatedBy).sort((a, b)=>(  payoffCoeffs[0] * (a.payoffs[0] - b.payoffs[0]))).forEach((r, i, arr)=> {\n            if (i == 0) {\n                r.incratio = 0;\n                return;\n            }\n\n            let prev = arr[i - 1];\n\n            r.incratio = this.computeICER(r, prev);\n            if (i < 2) {\n                return;\n            }\n\n            if(!prev2NotDominated){\n                prev2NotDominated = arr[i - 2];\n            }\n\n            if(cmp(r.incratio,prev.incratio)){\n                prev.incratio = null;\n                prev.extendedDominatedBy = [prev2NotDominated.id, r.id] ;\n                r.incratio = this.computeICER(r, prev2NotDominated);\n            }else{\n                prev2NotDominated = prev;\n            }\n        });\n\n        let weightLowerBound = (data.weightLowerBound !== Infinity) ? ExpressionEngine.toNumber(data.weightLowerBound) : data.weightLowerBound;\n        let weightUpperBound = (data.weightUpperBound !== Infinity) ? ExpressionEngine.toNumber(data.weightUpperBound) : data.weightUpperBound;\n        //mark optimal for weight in [weightLowerBound, weightUpperBound]\n        let lastLELower = null;\n        rows.slice().filter(r=>!r.dominatedBy && !r.extendedDominatedBy).sort((a, b) => a.incratio - b.incratio).forEach((row, i, arr)=>{\n\n            if(row.incratio <= weightLowerBound){\n                lastLELower  = row;\n            }else if(row.incratio == weightLowerBound){\n                lastLELower = null;\n            }\n\n            row.optimal = row.incratio >= weightLowerBound && row.incratio <= weightUpperBound;\n\n        });\n        if(lastLELower){\n            lastLELower.optimal = true;\n        }\n\n        rows.forEach(row=>{\n            row.payoffs[0] =  ExpressionEngine.toFloat(row.payoffs[0]);\n            row.payoffs[1] =  ExpressionEngine.toFloat(row.payoffs[1]);\n            row.incratio = row.incratio === null ? null : ExpressionEngine.toFloat(row.incratio);\n        });\n\n        jobResult.data = {\n            payoffNames: data.payoffNames.slice(),\n            payoffCoeffs : payoffCoeffs,\n            rows: rows.sort((a, b)=>(a.id - b.id))\n        };\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    computeICER(r, prev){\n        let d = ExpressionEngine.subtract(r.payoffs[0], prev.payoffs[0]);\n        let n = ExpressionEngine.subtract(r.payoffs[1], prev.payoffs[1]);\n        if (d == 0){\n            if(n<0){\n                return - Infinity;\n            }\n            return Infinity;\n        }\n        return Math.abs(ExpressionEngine.divide(n, d));\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../engine/job-parameter-definition\";\nexport class RecomputeJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING, 0));\n        this.definitions.push(new JobParameterDefinition(\"evalCode\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"evalNumeric\", PARAMETER_TYPE.BOOLEAN));\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            ruleName: null, //recompute all rules\n            evalCode: true,\n            evalNumeric: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../engine/simple-job\";\nimport {Step} from \"../../engine/step\";\nimport {JOB_STATUS} from \"../../engine/job-status\";\nimport {TreeValidator} from \"../../../validation/tree-validator\";\nimport {BatchStep} from \"../../engine/batch/batch-step\";\nimport {RecomputeJobParameters} from \"./recompute-job-parameters\";\nimport {Job} from \"../../engine/job\";\n\nexport class RecomputeJob extends Job {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"recompute\", jobRepository);\n        this.isRestartable = false;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    doExecute(execution) {\n        var data = execution.getData();\n        var params = execution.jobParameters;\n        var ruleName = params.value(\"ruleName\");\n        var allRules = !ruleName;\n        if(ruleName){\n            this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        }\n        this.checkValidityAndRecomputeObjective(data, allRules, params.value(\"evalCode\"), params.value(\"evalNumeric\"))\n        return execution;\n    }\n\n    checkValidityAndRecomputeObjective(data, allRules, evalCode, evalNumeric) {\n        data.validationResults = [];\n\n        if(evalCode||evalNumeric){\n            this.expressionsEvaluator.evalExpressions(data, evalCode, evalNumeric);\n        }\n\n        data.getRoots().forEach(root=> {\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(root));\n            data.validationResults.push(vr);\n            if (vr.isValid()) {\n                this.objectiveRulesManager.recomputeTree(root, allRules);\n            }\n        });\n    }\n\n    createJobParameters(values) {\n        return new RecomputeJobParameters(values);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class SensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 2),\n            ], 1, Infinity, false,\n            v => v[\"min\"] < v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {SensitivityAnalysisJobParameters} from \"./sensitivity-analysis-job-parameters\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {Policy} from \"../../../../policies/policy\";\nimport {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\n\nexport class SensitivityAnalysisJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(\"sensitivity-analysis\", jobRepository, expressionsEvaluator, objectiveRulesManager);\n        this.batchSize = 5;\n        this.initSteps();\n    }\n\n    initSteps(){\n        this.addStep(new PrepareVariablesStep(this.jobRepository, this.expressionsEvaluator.expressionEngine));\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new CalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n    }\n\n    createJobParameters(values) {\n        return new SensitivityAnalysisJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    setBatchSize(batchSize){\n        this.batchSize = batchSize;\n        this.calculateStep.chunkSize = batchSize;\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters, withHeaders=true){\n        var result = [];\n        if(withHeaders){\n            var headers = ['policy_number', 'policy'];\n            jobResult.variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            result.push(headers);\n        }\n\n        var roundVariables = !!jobParameters.values.roundVariables;\n        if(roundVariables){\n            this.roundVariables(jobResult);\n        }\n\n        jobResult.rows.forEach(row => {\n            var policy = jobResult.policies[row.policyIndex];\n            var rowCells = [row.policyIndex+1, Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription)];\n            row.variables.forEach(v=> rowCells.push(v));\n            rowCells.push(row.payoff);\n            result.push(rowCells);\n\n            if(row._variables){ //revert original variables\n                row.variables = row._variables;\n                delete row._variables;\n            }\n        });\n\n        return result;\n    }\n\n    roundVariables(jobResult){\n        var uniqueValues = jobResult.variableNames.map(()=>new Set());\n\n        jobResult.rows.forEach(row => {\n            row._variables = row.variables.slice(); // save original row variables\n            row.variables.forEach((v,i)=> {\n                uniqueValues[i].add(v)\n            });\n        });\n\n        var uniqueValuesNo = uniqueValues.map((s)=>s.size);\n        var maxPrecision = 14;\n        var precision = 2;\n        var notReadyVariablesIndexes = jobResult.variableNames.map((v,i)=>i);\n        while(precision<=maxPrecision && notReadyVariablesIndexes.length){\n            uniqueValues = notReadyVariablesIndexes.map(()=>new Set());\n            jobResult.rows.forEach(row => {\n                notReadyVariablesIndexes.forEach((variableIndex, notReadyIndex)=>{\n\n                    var val = row._variables[variableIndex];\n                    val = Utils.round(val, precision);\n                    uniqueValues[notReadyIndex].add(val);\n\n                    row.variables[variableIndex] = val;\n                })\n            });\n\n            var newReadyIndexes = [];\n            uniqueValues.forEach((uniqueVals, notReadyIndex)=>{\n                var origUniqueCount = uniqueValuesNo[notReadyVariablesIndexes[notReadyIndex]] ;\n                if(origUniqueCount==uniqueVals.size){ //ready in previous iteration\n                    newReadyIndexes.push(notReadyIndex);\n                }\n            });\n            if(newReadyIndexes.length) { //revert values to prev iteration\n                newReadyIndexes.reverse();\n                newReadyIndexes.forEach(notReadyIndex=>{\n                    notReadyVariablesIndexes.splice(notReadyIndex, 1);\n                })\n            }\n            precision++;\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize) {\n        super(\"calculate_step\", jobRepository, batchSize);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobResult.data.variableValues;\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n\n        if (!jobResult.data.rows) {\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var variableValues = jobResult.data.variableValues;\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n\n    processItem(stepExecution, item) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var failOnInvalidTree = params.value(\"failOnInvalidTree\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n        variableNames.forEach((variableName, i)=> {\n            data.expressionScope[variableName] = item[i];\n        });\n\n        this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n        var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n\n        var valid = vr.isValid();\n\n        if(!valid && failOnInvalidTree){\n            let errorData = {\n                variables: {}\n            };\n            variableNames.forEach((variableName, i)=> {\n                errorData.variables[variableName] = item[i];\n            });\n            throw new JobComputationException(\"computations\", errorData)\n        }\n\n        var payoffs = [];\n\n        policies.forEach(policy=> {\n            var payoff = 'n/a';\n            if (valid) {\n                this.objectiveRulesManager.recomputeTree(treeRoot, false, policy);\n                payoff = treeRoot.computedValue(ruleName, 'payoff')[0];\n            }\n            payoffs.push(payoff);\n        });\n\n        return {\n            policies: policies,\n            variables: item,\n            payoffs: payoffs\n        };\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var extendedPolicyDescription = params.value(\"extendedPolicyDescription\");\n\n        items.forEach(item=> {\n            if (!item) {\n                return;\n            }\n            item.policies.forEach((policy, i)=> {\n                var variables = item.variables.map(v => this.toFloat(v));\n\n                var payoff = item.payoffs[i];\n                var row = {\n                    policyIndex: i,\n                    variables: variables,\n                    payoff: Utils.isString(payoff) ? payoff : this.toFloat(payoff)\n                };\n                jobResult.data.rows.push(row);\n            })\n        })\n    }\n\n    postProcess(stepExecution, jobResult) {\n        delete jobResult.data.variableValues;\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        var policies = policiesCollector.policies;\n        stepExecution.getJobExecutionContext().put(\"policies\", policies);\n\n        if(!jobResult.data){\n            jobResult.data={}\n        }\n\n        jobResult.data.policies = policies;\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ComputationsUtils} from \"../../../../../computations-utils\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository, expressionEngine) {\n        super(\"prepare_variables\", jobRepository);\n        this.expressionEngine = expressionEngine;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(ComputationsUtils.sequence(v.min, v.max, v.length));\n        });\n        variableValues = Utils.cartesianProductOf(variableValues);\n        jobResult.data={\n            variableValues: variableValues\n        };\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class ProbabilisticSensitivityAnalysisJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"failOnInvalidTree\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"extendedPolicyDescription\", PARAMETER_TYPE.BOOLEAN));\n        this.definitions.push(new JobParameterDefinition(\"numberOfRuns\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v > 0));\n\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"formula\", PARAMETER_TYPE.NUMBER_EXPRESSION)\n            ], 1, Infinity, false,\n            null,\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n            extendedPolicyDescription: true,\n            failOnInvalidTree: true\n        }\n    }\n}\n","import {ProbabilisticSensitivityAnalysisJobParameters} from \"./probabilistic-sensitivity-analysis-job-parameters\";\nimport {InitPoliciesStep} from \"../n-way/steps/init-policies-step\";\nimport {SensitivityAnalysisJob} from \"../n-way/sensitivity-analysis-job\";\nimport {ProbCalculateStep} from \"./steps/prob-calculate-step\";\nimport {ComputePolicyStatsStep} from \"./steps/compute-policy-stats-step\";\n\nexport class ProbabilisticSensitivityAnalysisJob extends SensitivityAnalysisJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize=5) {\n        super(jobRepository, expressionsEvaluator, objectiveRulesManager, batchSize);\n        this.name = \"probabilistic-sensitivity-analysis\";\n    }\n\n    initSteps() {\n        this.addStep(new InitPoliciesStep(this.jobRepository));\n        this.calculateStep = new ProbCalculateStep(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager, this.batchSize);\n        this.addStep(this.calculateStep);\n        this.addStep(new ComputePolicyStatsStep(this.expressionsEvaluator.expressionEngine, this.objectiveRulesManager, this.jobRepository));\n    }\n\n    createJobParameters(values) {\n        return new ProbabilisticSensitivityAnalysisJobParameters(values);\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution) {\n\n        if (execution.stepExecutions.length <= 1) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[1].getProgress(execution.stepExecutions[1]);\n    }\n}\n","import {log, Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class ComputePolicyStatsStep extends Step {\n    constructor(expressionEngine, objectiveRulesManager, jobRepository) {\n        super(\"compute_policy_stats\", jobRepository);\n        this.expressionEngine = expressionEngine;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    doExecute(stepExecution, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var ruleName = params.value(\"ruleName\");\n\n        let rule = this.objectiveRulesManager.ruleByName[ruleName];\n\n\n        var payoffsPerPolicy = jobResult.data.policies.map(()=>[]);\n\n        jobResult.data.rows.forEach(row=> {\n            payoffsPerPolicy[row.policyIndex].push(Utils.isString(row.payoff) ? 0 : row.payoff)\n        });\n\n        log.debug('payoffsPerPolicy', payoffsPerPolicy, jobResult.data.rows.length, rule.maximization);\n\n        jobResult.data.medians = payoffsPerPolicy.map(payoffs=>ExpressionEngine.median(payoffs));\n        jobResult.data.standardDeviations = payoffsPerPolicy.map(payoffs=>ExpressionEngine.std(payoffs));\n\n        if (rule.maximization) {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        } else {\n            jobResult.data.policyIsBestProbabilities = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(ExpressionEngine.divide(v, numberOfRuns)));\n        }\n\n        jobResult.data.policyToHighestPayoffCount = jobResult.data.policyToHighestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n        jobResult.data.policyToLowestPayoffCount = jobResult.data.policyToLowestPayoffCount.map(v=>ExpressionEngine.toFloat(v));\n\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {CalculateStep} from \"../../n-way/steps/calculate-step\";\nimport {JobComputationException} from \"../../../../engine/exceptions/job-computation-exception\";\n\nexport class ProbCalculateStep extends CalculateStep {\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n\n        if(!jobResult.data.rows){\n            jobResult.data.rows = [];\n            jobResult.data.variableNames = variableNames;\n            jobResult.data.expectedValues = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToHighestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n            jobResult.data.policyToLowestPayoffCount = Utils.fill(new Array(jobResult.data.policies.length), 0);\n        }\n\n        return params.value(\"numberOfRuns\");\n    }\n\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n        var data = stepExecution.getData();\n        var variableValues = [];\n        for(var runIndex=0; runIndex<chunkSize; runIndex++){\n            var singleRunVariableValues = [];\n            var errors = [];\n            variables.forEach(v=> {\n                try{\n                    var evaluated = this.expressionsEvaluator.expressionEngine.eval(v.formula, true, Utils.cloneDeep(data.expressionScope));\n                    singleRunVariableValues.push(ExpressionEngine.toFloat(evaluated));\n                }catch(e){\n                    errors.push({\n                        variable: v,\n                        error: e\n                    });\n                }\n\n            });\n            if(errors.length) {\n                var errorData = {variables: []};\n                errors.forEach(e=>{\n                    errorData.variables[e.variable.name] = e.error.message;\n                });\n                throw new JobComputationException(\"param-computation\", errorData)\n            }\n            variableValues.push(singleRunVariableValues)\n        }\n\n        return variableValues;\n    }\n\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        var r = super.processItem(stepExecution, item, jobResult);\n\n        var params = stepExecution.getJobParameters();\n        var numberOfRuns = params.value(\"numberOfRuns\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        this.updatePolicyStats(r, policies, numberOfRuns, jobResult);\n\n        return r;\n    }\n\n    updatePolicyStats(r, policies, numberOfRuns, jobResult){\n        var highestPayoff = -Infinity;\n        var lowestPayoff = Infinity;\n        var bestPolicyIndexes = [];\n        var worstPolicyIndexes = [];\n\n        var zeroNum = ExpressionEngine.toNumber(0);\n\n        policies.forEach((policy,i)=>{\n            let payoff = r.payoffs[i];\n            if(Utils.isString(payoff)){\n                payoff = zeroNum;\n            }\n            if(payoff < lowestPayoff){\n                lowestPayoff = payoff;\n                worstPolicyIndexes = [i];\n            }else if(payoff.equals(lowestPayoff)){\n                worstPolicyIndexes.push(i)\n            }\n            if(payoff > highestPayoff){\n                highestPayoff = payoff;\n                bestPolicyIndexes = [i]\n            }else if(payoff.equals(highestPayoff)){\n                bestPolicyIndexes.push(i)\n            }\n\n            jobResult.data.expectedValues[i] = ExpressionEngine.add(jobResult.data.expectedValues[i], ExpressionEngine.divide(payoff, numberOfRuns));\n        });\n\n        bestPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToHighestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToHighestPayoffCount[policyIndex], ExpressionEngine.divide(1, bestPolicyIndexes.length))\n        });\n\n        worstPolicyIndexes.forEach(policyIndex=>{\n            jobResult.data.policyToLowestPayoffCount[policyIndex] = ExpressionEngine.add(jobResult.data.policyToLowestPayoffCount[policyIndex], ExpressionEngine.divide(1, worstPolicyIndexes.length))\n        });\n    }\n\n\n    postProcess(stepExecution, jobResult) {\n        jobResult.data.expectedValues = jobResult.data.expectedValues.map(v=>this.toFloat(v));\n    }\n\n\n    toFloat(v) {\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nimport {BatchStep} from \"../../../../engine/batch/batch-step\";\nimport {TreeValidator} from \"../../../../../validation/tree-validator\";\nimport {Policy} from \"../../../../../policies/policy\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\n\nexport class CalculateStep extends BatchStep {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"calculate_step\", jobRepository, 1);\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n        this.treeValidator = new TreeValidator();\n    }\n\n    init(stepExecution, jobResult) {\n        var jobExecutionContext = stepExecution.getJobExecutionContext();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n\n        this.objectiveRulesManager.setCurrentRuleByName(ruleName);\n        var variableValues = jobExecutionContext.get(\"variableValues\");\n        var variableNames = params.value(\"variables\").map(v=>v.name);\n        stepExecution.executionContext.put(\"variableNames\", variableNames);\n        var data = stepExecution.getData();\n        this.expressionsEvaluator.clear(data);\n        this.expressionsEvaluator.evalGlobalCode(data);\n\n        var defaultValues = {};\n        Utils.forOwn(data.expressionScope, (v,k)=>{\n            defaultValues[k]=this.toFloat(v);\n        });\n\n        if(!jobResult.data){\n            var headers = ['policy'];\n            variableNames.forEach(n=>headers.push(n));\n            headers.push('payoff');\n            jobResult.data = {\n                headers:headers,\n                rows: [],\n                variableNames: variableNames,\n                defaultValues: defaultValues,\n                policies: jobExecutionContext.get(\"policies\")\n            };\n        }\n\n        return variableValues.length;\n    }\n\n\n    readNextChunk(stepExecution, startIndex, chunkSize) {\n        var variableValues = stepExecution.getJobExecutionContext().get(\"variableValues\");\n        return variableValues.slice(startIndex, startIndex + chunkSize);\n    }\n\n    processItem(stepExecution, item, itemIndex) {\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var data = stepExecution.getData();\n        var treeRoot = data.getRoots()[0];\n        var variableNames = stepExecution.executionContext.get(\"variableNames\");\n        var variableName = variableNames[itemIndex];\n\n\n\n        var results = []\n\n        item.forEach(variableValue=>{\n\n            this.expressionsEvaluator.clear(data);\n            this.expressionsEvaluator.evalGlobalCode(data);\n\n            data.expressionScope[variableName] = variableValue;\n\n            this.expressionsEvaluator.evalExpressionsForNode(data, treeRoot);\n            var vr = this.treeValidator.validate(data.getAllNodesInSubtree(treeRoot));\n            var valid = vr.isValid();\n\n            if(!valid) {\n                return null;\n            }\n\n            this.objectiveRulesManager.recomputeTree(treeRoot, false);\n            var policiesCollector = new PoliciesCollector(treeRoot, ruleName);\n            var policies = policiesCollector.policies;\n\n            var payoff = treeRoot.computedValue(ruleName, 'payoff');\n\n\n            var r = {\n                policies: policies,\n                variableName: variableName,\n                variableIndex: itemIndex,\n                variableValue: variableValue,\n                payoff: payoff\n            };\n            results.push(r)\n        });\n\n        return results;\n\n    }\n\n    writeChunk(stepExecution, items, jobResult) {\n        var params = stepExecution.getJobParameters();\n\n        var policyByKey = stepExecution.getJobExecutionContext().get(\"policyByKey\");\n        var policies = stepExecution.getJobExecutionContext().get(\"policies\");\n\n        items.forEach(itemsWrapper=>{\n            if(!itemsWrapper){\n                return;\n            }\n\n            itemsWrapper.forEach(item=>{\n                item.policies.forEach((policy)=>{\n\n                    var rowCells = [Policy.toPolicyString(policy)];\n                    jobResult.data.variableNames.forEach((v)=>{\n                        var value = \"default\";\n                        if(v == item.variableName){\n                            value = this.toFloat(item.variableValue);\n                        }else if(jobResult.data.defaultValues.hasOwnProperty(v)){\n                            value = jobResult.data.defaultValues[v];\n                        }\n                        rowCells.push(value)\n                    });\n                    var payoff = item.payoff;\n                    rowCells.push(Utils.isString(payoff)? payoff: this.toFloat(payoff));\n                    var row = {\n                        cells: rowCells,\n                        policyIndex: policies.indexOf(policyByKey[policy.key]),\n                    };\n                    jobResult.data.rows.push(row);\n                })\n            })\n\n\n        })\n    }\n\n\n    toFloat(v){\n        return ExpressionEngine.toFloat(v);\n    }\n}\n","import {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {PoliciesCollector} from \"../../../../../policies/policies-collector\";\nimport {Utils} from \"sd-utils\";\n\nexport class InitPoliciesStep extends Step {\n    constructor(jobRepository) {\n        super(\"init_policies\", jobRepository);\n    }\n\n    doExecute(stepExecution, result) {\n        var data = stepExecution.getData();\n        var params = stepExecution.getJobParameters();\n        var ruleName = params.value(\"ruleName\");\n        var treeRoot = data.getRoots()[0];\n        var policiesCollector = new PoliciesCollector(treeRoot);\n\n        stepExecution.getJobExecutionContext().put(\"policies\", policiesCollector.policies);\n        stepExecution.getJobExecutionContext().put(\"policyByKey\", Utils.getObjectByIdMap(policiesCollector.policies, null, 'key'));\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {Step} from \"../../../../engine/step\";\nimport {JOB_STATUS} from \"../../../../engine/job-status\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\n\nexport class PrepareVariablesStep extends Step {\n    constructor(jobRepository) {\n        super(\"prepare_variables\", jobRepository);\n    }\n\n    doExecute(stepExecution) {\n        var params = stepExecution.getJobParameters();\n        var variables = params.value(\"variables\");\n\n        var variableValues = [];\n        variables.forEach(v=> {\n            variableValues.push(this.sequence(v.min, v.max, v.length));\n        });\n        // variableValues = Utils.cartesianProductOf(variableValues);\n        stepExecution.getJobExecutionContext().put(\"variableValues\", variableValues);\n\n        stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n        return stepExecution;\n    }\n\n    sequence(min, max, length) {\n        var extent = max - min;\n        var step = extent / (length - 1);\n        var result = [min];\n        var curr = min;\n\n        for (var i = 0; i < length - 2; i++) {\n            curr += step;\n\n            result.push(ExpressionEngine.toFloat(ExpressionEngine.round(curr, 16)));\n        }\n        result.push(max);\n        return result;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {JobParameters} from \"../../../engine/job-parameters\";\nimport {JobParameterDefinition, PARAMETER_TYPE} from \"../../../engine/job-parameter-definition\";\nexport class TornadoDiagramJobParameters extends JobParameters {\n\n    initDefinitions() {\n        this.definitions.push(new JobParameterDefinition(\"id\", PARAMETER_TYPE.STRING, 1, 1, true));\n        this.definitions.push(new JobParameterDefinition(\"ruleName\", PARAMETER_TYPE.STRING));\n        this.definitions.push(new JobParameterDefinition(\"variables\", [\n                new JobParameterDefinition(\"name\", PARAMETER_TYPE.STRING),\n                new JobParameterDefinition(\"min\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"max\", PARAMETER_TYPE.NUMBER),\n                new JobParameterDefinition(\"length\", PARAMETER_TYPE.INTEGER).set(\"singleValueValidator\", v => v >= 0),\n            ], 1, Infinity, false,\n            v => v[\"min\"] <= v[\"max\"],\n            values => Utils.isUnique(values, v=>v[\"name\"]) //Variable names should be unique\n        ))\n    }\n\n    initDefaultValues() {\n        this.values = {\n            id: Utils.guid(),\n        }\n    }\n}\n","import {SimpleJob} from \"../../../engine/simple-job\";\nimport {PrepareVariablesStep} from \"./steps/prepare-variables-step\";\nimport {InitPoliciesStep} from \"./steps/init-policies-step\";\nimport {CalculateStep} from \"./steps/calculate-step\";\nimport {TornadoDiagramJobParameters} from \"./tornado-diagram-job-parameters\";\n\nexport class TornadoDiagramJob extends SimpleJob {\n\n    constructor(jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(\"tornado-diagram\", jobRepository);\n        this.addStep(new PrepareVariablesStep(jobRepository));\n        this.addStep(new InitPoliciesStep(jobRepository));\n        this.addStep(new CalculateStep(jobRepository, expressionsEvaluator, objectiveRulesManager));\n    }\n\n    createJobParameters(values) {\n        return new TornadoDiagramJobParameters(values);\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => data.getRoots().length === 1\n        }\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(execution){\n\n        if (execution.stepExecutions.length <= 2) {\n            return {\n                total: 1,\n                current: 0\n            };\n        }\n\n        return this.steps[2].getProgress(execution.stepExecutions[2]);\n    }\n}\n","import {JOB_STATUS} from \"../job-status\";\nimport {log} from 'sd-utils'\nimport {Step} from \"../step\";\nimport {JobInterruptedException} from \"../exceptions/job-interrupted-exception\";\n\n/*job step that process batch of items*/\nexport class BatchStep extends Step {\n\n    chunkSize;\n    static CURRENT_ITEM_COUNT_PROP = 'batch_step_current_item_count';\n    static TOTAL_ITEM_COUNT_PROP = 'batch_step_total_item_count';\n\n    constructor(name, jobRepository, chunkSize) {\n        super(name, jobRepository);\n        this.chunkSize = chunkSize;\n    }\n\n    /**\n     * Extension point for subclasses to perform step initialization. Should return total item count\n     */\n    init(stepExecution, jobResult) {\n        throw \"BatchStep.init function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to read and return chunk of items to process\n     */\n    readNextChunk(stepExecution, startIndex, chunkSize, jobResult) {\n        throw \"BatchStep.readNextChunk function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to process single item\n     * Must return processed item which will be passed in a chunk to writeChunk function\n     */\n    processItem(stepExecution, item, currentItemCount, jobResult) {\n        throw \"BatchStep.processItem function not implemented for step: \" + this.name;\n    }\n\n    /**\n     * Extension point for subclasses to write chunk of items. Not required\n     */\n    writeChunk(stepExecution, items, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to perform postprocessing after all items have been processed. Not required\n     */\n    postProcess(stepExecution, jobResult) {\n    }\n\n\n    setTotalItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.TOTAL_ITEM_COUNT_PROP, count);\n    }\n\n    getTotalItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.TOTAL_ITEM_COUNT_PROP);\n    }\n\n    setCurrentItemCount(stepExecution, count) {\n        stepExecution.executionContext.put(BatchStep.CURRENT_ITEM_COUNT_PROP, count);\n    }\n\n    getCurrentItemCount(stepExecution) {\n        return stepExecution.executionContext.get(BatchStep.CURRENT_ITEM_COUNT_PROP) || 0;\n    }\n\n\n    doExecute(stepExecution, jobResult) {\n        return Promise.resolve().then(()=> {\n            return this.init(stepExecution, jobResult)\n        }).catch(e=> {\n            log.error(\"Failed to initialize batch step: \" + this.name, e);\n            throw e;\n        }).then(totalItemCount=> {\n            return Promise.resolve().then(()=>{\n                this.setCurrentItemCount(stepExecution, this.getCurrentItemCount(stepExecution));\n                this.setTotalItemCount(stepExecution, totalItemCount);\n                return this.handleNextChunk(stepExecution, jobResult)\n            }).catch(e=> {\n                if(!(e instanceof JobInterruptedException)){\n                    log.error(\"Failed to handle batch step: \" + this.name, e);\n                }\n                throw e;\n            })\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.postProcess(stepExecution, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to postProcess batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(()=> {\n            stepExecution.exitStatus = JOB_STATUS.COMPLETED;\n            return stepExecution;\n        })\n\n    }\n\n    handleNextChunk(stepExecution, jobResult) {\n        var currentItemCount = this.getCurrentItemCount(stepExecution);\n        var totalItemCount = this.getTotalItemCount(stepExecution);\n        var chunkSize = Math.min(this.chunkSize, totalItemCount - currentItemCount);\n        if (currentItemCount >= totalItemCount) {\n            return stepExecution;\n        }\n        return this.checkJobExecutionFlags(stepExecution).then(()=> {\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return stepExecution\n        }).then(()=> {\n            return Promise.resolve().then(()=>{\n                return this.readNextChunk(stepExecution, currentItemCount, chunkSize, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to read chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            });\n        }).then(chunk=> {\n            return Promise.resolve().then(()=>{\n                return this.processChunk(stepExecution, chunk, currentItemCount, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to process chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then(processedChunk=> {\n            return Promise.resolve().then(()=>{\n                return this.writeChunk(stepExecution, processedChunk, jobResult)\n            }).catch(e=> {\n                log.error(\"Failed to write chunk (\" + currentItemCount + \",\" + chunkSize + \") in batch step: \" + this.name, e);\n                throw e;\n            })\n        }).then((res)=> {\n            currentItemCount += chunkSize;\n            this.setCurrentItemCount(stepExecution, currentItemCount);\n            return this.updateJobProgress(stepExecution).then(()=> {\n                return this.handleNextChunk(stepExecution, jobResult);\n            });\n        })\n    }\n\n    processChunk(stepExecution, chunk, currentItemCount, jobResult) { //TODO promisify\n        return chunk.map((item, i)=>this.processItem(stepExecution, item, currentItemCount+i, jobResult));\n    }\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: this.getTotalItemCount(stepExecution),\n            current: this.getCurrentItemCount(stepExecution)\n        }\n    }\n\n    updateJobProgress(stepExecution) {\n        var progress = this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).getProgress(stepExecution.jobExecution);\n        return this.jobRepository.updateJobExecutionProgress(stepExecution.jobExecution.id, progress);\n    }\n\n    checkJobExecutionFlags(stepExecution){\n        return this.jobRepository.getJobByName(stepExecution.jobExecution.jobInstance.jobName).checkExecutionFlags(stepExecution.jobExecution);\n    }\n}\n","export class ExtendableError {\n    data;\n    constructor(message, data) {\n        this.message = message;\n        this.data = data;\n        this.name = this.constructor.name;\n    }\n}\n","export * from './extendable-error'\nexport * from './job-data-invalid-exception'\nexport * from './job-execution-already-running-exception'\nexport * from './job-instance-already-complete-exception'\nexport * from './job-interrupted-exception'\nexport * from './job-parameters-invalid-exception'\nexport * from './job-restart-exception'\n\n\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobComputationException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobDataInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobExecutionAlreadyRunningException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInstanceAlreadyCompleteException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobInterruptedException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobParametersInvalidException extends ExtendableError {\n}\n","import {ExtendableError} from \"./extendable-error\";\nexport class JobRestartException extends ExtendableError {\n}\n","import {Utils} from \"sd-utils\";\n\nexport class ExecutionContext {\n\n    dirty = false;\n    context = {};\n\n    constructor(context) {\n        if (context) {\n            this.context = Utils.clone(context)\n        }\n    }\n\n    put(key, value) {\n        var prevValue = this.context[key];\n        if (value != null) {\n            var result = this.context[key] = value;\n            this.dirty = prevValue == null || prevValue != null && prevValue != value;\n        }\n        else {\n            delete this.context[key];\n            this.dirty = prevValue != null;\n        }\n    }\n\n    get(key) {\n        return this.context[key];\n    }\n\n    containsKey(key) {\n        return this.context.hasOwnProperty(key);\n    }\n\n    remove(key) {\n        delete this.context[key];\n    }\n\n    setData(data) { //set data model\n        return this.put(\"data\", data);\n    }\n\n    getData() { // get data model\n        return this.get(\"data\");\n    }\n\n    getDTO() {\n        var dto = Utils.cloneDeep(this);\n        var data = this.getData();\n        if (data) {\n            data = data.getDTO();\n            dto.context[\"data\"] = data;\n        }\n        return dto;\n    }\n\n}\n","import * as exceptions from './exceptions'\n\nexport {exceptions}\nexport * from './execution-context'\nexport * from './job'\nexport * from './job-execution'\nexport * from './job-execution-flag'\nexport * from './job-execution-listener'\nexport * from './job-instance'\nexport * from './job-key-generator'\nexport * from './job-launcher'\nexport * from './job-parameter-definition'\nexport * from './job-parameters'\nexport * from './job-status'\nexport * from './simple-job'\nexport * from './step'\nexport * from './step-execution'\nexport * from './step-execution-listener'\n\n\n\n\n","export const JOB_EXECUTION_FLAG = {\n    STOP: 'STOP'\n};\n","export class JobExecutionListener {\n    /*Called before a job executes*/\n    beforeJob(jobExecution) {\n\n    }\n\n    /*Called after completion of a job. Called after both successful and failed executions*/\n    afterJob(jobExecution) {\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the execution of a job.*/\nexport class JobExecution {\n    id;\n    jobInstance;\n    jobParameters;\n    stepExecutions = [];\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.UNKNOWN;\n    executionContext = new ExecutionContext();\n\n    startTime = null;\n    createTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    failureExceptions = [];\n\n    constructor(jobInstance, jobParameters, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n        this.jobParameters = jobParameters;\n    }\n\n    /**\n     * Register a step execution with the current job execution.\n     * @param stepName the name of the step the new execution is associated with\n     */\n    createStepExecution(stepName) {\n        var stepExecution = new StepExecution(stepName, this);\n        this.stepExecutions.push(stepExecution);\n        return stepExecution;\n    }\n\n    isRunning() {\n        return !this.endTime;\n    }\n\n    /**\n     * Test if this JobExecution has been signalled to\n     * stop.\n     */\n    isStopping() {\n        return this.status === JOB_STATUS.STOPPING;\n    }\n\n    /**\n     * Signal the JobExecution to stop.\n     */\n    stop() {\n        this.stepExecutions.forEach(se=> {\n            se.terminateOnly = true;\n        });\n        this.status = JOB_STATUS.STOPPING;\n    }\n\n    getData() {\n        return this.executionContext.getData();\n    }\n\n    getDTO(filteredProperties = [], deepClone = true) {\n        var cloneMethod = Utils.cloneDeepWith;\n        if (!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if (filteredProperties.indexOf(key) > -1) {\n                return null;\n            }\n\n            if ([\"jobParameters\", \"executionContext\"].indexOf(key) > -1) {\n                return value.getDTO()\n            }\n            if (value instanceof Error) {\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof StepExecution) {\n                return value.getDTO([\"jobExecution\"], deepClone)\n            }\n        }))\n    }\n}\n","/* object representing a uniquely identifiable job run. JobInstance can be restarted multiple times in case of execution failure and it's lifecycle ends with first successful execution*/\nexport class JobInstance{\n\n    id;\n    jobName;\n    constructor(id, jobName){\n        this.id = id;\n        this.jobName = jobName;\n    }\n\n}\n","\nexport class JobKeyGenerator {\n    /*Method to generate the unique key used to identify a job instance.*/\n    static generateKey(jobParameters) {\n        var result = \"\";\n        jobParameters.definitions.forEach((d, i)=> {\n            if(d.identifying){\n                result += d.name + \"=\" + jobParameters.values[d.name] + \";\";\n            }\n        });\n        return result;\n    }\n}\n","import {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {Utils, log} from \"sd-utils\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\n\nexport class JobLauncher {\n\n    jobRepository;\n    jobWorker;\n\n    constructor(jobRepository, jobWorker, dataModelSerializer) {\n        this.jobRepository = jobRepository;\n        this.jobWorker = jobWorker;\n        this.dataModelSerializer = dataModelSerializer;\n    }\n\n\n    run(jobOrName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        var job;\n        var jobParameters;\n\n        return Promise.resolve().then(()=> {\n            if (Utils.isString(jobOrName)) {\n                job = this.jobRepository.getJobByName(jobOrName)\n            } else {\n                job = jobOrName;\n            }\n            if (!job) {\n                throw new JobRestartException(\"No such job: \" + jobOrName);\n            }\n\n            jobParameters = job.createJobParameters(jobParametersValues);\n\n            return this.validate(job, jobParameters, data);\n        }).then(valid=>{\n            return this.jobRepository.createJobExecution(job.name, jobParameters, data).then(jobExecution=>{\n\n\n                if(this.jobWorker){\n                    log.debug(\"Job: [\" + job.name + \"] execution [\"+jobExecution.id+\"] delegated to worker\");\n                    this.jobWorker.executeJob(jobExecution.id);\n                    return jobExecution;\n                }\n\n                var executionPromise = this._execute(job, jobExecution);\n                if(resolvePromiseAfterJobIsLaunched){\n                    return jobExecution;\n                }\n                return executionPromise;\n            })\n        })\n    }\n\n    validate(job, jobParameters, data){\n        return this.jobRepository.getLastJobExecution(job.name, jobParameters).then(lastExecution=>{\n            if (lastExecution != null) {\n                if (!job.isRestartable) {\n                    throw new JobRestartException(\"JobInstance already exists and is not restartable\");\n                }\n\n                lastExecution.stepExecutions.forEach(execution=> {\n                    if (execution.status == JOB_STATUS.UNKNOWN) {\n                        throw new JobRestartException(\"Step [\" + execution.stepName + \"] is of status UNKNOWN\");\n                    }\n                });\n            }\n            if (job.jobParametersValidator && !job.jobParametersValidator.validate(jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in jobLauncher.run for job: \"+job.name)\n            }\n\n            if(job.jobDataValidator && !job.jobDataValidator.validate(data)){\n                throw new JobDataInvalidException(\"Invalid job data in jobLauncher.run for job: \"+job.name)\n            }\n\n            return true;\n        })\n    }\n\n    /**Execute previously created job execution*/\n    execute(jobExecutionOrId){\n\n        return Promise.resolve().then(()=>{\n            if(Utils.isString(jobExecutionOrId)){\n                return this.jobRepository.getJobExecutionById(jobExecutionOrId);\n            }\n            return jobExecutionOrId;\n        }).then(jobExecution=>{\n            if(!jobExecution){\n                throw new JobRestartException(\"JobExecution [\" + jobExecutionOrId + \"] is not found\");\n            }\n\n            if (jobExecution.status !== JOB_STATUS.STARTING) {\n                throw new JobRestartException(\"JobExecution [\" + jobExecution.id + \"] already started\");\n            }\n\n            var jobName = jobExecution.jobInstance.jobName;\n            var job = this.jobRepository.getJobByName(jobName);\n            if(!job){\n                throw new JobRestartException(\"No such job: \" + jobName);\n            }\n\n            return  this._execute(job, jobExecution);\n        })\n    }\n\n    _execute(job, jobExecution){\n        var jobName = job.name;\n        log.info(\"Job: [\" + jobName + \"] launched with the following parameters: [\" + jobExecution.jobParameters + \"]\", jobExecution.getData());\n        return job.execute(jobExecution).then(jobExecution=>{\n            log.info(\"Job: [\" + jobName + \"] completed with the following parameters: [\" + jobExecution.jobParameters + \"] and the following status: [\" + jobExecution.status + \"]\");\n            return jobExecution;\n        }).catch(e =>{\n            log.error(\"Job: [\" + jobName + \"] failed unexpectedly and fatally with the following parameters: [\" + jobExecution.jobParameters + \"]\", e);\n            throw e;\n        })\n    }\n}\n","import {Utils} from \"sd-utils\";\nexport const PARAMETER_TYPE = {\n    STRING: 'STRING',\n    DATE: 'DATE',\n    INTEGER: 'INTEGER',\n    NUMBER: 'FLOAT',\n    BOOLEAN: 'BOOLEAN',\n    NUMBER_EXPRESSION: 'NUMBER_EXPRESSION',\n    COMPOSITE: 'COMPOSITE' //composite parameter with nested subparameters\n};\n\nexport class JobParameterDefinition {\n    name;\n    type;\n    nestedParameters = [];\n    minOccurs;\n    maxOccurs;\n    required = true;\n\n    identifying;\n    validator;\n    singleValueValidator;\n\n    constructor(name, typeOrNestedParametersDefinitions, minOccurs = 1, maxOccurs = 1, identifying = false, singleValueValidator = null, validator = null) {\n        this.name = name;\n        if (Utils.isArray(typeOrNestedParametersDefinitions)) {\n            this.type = PARAMETER_TYPE.COMPOSITE;\n            this.nestedParameters = typeOrNestedParametersDefinitions;\n        } else {\n            this.type = typeOrNestedParametersDefinitions;\n        }\n        this.validator = validator;\n        this.singleValueValidator = singleValueValidator;\n        this.identifying = identifying;\n        this.minOccurs = minOccurs;\n        this.maxOccurs = maxOccurs;\n    }\n\n    set(key, val) {\n        this[key] = val;\n        return this;\n    }\n\n    validate(value, allValues) {\n        var isArray = Utils.isArray(value);\n\n        if (this.maxOccurs > 1 && !isArray) {\n            return false;\n        }\n\n        if (!isArray) {\n            return this.validateSingleValue(value, allValues)\n        }\n\n        if (value.length < this.minOccurs || value.length > this.maxOccurs) {\n            return false;\n        }\n\n        if (!value.every(v=>this.validateSingleValue(v, value))) {\n            return false;\n        }\n\n        if (this.validator) {\n            return this.validator(value, allValues);\n        }\n\n        return true;\n    }\n    // allValues - all values on the same level\n    validateSingleValue(value, allValues) {\n        if ((value === null || value === undefined) && this.minOccurs > 0) {\n            return false\n        }\n\n        if (this.required && (!value && value !== 0 && value !== false)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.STRING === this.type && !Utils.isString(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.DATE === this.type && !Utils.isDate(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.INTEGER === this.type && !Utils.isInt(value)) {\n            return false;\n        }\n        if (PARAMETER_TYPE.NUMBER === this.type && !Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (PARAMETER_TYPE.COMPOSITE === this.type) {\n            if (!Utils.isObject(value)) {\n                return false;\n            }\n            if (!this.nestedParameters.every((nestedDef, i)=>nestedDef.validate(value[nestedDef.name]))) {\n                return false;\n            }\n        }\n\n        if (this.singleValueValidator) {\n            return this.singleValueValidator(value, allValues);\n        }\n\n        return true;\n    }\n}\n","import {PARAMETER_TYPE} from \"./job-parameter-definition\";\nimport {Utils} from \"sd-utils\";\n\nexport class JobParameters{\n    definitions = [];\n    values={};\n\n    constructor(values){\n        this.initDefinitions();\n        this.initDefaultValues();\n        if (values) {\n            Utils.deepExtend(this.values, values);\n        }\n    }\n\n    initDefinitions(){\n\n    }\n\n    initDefaultValues(){\n\n    }\n\n    validate(){\n        return this.definitions.every((def, i)=>def.validate(this.values[def.name], this.values));\n    }\n\n    /*get or set value by path*/\n    value(path, value){\n        if (arguments.length === 1) {\n            return  Utils.get(this.values, path, null);\n        }\n        Utils.set(this.values, path, value);\n        return value;\n    }\n\n    toString(){\n        var result = \"JobParameters[\";\n\n        this.definitions.forEach((d, i)=> {\n\n            var val = this.values[d.name];\n            // if(Utils.isArray(val)){\n            //     var values = val;\n            //\n            //\n            // }\n            // if(PARAMETER_TYPE.COMPOSITE == d.type){\n            //\n            // }\n\n            result += d.name + \"=\"+val + \";\";\n        });\n        result+=\"]\";\n        return result;\n    }\n\n    getDTO(){\n        return {\n            values: this.values\n        }\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {default as idb} from \"idb\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobInstance} from \"../job-instance\";\nimport {StepExecution} from \"../step-execution\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {DataModel} from \"sd-model\";\nimport {log} from \"sd-utils\";\n\n/* IndexedDB job repository*/\nexport class IdbJobRepository extends JobRepository {\n\n    dbPromise;\n    jobInstanceDao;\n    jobExecutionDao;\n    stepExecutionDao;\n    jobResultDao;\n    jobExecutionProgressDao;\n    jobExecutionFlagDao;\n\n    constructor(expressionsReviver, dbName = 'sd-job-repository', deleteDB = false) {\n        super();\n        this.dbName = dbName;\n        this.expressionsReviver = expressionsReviver;\n        if (deleteDB) {\n            this.deleteDB().then(()=> {\n                this.initDB()\n            }).catch(e=> {\n                log.error(e);\n                this.initDB();\n            })\n        } else {\n            this.initDB()\n        }\n    }\n\n    initDB() {\n        this.dbPromise = idb.open(this.dbName, 2, upgradeDB => {\n            // Note: we don't use 'break' in this switch statement,\n            // the fall-through behaviour is what we want.\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('job-instances');\n                    var jobExecutionsOS = upgradeDB.createObjectStore('job-executions');\n                    jobExecutionsOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: false});\n                    jobExecutionsOS.createIndex(\"createTime\", \"createTime\", {unique: false});\n                    jobExecutionsOS.createIndex(\"status\", \"status\", {unique: false});\n                    upgradeDB.createObjectStore('job-execution-progress');\n                    upgradeDB.createObjectStore('job-execution-flags');\n                    var stepExecutionsOS = upgradeDB.createObjectStore('step-executions');\n                    stepExecutionsOS.createIndex(\"jobExecutionId\", \"jobExecutionId\", {unique: false});\n\n                    var jobResultOS = upgradeDB.createObjectStore('job-results');\n                    jobResultOS.createIndex(\"jobInstanceId\", \"jobInstance.id\", {unique: true});\n                case 1:\n                    upgradeDB.transaction.objectStore('job-instances').createIndex(\"id\", \"id\", {unique: true});\n            }\n\n        });\n\n        this.jobInstanceDao = new ObjectStoreDao('job-instances', this.dbPromise);\n        this.jobExecutionDao = new ObjectStoreDao('job-executions', this.dbPromise);\n        this.jobExecutionProgressDao = new ObjectStoreDao('job-execution-progress', this.dbPromise);\n        this.jobExecutionFlagDao = new ObjectStoreDao('job-execution-flags', this.dbPromise);\n        this.stepExecutionDao = new ObjectStoreDao('step-executions', this.dbPromise);\n        this.jobResultDao = new ObjectStoreDao('job-results', this.dbPromise);\n    }\n\n    deleteDB() {\n        return Promise.resolve().then(_=>idb.delete(this.dbName));\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.remove(key).then(()=>{\n            this.findJobExecutions(jobInstance, false).then(jobExecutions=>{  //  Not waiting for promise resolves\n                jobExecutions.forEach(this.removeJobExecution, this);\n            });\n\n            this.getJobResultByInstance(jobInstance).then(jobResult=>{\n                return this.removeJobResult(jobResult)\n            })\n        });\n    }\n\n    removeJobExecution(jobExecution){\n        return this.jobExecutionDao.remove(jobExecution.id).then(()=>{\n            return this.findStepExecutions(jobExecution.id, false).then(stepExecutions=>{  // Not waiting for promise resolves\n                stepExecutions.forEach(this.removeStepExecution, this);\n            });\n        });\n    }\n\n    removeStepExecution(stepExecution){\n        return this.stepExecutionDao.remove(stepExecution.id)\n    }\n\n    removeJobResult(jobResult){\n        return this.jobResultDao.remove(jobResult.id);\n    }\n\n\n\n\n    getJobResult(jobResultId) {\n        return this.jobResultDao.get(jobResultId);\n    }\n\n    getJobResultByInstance(jobInstance) {\n        return this.jobResultDao.getByIndex(\"jobInstanceId\", jobInstance.id);\n    }\n\n    saveJobResult(jobResult) {\n        return this.jobResultDao.set(jobResult.id, jobResult).then(r=>jobResult);\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.jobInstanceDao.get(key).then(dto=>dto ? this.reviveJobInstance(dto) : dto);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters) {\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        return this.jobInstanceDao.set(key, jobInstance).then(r=>jobInstance);\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution) {\n        var dto = jobExecution.getDTO();\n        var stepExecutionsDTOs = dto.stepExecutions;\n        dto.stepExecutions = null;\n        return this.jobExecutionDao.set(jobExecution.id, dto).then(r=>this.saveStepExecutionsDTOS(stepExecutionsDTOs)).then(r=>jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress) {\n        return this.jobExecutionProgressDao.set(jobExecutionId, progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId) {\n        return this.jobExecutionProgressDao.get(jobExecutionId)\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag) {\n        return this.jobExecutionFlagDao.set(jobExecutionId, flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId) {\n        return this.jobExecutionFlagDao.get(jobExecutionId)\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution) {\n        var dto = stepExecution.getDTO([\"jobExecution\"]);\n        return this.stepExecutionDao.set(stepExecution.id, dto).then(r=>stepExecution);\n    }\n\n    saveStepExecutionsDTOS(stepExecutions, savedExecutions = []) {\n        if (stepExecutions.length <= savedExecutions.length) {\n            return Promise.resolve(savedExecutions);\n        }\n        var stepExecutionDTO = stepExecutions[savedExecutions.length];\n        return this.stepExecutionDao.set(stepExecutionDTO.id, stepExecutionDTO).then(()=> {\n            savedExecutions.push(stepExecutionDTO);\n            return this.saveStepExecutionsDTOS(stepExecutions, savedExecutions);\n        });\n    }\n\n    getJobExecutionById(id) {\n        return this.jobExecutionDao.get(id).then(dto=> {\n            return this.fetchJobExecutionRelations(dto);\n        });\n    }\n\n    fetchJobExecutionRelations(jobExecutionDTO, revive = true) {\n        if (!jobExecutionDTO) {\n            return Promise.resolve(null)\n        }\n        return this.findStepExecutions(jobExecutionDTO.id, false).then(steps=> {\n            jobExecutionDTO.stepExecutions = steps;\n            if (!revive) {\n                return jobExecutionDTO;\n            }\n            return this.reviveJobExecution(jobExecutionDTO);\n        })\n    }\n\n    fetchJobExecutionsRelations(jobExecutionDtoList, revive = true, fetched = []) {\n        if (jobExecutionDtoList.length <= fetched.length) {\n            return Promise.resolve(fetched);\n        }\n        return this.fetchJobExecutionRelations(jobExecutionDtoList[fetched.length], revive).then((jobExecution)=> {\n            fetched.push(jobExecution);\n\n            return this.fetchJobExecutionsRelations(jobExecutionDtoList, revive, fetched);\n        });\n    }\n\n    findStepExecutions(jobExecutionId, revive = true) {\n        return this.stepExecutionDao.getAllByIndex(\"jobExecutionId\", jobExecutionId).then(dtos=> {\n            if (!revive) {\n                return dtos;\n            }\n            return dtos.map(dto=>this.reviveStepExecution(dto));\n        })\n    }\n\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance, fetchRelationsAndRevive = true) {\n        return this.jobExecutionDao.getAllByIndex(\"jobInstanceId\", jobInstance.id).then(values=> {\n            var sorted = values.sort(function (a, b) {\n                return a.createTime.getTime() - b.createTime.getTime()\n            });\n\n            if (!fetchRelationsAndRevive) {\n                return sorted;\n            }\n\n            return this.fetchJobExecutionsRelations(sorted, true)\n        });\n    }\n\n    getLastJobExecutionByInstance(jobInstance) {\n        return this.findJobExecutions(jobInstance, false).then(executions=>this.fetchJobExecutionRelations(executions[executions.length - 1]));\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=> {\n            var stepExecutions = [];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=> {\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    reviveJobInstance(dto) {\n        return new JobInstance(dto.id, dto.jobName);\n    }\n\n    reviveExecutionContext(dto) {\n        var executionContext = new ExecutionContext();\n        executionContext.context = dto.context;\n        var data = executionContext.getData();\n        if (data) {\n            var dataModel = new DataModel();\n            dataModel.loadFromDTO(data, this.expressionsReviver);\n            executionContext.setData(dataModel);\n        }\n        return executionContext\n    }\n\n    reviveJobExecution(dto) {\n\n        var job = this.getJobByName(dto.jobInstance.jobName);\n        var jobInstance = this.reviveJobInstance(dto.jobInstance);\n        var jobParameters = job.createJobParameters(dto.jobParameters.values);\n        var jobExecution = new JobExecution(jobInstance, jobParameters, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(jobExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobInstance\") {\n                return jobInstance;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n            if (key === \"jobParameters\") {\n                return jobParameters;\n            }\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n\n            if (key === \"stepExecutions\") {\n                return srcValue.map(stepDTO => this.reviveStepExecution(stepDTO, jobExecution));\n            }\n        })\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        var stepExecution = new StepExecution(dto.stepName, jobExecution, dto.id);\n        var executionContext = this.reviveExecutionContext(dto.executionContext);\n        return Utils.mergeWith(stepExecution, dto, (objValue, srcValue, key, object, source, stack)=> {\n            if (key === \"jobExecution\") {\n                return jobExecution;\n            }\n            if (key === \"executionContext\") {\n                return executionContext;\n            }\n        })\n    }\n}\n\n\nclass ObjectStoreDao {\n\n    name;\n    dbPromise;\n\n    constructor(name, dbPromise) {\n        this.name = name;\n        this.dbPromise = dbPromise;\n    }\n\n    get(key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).get(key);\n        });\n    }\n\n    getAllByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).getAll(key)\n        });\n    }\n\n    getByIndex(indexName, key) {\n        return this.dbPromise.then(db => {\n            return db.transaction(this.name)\n                .objectStore(this.name).index(indexName).get(key)\n        });\n    }\n\n    set(key, val) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).put(val, key);\n            return tx.complete;\n        });\n    }\n\n    remove(key) {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).delete(key);\n            return tx.complete;\n        });\n    }\n\n    clear() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name, 'readwrite');\n            tx.objectStore(this.name).clear();\n            return tx.complete;\n        });\n    }\n\n    keys() {\n        return this.dbPromise.then(db => {\n            const tx = db.transaction(this.name);\n            const keys = [];\n            const store = tx.objectStore(this.name);\n\n            // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n            // openKeyCursor isn't supported by Safari, so we fall back\n            (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n                if (!cursor) return;\n                keys.push(cursor.key);\n                cursor.continue();\n            });\n\n            return tx.complete.then(() => keys);\n        });\n    }\n}\n","import {JobKeyGenerator} from \"../job-key-generator\";\nimport {JobInstance} from \"../job-instance\";\nimport {Utils} from \"sd-utils\";\nimport {JobExecution} from \"../job-execution\";\nimport {JobExecutionAlreadyRunningException} from \"../exceptions/job-execution-already-running-exception\";\nimport {JOB_STATUS} from \"../job-status\";\nimport {JobInstanceAlreadyCompleteException} from \"../exceptions/job-instance-already-complete-exception\";\nimport {ExecutionContext} from \"../execution-context\";\nimport {StepExecution} from \"../step-execution\";\nimport {DataModel} from \"sd-model\";\nimport {JobResult} from \"../job-result\";\n\nexport class JobRepository {\n\n    jobByName = {};\n\n    registerJob(job) {\n        this.jobByName[job.name] = job;\n    }\n\n    getJobByName(name) {\n        return this.jobByName[name];\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n       throw \"JobRepository getJobInstance function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(key, jobInstance){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionById(id){\n        throw \"JobRepository.getJobExecutionById function not implemented!\"\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        throw \"JobRepository.saveJobInstance function not implemented!\"\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        throw \"JobRepository.getJobExecutionProgress function not implemented!\"\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        throw \"JobRepository.saveJobExecutionFlag function not implemented!\"\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        throw \"JobRepository.getJobExecutionFlag function not implemented!\"\n    }\n\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        throw \"JobRepository.saveStepExecution function not implemented!\"\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        throw \"JobRepository.findJobExecutions function not implemented!\"\n    }\n\n    getJobResult(jobResultId){\n        throw \"JobRepository.getJobResult function not implemented!\"\n    }\n\n    getJobResultByInstance(jobInstance){\n        throw \"JobRepository.getJobResultByInstance function not implemented!\"\n    }\n\n    saveJobResult(jobResult) {\n        throw \"JobRepository.setJobResult function not implemented!\"\n    }\n\n\n    removeJobInstance(jobInstance, jobParameters){\n        throw \"JobRepository.removeJobInstance function not implemented!\"\n    }\n\n    removeJobExecution(jobExecution){\n        throw \"JobRepository.removeJobExecution function not implemented!\"\n    }\n\n    removeStepExecution(stepExecution){\n        throw \"JobRepository.removeStepExecution function not implemented!\"\n    }\n\n    removeJobResult(jobResult){\n        throw \"JobRepository.removeJobResult function not implemented!\"\n    }\n\n    /*Create a new JobInstance with the name and job parameters provided. return promise*/\n    createJobInstance(jobName, jobParameters) {\n        var jobInstance = new JobInstance(Utils.guid(), jobName);\n        return this.saveJobInstance(jobInstance, jobParameters);\n    }\n\n    /*Check if an instance of this job already exists with the parameters provided.*/\n    isJobInstanceExists(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then(result => !!result).catch(error=>false);\n    }\n\n    generateJobInstanceKey(jobName, jobParameters) {\n        return jobName + \"|\" + JobKeyGenerator.generateKey(jobParameters);\n    }\n\n    /*Create a JobExecution for a given  Job and JobParameters. If matching JobInstance already exists,\n     * the job must be restartable and it's last JobExecution must *not* be\n     * completed. If matching JobInstance does not exist yet it will be  created.*/\n\n    createJobExecution(jobName, jobParameters, data) {\n        return this.getJobInstance(jobName, jobParameters).then(jobInstance=>{\n            if (jobInstance != null) {\n                return this.findJobExecutions(jobInstance).then(executions=>{\n                    executions.forEach(execution=> {\n                        if (execution.isRunning()) {\n                            throw new JobExecutionAlreadyRunningException(\"A job execution for this job is already running: \" + jobInstance.jobName);\n                        }\n                        if (execution.status == JOB_STATUS.COMPLETED || execution.status == JOB_STATUS.ABANDONED) {\n                            throw new JobInstanceAlreadyCompleteException(\n                                \"A job instance already exists and is complete for parameters=\" + jobParameters\n                                + \".  If you want to run this job again, change the parameters.\");\n                        }\n                    });\n\n                    var executionContext = executions[executions.length - 1].executionContext;\n\n                    return [jobInstance, executionContext];\n                })\n            }\n\n            // no job found, create one\n            jobInstance = this.createJobInstance(jobName, jobParameters);\n            var executionContext = new ExecutionContext();\n            var dataModel = new DataModel();\n            dataModel._setNewState(data.createStateSnapshot());\n            executionContext.setData(dataModel);\n            return Promise.all([jobInstance, executionContext]);\n        }).then(instanceAndExecutionContext=>{\n            var jobExecution = new JobExecution(instanceAndExecutionContext[0], jobParameters);\n            jobExecution.executionContext = instanceAndExecutionContext[1];\n            jobExecution.lastUpdated = new Date();\n            return this.saveJobExecution(jobExecution);\n        }).catch(e=>{\n            throw e;\n        })\n    }\n\n    getLastJobExecution(jobName, jobParameters) {\n        return this.getJobInstance(jobName, jobParameters).then((jobInstance)=>{\n            if(!jobInstance){\n                return null;\n            }\n            return this.getLastJobExecutionByInstance(jobInstance);\n        })\n    }\n\n    getLastJobExecutionByInstance(jobInstance){\n        return this.findJobExecutions(jobInstance).then(executions=>executions[executions.length -1]);\n    }\n\n    getLastStepExecution(jobInstance, stepName) {\n        return this.findJobExecutions(jobInstance).then(jobExecutions=>{\n            var stepExecutions=[];\n            jobExecutions.forEach(jobExecution=>jobExecution.stepExecutions.filter(s=>s.stepName === stepName).forEach((s)=>stepExecutions.push(s)));\n            var latest = null;\n            stepExecutions.forEach(s=>{\n                if (latest == null || latest.startTime.getTime() < s.startTime.getTime()) {\n                    latest = s;\n                }\n            });\n            return latest;\n        })\n    }\n\n    addStepExecution(stepExecution) {\n        stepExecution.lastUpdated = new Date();\n        return this.saveStepExecution(stepExecution);\n    }\n\n    update(o){\n        o.lastUpdated = new Date();\n\n        if(o instanceof JobExecution){\n            return this.saveJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.saveStepExecution(o);\n        }\n\n        throw \"Object not updatable: \"+o\n    }\n\n    remove(o){\n\n        if(o instanceof JobExecution){\n            return this.removeJobExecution(o);\n        }\n\n        if(o instanceof StepExecution){\n            return this.removeStepExecution(o);\n        }\n\n        if(o instanceof JobResult){\n            return this.removeJobResult();\n        }\n\n        return Promise.reject(\"Object not removable: \"+o);\n    }\n\n\n    reviveJobInstance(dto) {\n        return dto;\n    }\n\n    reviveExecutionContext(dto) {\n        return dto;\n    }\n\n    reviveJobExecution(dto) {\n        return dto;\n    }\n\n    reviveStepExecution(dto, jobExecution) {\n        return dto;\n    }\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\n\nexport class SimpleJobRepository extends JobRepository{\n    jobInstancesByKey = {};\n    jobExecutions = [];\n    stepExecutions = [];\n    executionProgress = {};\n    executionFlags = {};\n    jobResults = [];\n\n    removeJobInstance(jobInstance){\n        Utils.forOwn(this.jobInstancesByKey,  (ji, key)=>{\n            if(ji===jobInstance){\n                delete this.jobInstancesByKey[key]\n            }\n        });\n\n        this.jobExecutions.filter(jobExecution=>jobExecution.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobExecution, this);\n        this.jobResults.filter(jobResult=>jobResult.jobInstance.id == jobInstance.id).reverse().forEach(this.removeJobResult, this);\n\n        return Promise.resolve();\n    }\n\n    removeJobExecution(jobExecution){\n        let index = this.jobExecutions.indexOf(jobExecution);\n        if(index>-1) {\n            this.jobExecutions.splice(index, 1)\n        }\n\n        this.stepExecutions.filter(stepExecution=>stepExecution.jobExecution.id === jobExecution.id).reverse().forEach(this.removeStepExecution, this);\n        return Promise.resolve();\n    }\n\n    removeStepExecution(stepExecution){\n        let index = this.stepExecutions.indexOf(stepExecution);\n        if(index>-1) {\n            this.stepExecutions.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n    removeJobResult(jobResult){\n        let index = this.jobResults.indexOf(jobResult);\n        if(index>-1) {\n            this.jobResults.splice(index, 1)\n        }\n        return Promise.resolve();\n    }\n\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return Promise.resolve(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return Promise.resolve(jobInstance)\n    }\n\n    getJobResult(jobResultId){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.id===jobResultId))\n    }\n\n    getJobResultByInstance(jobInstance){\n        return Promise.resolve(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id))\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return Promise.resolve(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return Promise.resolve(Utils.find(this.jobExecutions, ex=>ex.id===id))\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return Promise.resolve(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return Promise.resolve(progress)\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return Promise.resolve(this.executionProgress[jobExecutionId])\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return Promise.resolve(flag)\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return Promise.resolve(this.executionFlags[jobExecutionId])\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return Promise.resolve(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return Promise.resolve(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n\n}\n","import {JobRepository} from \"./job-repository\";\nimport {Utils} from \"sd-utils\";\nimport {SimpleJobRepository} from \"./simple-job-repository\";\n\n\n\nexport class TimeoutJobRepository extends SimpleJobRepository{\n\n    createTimeoutPromise(valueToResolve, delay=1){\n        return new Promise(resolve=>{\n            setTimeout(function(){\n                resolve(valueToResolve);\n            }, delay)\n        });\n    }\n\n    /*returns promise*/\n    getJobInstance(jobName, jobParameters) {\n        var key = this.generateJobInstanceKey(jobName, jobParameters);\n        return this.createTimeoutPromise(this.jobInstancesByKey[key]);\n    }\n\n    /*should return promise that resolves to saved instance*/\n    saveJobInstance(jobInstance, jobParameters){\n        var key = this.generateJobInstanceKey(jobInstance.jobName, jobParameters);\n        this.jobInstancesByKey[key] = jobInstance;\n        return this.createTimeoutPromise(jobInstance);\n    }\n\n    getJobResult(jobResultId){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.id===jobResultId));\n    }\n\n    getJobResultByInstance(jobInstance){\n        return this.createTimeoutPromise(Utils.find(this.jobResults, r=>r.jobInstance.id===jobInstance.id));\n    }\n\n    saveJobResult(jobResult) {\n        this.jobResults.push(jobResult);\n        return this.createTimeoutPromise(jobResult);\n    }\n\n    getJobExecutionById(id){\n        return this.createTimeoutPromise(Utils.find(this.jobExecutions, ex=>ex.id===id));\n    }\n\n    /*should return promise that resolves to saved jobExecution*/\n    saveJobExecution(jobExecution){\n        this.jobExecutions.push(jobExecution);\n        return this.createTimeoutPromise(jobExecution);\n    }\n\n    updateJobExecutionProgress(jobExecutionId, progress){\n        this.executionProgress[jobExecutionId] = progress;\n        return this.createTimeoutPromise(progress);\n    }\n\n    getJobExecutionProgress(jobExecutionId){\n        return this.createTimeoutPromise(this.executionProgress[jobExecutionId]);\n    }\n\n    saveJobExecutionFlag(jobExecutionId, flag){\n        this.executionFlags[jobExecutionId] = flag;\n        return this.createTimeoutPromise(flag);\n    }\n\n    getJobExecutionFlag(jobExecutionId){\n        return this.createTimeoutPromise(this.executionFlags[jobExecutionId]);\n    }\n\n    /*should return promise which resolves to saved stepExecution*/\n    saveStepExecution(stepExecution){\n        this.stepExecutions.push(stepExecution);\n        return this.createTimeoutPromise(stepExecution);\n    }\n\n    /*find job executions sorted by createTime, returns promise*/\n    findJobExecutions(jobInstance) {\n        return this.createTimeoutPromise(this.jobExecutions.filter(e=>e.jobInstance.id == jobInstance.id).sort(function (a, b) {\n            return a.createTime.getTime() - b.createTime.getTime()\n        }));\n    }\n\n    remove(object){ //TODO\n\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {StepExecution} from \"./step-execution\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\n\n/*domain object representing the result of a job instance.*/\nexport class JobResult {\n    id;\n    jobInstance;\n    lastUpdated = null;\n\n    data;\n\n    constructor(jobInstance, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.jobInstance = jobInstance;\n    }\n}\n","export const JOB_STATUS = {\n    COMPLETED: 'COMPLETED',\n    STARTING: 'STARTING',\n    STARTED: 'STARTED',\n    STOPPING: 'STOPPING',\n    STOPPED: 'STOPPED',\n    FAILED: 'FAILED',\n    UNKNOWN: 'UNKNOWN',\n    ABANDONED: 'ABANDONED',\n    EXECUTING: 'EXECUTING' //for exit status only\n};\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobParametersInvalidException} from \"./exceptions/job-parameters-invalid-exception\";\nimport {JobDataInvalidException} from \"./exceptions/job-data-invalid-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\nimport {JobResult} from \"./job-result\";\n/*Base class for jobs*/\n//A Job is an entity that encapsulates an entire job process ( an abstraction representing the configuration of a job).\n\nexport class Job {\n\n    id;\n    name;\n    steps = [];\n\n    isRestartable=true;\n    executionListeners = [];\n    jobParametersValidator;\n\n    jobRepository;\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        this.name = name;\n        this.jobParametersValidator = this.getJobParametersValidator();\n        this.jobDataValidator = this.getJobDataValidator();\n        this.jobRepository = jobRepository;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    execute(execution) {\n        log.debug(\"Job execution starting: \", execution);\n        var jobResult;\n        return this.checkExecutionFlags(execution).then(execution=>{\n\n            if (execution.status === JOB_STATUS.STOPPING) {\n                // The job was already stopped\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.COMPLETED;\n                log.debug(\"Job execution was stopped: \" + execution);\n                return execution;\n            }\n\n            if (this.jobParametersValidator && !this.jobParametersValidator.validate(execution.jobParameters)) {\n                throw new JobParametersInvalidException(\"Invalid job parameters in job execute\")\n            }\n\n            if(this.jobDataValidator && !this.jobDataValidator.validate(execution.getData())){\n                throw new JobDataInvalidException(\"Invalid job data in job execute\")\n            }\n\n\n            execution.startTime = new Date();\n            return Promise.all([this.updateStatus(execution, JOB_STATUS.STARTED), this.getResult(execution), this.updateProgress(execution)]).then(res=>{\n                execution=res[0];\n                jobResult = res[1];\n                if(!jobResult) {\n                    jobResult = new JobResult(execution.jobInstance)\n                }\n                this.executionListeners.forEach(listener=>listener.beforeJob(execution));\n\n                return this.doExecute(execution, jobResult);\n            });\n\n        }).then(execution=>{\n            log.debug(\"Job execution complete: \",execution);\n            return execution\n        }).catch(e=>{\n            if (e instanceof JobInterruptedException) {\n                log.info(\"Encountered interruption executing job\", e);\n                execution.status = JOB_STATUS.STOPPED;\n                execution.exitStatus = JOB_STATUS.STOPPED;\n            } else {\n                log.error(\"Encountered fatal error executing job\", e);\n                execution.status = JOB_STATUS.FAILED;\n                execution.exitStatus = JOB_STATUS.FAILED;\n            }\n            execution.failureExceptions.push(e);\n            return execution;\n        }).then(execution=>{\n            if(jobResult){\n                return this.jobRepository.saveJobResult(jobResult).then(()=>execution)\n            }\n            return execution\n        }).catch(e=>{\n            log.error(\"Encountered fatal error saving job results\", e);\n            if(e){\n                execution.failureExceptions.push(e);\n            }\n            execution.status = JOB_STATUS.FAILED;\n            execution.exitStatus = JOB_STATUS.FAILED;\n            return execution;\n        }).then(execution=>{\n            execution.endTime = new Date();\n            return Promise.all([this.jobRepository.update(execution), this.updateProgress(execution)]).then(res=>res[0])\n        }).then(execution=>{\n            try {\n                this.executionListeners.forEach(listener=>listener.afterJob(execution));\n            } catch (e) {\n                log.error(\"Exception encountered in afterStep callback\", e);\n            }\n            return execution;\n        })\n    }\n\n\n    updateStatus(jobExecution, status) {\n        jobExecution.status=status;\n        return this.jobRepository.update(jobExecution)\n    }\n\n    updateProgress(jobExecution){\n        return this.jobRepository.updateJobExecutionProgress(jobExecution.id, this.getProgress(jobExecution));\n    }\n\n    /* Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners, returns promise*/\n    doExecute(execution, jobResult) {\n        throw 'doExecute function not implemented for job: ' + this.name\n    }\n\n    getJobParametersValidator() {\n        return {\n            validate: (params) => params.validate()\n        }\n    }\n\n    getJobDataValidator() {\n        return {\n            validate: (data) => true\n        }\n    }\n\n    addStep(step){\n        this.steps.push(step);\n    }\n\n\n    createJobParameters(values){\n        throw 'createJobParameters function not implemented for job: ' + this.name\n    }\n\n    /*Should return progress object with fields:\n    * current\n    * total */\n    getProgress(execution){\n        return {\n            total: 1,\n            current: execution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n\n    registerExecutionListener(listener){\n        this.executionListeners.push(listener);\n    }\n\n    checkExecutionFlags(execution){\n        return this.jobRepository.getJobExecutionFlag(execution.id).then(flag=>{\n            if(JOB_EXECUTION_FLAG.STOP === flag){\n                execution.stop();\n            }\n            return execution\n        })\n    }\n\n    getResult(execution) {\n        return this.jobRepository.getJobResultByInstance(execution.jobInstance);\n    }\n\n    jobResultToCsvRows(jobResult, jobParameters){\n        throw 'jobResultToCsvRows function not implemented for job: ' + this.name\n    }\n}\n","import {log} from 'sd-utils'\nimport {JOB_STATUS} from \"./job-status\";\nimport {Job} from \"./job\";\nimport {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {Step} from \"./step\";\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\nimport {JobRestartException} from \"./exceptions/job-restart-exception\";\nimport {JOB_EXECUTION_FLAG} from \"./job-execution-flag\";\n\n/* Simple Job that sequentially executes a job by iterating through its list of steps.  Any Step that fails will fail the job.  The job is\n considered complete when all steps have been executed.*/\n\nexport class SimpleJob extends Job {\n\n    constructor(name, jobRepository, expressionsEvaluator, objectiveRulesManager) {\n        super(name, jobRepository, expressionsEvaluator, objectiveRulesManager)\n    }\n\n    getStep(stepName) {\n        return Utils.find(this.steps, s=>s.name == stepName);\n    }\n\n    doExecute(execution, jobResult) {\n\n        return this.handleNextStep(execution, jobResult).then(lastExecutedStepExecution=>{\n            if (lastExecutedStepExecution != null) {\n                log.debug(\"Updating JobExecution status: \", lastExecutedStepExecution);\n                execution.status = lastExecutedStepExecution.status;\n                execution.exitStatus = lastExecutedStepExecution.exitStatus;\n                execution.failureExceptions.push(...lastExecutedStepExecution.failureExceptions)\n            }\n            return execution;\n        });\n    }\n\n    handleNextStep(jobExecution, jobResult, prevStep=null, prevStepExecution=null){\n        var stepIndex = 0;\n        if(prevStep){\n            stepIndex = this.steps.indexOf(prevStep)+1;\n        }\n        if(stepIndex>=this.steps.length){\n            return Promise.resolve(prevStepExecution)\n        }\n        var step = this.steps[stepIndex];\n        return this.handleStep(step, jobExecution, jobResult).then(stepExecution=>{\n            if(stepExecution.status !== JOB_STATUS.COMPLETED){ // Terminate the job if a step fails\n                return stepExecution;\n            }\n            return this.handleNextStep(jobExecution, jobResult, step, stepExecution);\n        })\n    }\n\n    handleStep(step, jobExecution, jobResult) {\n        var jobInstance = jobExecution.jobInstance;\n        return this.checkExecutionFlags(jobExecution).then(jobExecution=>{\n            if (jobExecution.isStopping()) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            return this.jobRepository.getLastStepExecution(jobInstance, step.name)\n\n        }).then(lastStepExecution=>{\n            if (this.stepExecutionPartOfExistingJobExecution(jobExecution, lastStepExecution)) {\n                // If the last execution of this step was in the same job, it's probably intentional so we want to run it again.\n                log.info(\"Duplicate step detected in execution of job. step: \" + step.name + \" jobName: \", jobInstance.jobName);\n                lastStepExecution = null;\n            }\n\n            var currentStepExecution = lastStepExecution;\n\n            if (!this.shouldStart(currentStepExecution, jobExecution, step)) {\n                return currentStepExecution;\n            }\n\n            currentStepExecution = jobExecution.createStepExecution(step.name);\n\n            var isCompleted = lastStepExecution != null && lastStepExecution.status === JOB_STATUS.COMPLETED;\n            var isRestart = lastStepExecution != null && !isCompleted;\n            var skipExecution = isCompleted && step.skipOnRestartIfCompleted;\n\n            if (isRestart) {\n                currentStepExecution.executionContext = lastStepExecution.executionContext;\n                if (lastStepExecution.executionContext.containsKey(\"executed\")) {\n                    currentStepExecution.executionContext.remove(\"executed\");\n                }\n            }\n            else {\n\n                currentStepExecution.executionContext = new ExecutionContext();\n            }\n            if(skipExecution){\n                currentStepExecution.exitStatus = JOB_STATUS.COMPLETED;\n                currentStepExecution.status = JOB_STATUS.COMPLETED;\n                currentStepExecution.executionContext.put(\"skipped\", true);\n            }\n\n            return this.jobRepository.addStepExecution(currentStepExecution).then((_currentStepExecution)=>{\n                currentStepExecution=_currentStepExecution;\n                if(skipExecution){\n                    log.info(\"Skipping completed step execution: [\" + step.name + \"]\");\n                    return currentStepExecution;\n                }\n                log.info(\"Executing step: [\" + step.name + \"]\");\n                return step.execute(currentStepExecution, jobResult)\n            }).then(()=>{\n                currentStepExecution.executionContext.put(\"executed\", true);\n                return currentStepExecution;\n            }).catch (e => {\n                jobExecution.status = JOB_STATUS.FAILED;\n                return this.jobRepository.update(jobExecution).then(jobExecution=>{throw e})\n            });\n\n        }).then((currentStepExecution)=>{\n            if (currentStepExecution.status == JOB_STATUS.STOPPING\n                || currentStepExecution.status == JOB_STATUS.STOPPED) {\n                // Ensure that the job gets the message that it is stopping\n                jobExecution.status = JOB_STATUS.STOPPING;\n                // throw new Error(\"Job interrupted by step execution\");\n            }\n            return this.updateProgress(jobExecution).then(()=>currentStepExecution);\n        })\n\n    }\n\n    stepExecutionPartOfExistingJobExecution(jobExecution, stepExecution) {\n        return stepExecution != null && stepExecution.jobExecution.id == jobExecution.id\n    }\n\n    shouldStart(lastStepExecution, execution, step) {\n        var stepStatus;\n        if (lastStepExecution == null) {\n            stepStatus = JOB_STATUS.STARTING;\n        }\n        else {\n            stepStatus = lastStepExecution.status;\n        }\n\n        if (stepStatus == JOB_STATUS.UNKNOWN) {\n            throw new JobRestartException(\"Cannot restart step from UNKNOWN status\")\n        }\n\n        return stepStatus != JOB_STATUS.COMPLETED || step.isRestartable;\n    }\n\n    getProgress(execution){\n        var completedSteps = execution.stepExecutions.length;\n        let progress = {\n            total: this.steps.length,\n            current: completedSteps\n        };\n        if(!completedSteps){\n            return progress\n        }\n        if(JOB_STATUS.COMPLETED !== execution.stepExecutions[execution.stepExecutions.length-1].status){\n            progress.current--;\n        }\n\n        return progress;\n    }\n\n    addStep(){\n        if(arguments.length===1){\n            return super.addStep(arguments[0])\n        }\n        var step = new Step(arguments[0], this.jobRepository);\n        step.doExecute = arguments[1];\n        return super.addStep(step);\n    }\n\n}\n","export class StepExecutionListener {\n    /*Called before a step executes*/\n    beforeStep(jobExecution) {\n\n    }\n\n    /*Called after completion of a step. Called after both successful and failed executions*/\n    afterStep(jobExecution) {\n\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {ExecutionContext} from \"./execution-context\";\nimport {JOB_STATUS} from \"./job-status\";\nimport {JobExecution} from \"./job-execution\";\n\n/*\n representation of the execution of a step\n */\nexport class StepExecution {\n    id;\n    stepName;\n    jobExecution;\n\n    status = JOB_STATUS.STARTING;\n    exitStatus = JOB_STATUS.EXECUTING;\n    executionContext = new ExecutionContext(); //execution context for single step level,\n\n    startTime = new Date();\n    endTime = null;\n    lastUpdated = null;\n\n    terminateOnly = false; //flag to indicate that an execution should halt\n    failureExceptions = [];\n\n    constructor(stepName, jobExecution, id) {\n        if(id===null || id === undefined){\n            this.id = Utils.guid();\n        }else{\n            this.id = id;\n        }\n\n        this.stepName = stepName;\n        this.jobExecution = jobExecution;\n        this.jobExecutionId = jobExecution.id;\n    }\n\n    getJobParameters(){\n        return this.jobExecution.jobParameters;\n    }\n\n    getJobExecutionContext(){\n        return this.jobExecution.executionContext;\n    }\n\n    getData(){\n        return this.jobExecution.getData();\n    }\n\n    getDTO(filteredProperties=[], deepClone = true){\n\n        var cloneMethod = Utils.cloneDeepWith;\n        if(!deepClone) {\n            cloneMethod = Utils.cloneWith;\n        }\n\n        return Utils.assign({}, cloneMethod(this, (value, key, object, stack)=> {\n            if(filteredProperties.indexOf(key)>-1){\n                return null;\n            }\n            if([\"executionContext\"].indexOf(key)>-1){\n                return value.getDTO()\n            }\n            if(value instanceof Error){\n                return Utils.getErrorDTO(value);\n            }\n\n            if (value instanceof JobExecution) {\n                return value.getDTO([\"stepExecutions\"], deepClone)\n            }\n        }))\n    }\n}\n","import {JOB_STATUS} from \"./job-status\";\nimport {log} from 'sd-utils'\n\nimport {JobInterruptedException} from \"./exceptions/job-interrupted-exception\";\n/*domain object representing the configuration of a job step*/\nexport class Step {\n\n    id;\n    name;\n    isRestartable = true;\n    skipOnRestartIfCompleted=true;\n    steps = [];\n    executionListeners = [];\n\n    jobRepository;\n\n    constructor(name, jobRepository) {\n        this.name = name;\n        this.jobRepository = jobRepository;\n    }\n\n    setJobRepository(jobRepository) {\n        this.jobRepository = jobRepository;\n    }\n\n    /*Process the step and assign progress and status meta information to the StepExecution provided*/\n    execute(stepExecution, jobResult) {\n        log.debug(\"Executing step: name=\" + this.name);\n        stepExecution.startTime = new Date();\n        stepExecution.status = JOB_STATUS.STARTED;\n        var exitStatus;\n        return this.jobRepository.update(stepExecution).then(stepExecution=>{\n            exitStatus = JOB_STATUS.EXECUTING;\n\n            this.executionListeners.forEach(listener=>listener.beforeStep(stepExecution));\n            this.open(stepExecution.executionContext);\n\n            return this.doExecute(stepExecution, jobResult)\n        }).then(_stepExecution=>{\n            stepExecution = _stepExecution;\n            exitStatus = stepExecution.exitStatus;\n\n            // Check if someone is trying to stop us\n            if (stepExecution.terminateOnly) {\n                throw new JobInterruptedException(\"JobExecution interrupted.\");\n            }\n            // Need to upgrade here not set, in case the execution was stopped\n            stepExecution.status = JOB_STATUS.COMPLETED;\n            log.debug(\"Step execution success: name=\" + this.name);\n            return stepExecution\n        }).catch(e=>{\n            stepExecution.status = this.determineJobStatus(e);\n            exitStatus = stepExecution.status;\n            stepExecution.failureExceptions.push(e);\n\n            if (stepExecution.status == JOB_STATUS.STOPPED) {\n                log.info(\"Encountered interruption executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            else {\n                log.error(\"Encountered an error executing step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n            return stepExecution;\n        }).then(stepExecution=>{\n            try {\n                stepExecution.exitStatus = exitStatus;\n                this.executionListeners.forEach(listener=>listener.afterStep(stepExecution));\n            }\n            catch (e) {\n                log.error(\"Exception in afterStep callback in step \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n            }\n\n            stepExecution.endTime = new Date();\n            stepExecution.exitStatus = exitStatus;\n\n\n            return this.jobRepository.update(stepExecution)\n        }).then(stepExecution=>{\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            try {\n                this.close(stepExecution.executionContext);\n            }\n            catch (e) {\n                log.error(\"Exception while closing step execution resources in step: \" + this.name + \" in job: \" + stepExecution.jobExecution.jobInstance.jobName, e);\n                stepExecution.failureExceptions.push(e);\n            }\n\n            // doExecutionRelease();\n\n            log.debug(\"Step execution complete: \" + stepExecution.id);\n            return stepExecution;\n        });\n\n    }\n\n    determineJobStatus(e) {\n        if (e instanceof JobInterruptedException) {\n            return JOB_STATUS.STOPPED;\n        }\n        else {\n            return JOB_STATUS.FAILED;\n        }\n    }\n\n    /**\n     * Extension point for subclasses to execute business logic. Subclasses should set the exitStatus on the\n     * StepExecution before returning. Must return stepExecution\n     */\n    doExecute(stepExecution, jobResult) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the beginning of a step, to open or\n     * acquire resources. Does nothing by default.\n     */\n    open(executionContext) {\n    }\n\n    /**\n     * Extension point for subclasses to provide callbacks to their collaborators at the end of a step (right at the end\n     * of the finally block), to close or release resources. Does nothing by default.\n     */\n    close(executionContext) {\n    }\n\n\n    /*Should return progress object with fields:\n     * current\n     * total */\n    getProgress(stepExecution){\n        return {\n            total: 1,\n            current: stepExecution.status === JOB_STATUS.COMPLETED ? 1 : 0\n        }\n    }\n}\n","import * as engine from './engine/index'\n\nexport {engine}\nexport * from './jobs-manager'\nexport * from './job-worker'\n\n\n\n","import {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {JobInstance} from \"./engine/job-instance\";\nimport {Utils, log} from \"sd-utils\";\n\n\nexport class JobInstanceManagerConfig {\n    onJobStarted = () => {};\n    onJobCompleted = result => {};\n    onJobFailed = errors => {};\n    onJobStopped = () => {};\n    onJobTerminated = () => {};\n    onProgress = (progress) => {};\n    callbacksThisArg;\n    updateInterval = 100;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n/*convenience class for managing and tracking job instance progress*/\nexport class JobInstanceManager extends JobExecutionListener {\n\n    jobsManger;\n    jobInstance;\n    config;\n\n    lastJobExecution;\n    lastUpdateTime;\n    progress = null;\n\n    constructor(jobsManger, jobInstanceOrExecution, config) {\n        super();\n        this.config = new JobInstanceManagerConfig(config);\n        this.jobsManger = jobsManger;\n        if (jobInstanceOrExecution instanceof JobInstance) {\n            this.jobInstance = jobInstanceOrExecution;\n            this.getLastJobExecution().then(je=> {\n                this.checkProgress();\n            })\n        } else {\n            this.lastJobExecution = jobInstanceOrExecution;\n            this.jobInstance = this.lastJobExecution.jobInstance;\n            this.checkProgress();\n        }\n        if (this.lastJobExecution && !this.lastJobExecution.isRunning()) {\n            this.afterJob(this.lastJobExecution);\n            return;\n        }\n        jobsManger.registerJobExecutionListener(this);\n    }\n\n    checkProgress() {\n\n        var self = this;\n        if (this.terminated || !this.lastJobExecution.isRunning() || this.getProgressPercents(this.progress) === 100) {\n            return;\n        }\n        this.jobsManger.getProgress(this.lastJobExecution).then(progress=> {\n            this.lastUpdateTime = new Date();\n            if (progress) {\n                this.progress = progress;\n                this.config.onProgress.call(this.config.callbacksThisArg || this, progress);\n            }\n\n            setTimeout(function () {\n                self.checkProgress();\n            }, this.config.updateInterval)\n        })\n    }\n\n    beforeJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n\n        this.lastJobExecution = jobExecution;\n        this.config.onJobStarted.call(this.config.callbacksThisArg || this);\n    }\n\n    getProgressPercents(progress) {\n        if (!progress) {\n            return 0;\n        }\n        return progress.current * 100 / progress.total;\n    }\n\n    getProgressFromExecution(jobExecution) {\n        var job = this.jobsManger.getJobByName(jobExecution.jobInstance.jobName);\n        return job.getProgress(jobExecution);\n    }\n\n    afterJob(jobExecution) {\n        if (jobExecution.jobInstance.id !== this.jobInstance.id) {\n            return;\n        }\n        this.lastJobExecution = jobExecution;\n        if (JOB_STATUS.COMPLETED === jobExecution.status) {\n            this.jobsManger.deregisterJobExecutionListener(this);\n            this.progress = this.getProgressFromExecution(jobExecution);\n            this.config.onProgress.call(this.config.callbacksThisArg || this, this.progress);\n            this.jobsManger.getResult(jobExecution.jobInstance).then(result=> {\n                this.config.onJobCompleted.call(this.config.callbacksThisArg || this, result.data);\n            }).catch(e=> {\n                log.error(e);\n            })\n\n\n        } else if (JOB_STATUS.FAILED === jobExecution.status) {\n            this.config.onJobFailed.call(this.config.callbacksThisArg || this, jobExecution.failureExceptions);\n\n        } else if (JOB_STATUS.STOPPED === jobExecution.status) {\n            this.config.onJobStopped.call(this.config.callbacksThisArg || this);\n        }\n    }\n\n    getLastJobExecution(forceUpdate = false) {\n        if (!this.lastJobExecution || forceUpdate) {\n            return this.jobsManger.jobRepository.getLastJobExecutionByInstance(this.jobInstance).then(je=> {\n                this.lastJobExecution = je;\n                return je;\n            });\n        }\n        return Promise.resolve(this.lastJobExecution);\n    }\n\n    stop() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.stop(this.lastJobExecution)\n        })\n    }\n\n    resume() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.run(this.jobInstance.jobName, this.lastJobExecution.jobParameters.values, this.lastJobExecution.getData()).then(je=> {\n                this.lastJobExecution = je;\n                this.checkProgress();\n            }).catch(e=> {\n                log.error(e);\n            })\n        })\n    }\n\n    terminate() {\n        return this.getLastJobExecution().then(()=> {\n            return this.jobsManger.terminate(this.jobInstance).then(()=> {\n                this.terminated = true;\n                this.config.onJobTerminated.call(this.config.callbacksThisArg || this, this.lastJobExecution);\n                this.jobsManger.deregisterJobExecutionListener(this);\n\n                return this.lastJobExecution;\n            })\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n}\n","export class JobWorker{\n\n    worker;\n    listeners = {};\n    defaultListener;\n\n    constructor(url, defaultListener, onError){\n        var instance = this;\n        this.worker = new Worker(url);\n        this.defaultListener = defaultListener || function() {};\n        if (onError) {this.worker.onerror = onError;}\n\n        this.worker.onmessage = function(event) {\n            if (event.data instanceof Object &&\n                event.data.hasOwnProperty('queryMethodListener') && event.data.hasOwnProperty('queryMethodArguments')) {\n                var listener = instance.listeners[event.data.queryMethodListener];\n                var args = event.data.queryMethodArguments;\n                if(listener.deserializer){\n                    args = listener.deserializer(args);\n                }\n                listener.fn.apply(listener.thisArg, args);\n            } else {\n                this.defaultListener.call(instance, event.data);\n            }\n        }\n\n    }\n\n    sendQuery() {\n        if (arguments.length < 1) {\n            throw new TypeError('JobWorker.sendQuery takes at least one argument');\n        }\n        this.worker.postMessage({\n            'queryMethod': arguments[0],\n            'queryArguments': Array.prototype.slice.call(arguments, 1)\n        });\n    }\n\n    runJob(jobName, jobParametersValues, dataDTO){\n        this.sendQuery('runJob', jobName, jobParametersValues, dataDTO)\n    }\n\n    executeJob(jobExecutionId){\n        this.sendQuery('executeJob', jobExecutionId)\n    }\n\n    recompute(dataDTO, ruleNames, evalCode, evalNumeric){\n        this.sendQuery('recompute', dataDTO, ruleNames, evalCode, evalNumeric)\n    }\n\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    addListener(name, listener, thisArg, deserializer) {\n        this.listeners[name] = {\n            fn: listener,\n            thisArg: thisArg || this,\n            deserializer: deserializer\n        };\n    }\n\n    removeListener(name) {\n        delete this.listeners[name];\n    }\n}\n","import {Utils, log} from \"sd-utils\";\nimport {SensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/n-way/sensitivity-analysis-job\";\nimport {JobLauncher} from \"./engine/job-launcher\";\nimport {JobWorker} from \"./job-worker\";\nimport {JobExecutionListener} from \"./engine/job-execution-listener\";\nimport {JobParameters} from \"./engine/job-parameters\";\nimport {IdbJobRepository} from \"./engine/job-repository/idb-job-repository\";\nimport {JOB_EXECUTION_FLAG} from \"./engine/job-execution-flag\";\nimport {RecomputeJob} from \"./configurations/recompute/recompute-job\";\nimport {ProbabilisticSensitivityAnalysisJob} from \"./configurations/sensitivity-analysis/probabilistic/probabilistic-sensitivity-analysis-job\";\nimport {TimeoutJobRepository} from \"./engine/job-repository/timeout-job-repository\";\nimport {TornadoDiagramJob} from \"./configurations/sensitivity-analysis/tornado-diagram/tornado-diagram-job\";\nimport {JOB_STATUS} from \"./engine/job-status\";\nimport {SimpleJobRepository} from \"./engine/job-repository/simple-job-repository\";\nimport {LeagueTableJob} from \"./configurations/league-table/league-table-job\";\n\n\nexport class JobsManagerConfig {\n\n    workerUrl = null;\n    repositoryType = 'idb';\n    clearRepository = false;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobsManager extends JobExecutionListener {\n\n\n    useWorker;\n    expressionsEvaluator;\n    objectiveRulesManager;\n    jobWorker;\n\n    jobRepository;\n    jobLauncher;\n\n    jobExecutionListeners = [];\n\n    afterJobExecutionPromiseResolves = {};\n    jobInstancesToTerminate = {};\n\n    constructor(expressionsEvaluator, objectiveRulesManager, config) {\n        super();\n        this.setConfig(config);\n        this.expressionEngine = expressionsEvaluator.expressionEngine;\n        this.expressionsEvaluator = expressionsEvaluator;\n        this.objectiveRulesManager = objectiveRulesManager;\n\n\n        this.useWorker = !!this.config.workerUrl;\n        if (this.useWorker) {\n            this.initWorker(this.config.workerUrl);\n        }\n\n        this.initRepository();\n\n        this.registerJobs();\n\n\n\n        this.jobLauncher = new JobLauncher(this.jobRepository, this.jobWorker, (data)=>this.serializeData(data));\n    }\n\n    setConfig(config) {\n        this.config = new JobsManagerConfig(config);\n        return this;\n    }\n\n    initRepository() {\n        if(this.config.repositoryType === 'idb'){\n            this.jobRepository = new IdbJobRepository(this.expressionEngine.getJsonReviver(), 'sd-job-repository', this.config.clearRepository);\n        }else if('timeout'){\n            this.jobRepository = new TimeoutJobRepository(this.expressionEngine.getJsonReviver());\n        }else if('simple'){\n            this.jobRepository = new SimpleJobRepository(this.expressionEngine.getJsonReviver());\n        }else{\n            log.error('JobsManager configuration error! Unknown repository type: '+this.config.repositoryType+'. Using default: idb');\n            this.config.repositoryType = 'idb';\n            this.initRepository()\n        }\n\n    }\n\n    serializeData(data) {\n        return data.serialize(true, false, false, this.expressionEngine.getJsonReplacer());\n    }\n\n    getProgress(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n        return this.jobRepository.getJobExecutionProgress(id);\n    }\n\n    getResult(jobInstance) {\n        return this.jobRepository.getJobResultByInstance(jobInstance);\n    }\n\n    run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched = true) {\n        return this.jobLauncher.run(jobName, jobParametersValues, data, resolvePromiseAfterJobIsLaunched).then(jobExecution=> {\n            if (resolvePromiseAfterJobIsLaunched || !jobExecution.isRunning()) {\n                return jobExecution;\n            }\n            //job was delegated to worker and is still running\n\n            return new Promise((resolve, reject)=> {\n                this.afterJobExecutionPromiseResolves[jobExecution.id] = resolve;\n            });\n        });\n    }\n\n    execute(jobExecutionOrId) {\n        return this.jobLauncher.execute(jobExecutionOrId);\n    }\n\n    stop(jobExecutionOrId) {\n        var id = jobExecutionOrId;\n        if (!Utils.isString(jobExecutionOrId)) {\n            id = jobExecutionOrId.id\n        }\n\n        return this.jobRepository.getJobExecutionById(id).then(jobExecution=> {\n            if (!jobExecution) {\n                log.error(\"Job Execution not found: \" + jobExecutionOrId);\n                return null;\n            }\n            if (!jobExecution.isRunning()) {\n                log.warn(\"Job Execution not running, status: \" + jobExecution.status + \", endTime: \" + jobExecution.endTime);\n                return jobExecution;\n            }\n\n            return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n        });\n    }\n\n    /*stop job execution if running and delete job instance from repository*/\n    terminate(jobInstance) {\n        return this.jobRepository.getLastJobExecutionByInstance(jobInstance).then(jobExecution=> {\n            if (jobExecution) {\n                if(jobExecution.isRunning()){\n                    return this.jobRepository.saveJobExecutionFlag(jobExecution.id, JOB_EXECUTION_FLAG.STOP).then(()=>jobExecution);\n                }else{\n                    return this.jobRepository.removeJobInstance(jobInstance, jobExecution.jobParameters);\n                }\n            }\n        }).then(()=>{\n            this.jobInstancesToTerminate[jobInstance.id]=jobInstance;\n        })\n    }\n\n    getJobByName(jobName) {\n        return this.jobRepository.getJobByName(jobName);\n    }\n\n\n    createJobParameters(jobName, jobParametersValues) {\n        var job = this.jobRepository.getJobByName(jobName);\n        return job.createJobParameters(jobParametersValues);\n    }\n\n\n    /*Returns a promise*/\n    getLastJobExecution(jobName, jobParameters) {\n        if (this.useWorker) {\n            return this.jobWorker;\n        }\n        if (!(jobParameters instanceof JobParameters)) {\n            jobParameters = this.createJobParameters(jobParameters)\n        }\n        return this.jobRepository.getLastJobExecution(jobName, jobParameters);\n    }\n\n    initWorker(workerUrl) {\n        this.jobWorker = new JobWorker(workerUrl, ()=>{\n            log.error('error in worker', arguments);\n        });\n        var argsDeserializer = (args)=> {\n            return [this.jobRepository.reviveJobExecution(args[0])]\n        };\n\n        this.jobWorker.addListener(\"beforeJob\", this.beforeJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"afterJob\", this.afterJob, this, argsDeserializer);\n        this.jobWorker.addListener(\"jobFatalError\", this.onJobFatalError, this);\n    }\n\n    registerJobs() {\n\n        let sensitivityAnalysisJob = new SensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        let probabilisticSensitivityAnalysisJob = new ProbabilisticSensitivityAnalysisJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager);\n        if(!Utils.isWorker()){\n            sensitivityAnalysisJob.setBatchSize(1);\n            probabilisticSensitivityAnalysisJob.setBatchSize(1);\n        }\n\n        this.registerJob(sensitivityAnalysisJob);\n        this.registerJob(new TornadoDiagramJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(probabilisticSensitivityAnalysisJob);\n        this.registerJob(new RecomputeJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n        this.registerJob(new LeagueTableJob(this.jobRepository, this.expressionsEvaluator, this.objectiveRulesManager));\n    }\n\n    registerJob(job) {\n        this.jobRepository.registerJob(job);\n        job.registerExecutionListener(this)\n    }\n\n    registerJobExecutionListener(listener) {\n        this.jobExecutionListeners.push(listener);\n    }\n\n    deregisterJobExecutionListener(listener) {\n        var index = this.jobExecutionListeners.indexOf(listener);\n        if (index > -1) {\n            this.jobExecutionListeners.splice(index, 1)\n        }\n    }\n\n    beforeJob(jobExecution) {\n        log.debug(\"beforeJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.beforeJob(jobExecution));\n    }\n\n    afterJob(jobExecution) {\n        log.debug(\"afterJob\", this.useWorker, jobExecution);\n        this.jobExecutionListeners.forEach(l=>l.afterJob(jobExecution));\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecution.id];\n        if (promiseResolve) {\n            promiseResolve(jobExecution)\n        }\n\n        if(this.jobInstancesToTerminate[jobExecution.jobInstance.id]){\n            this.jobRepository.removeJobInstance(jobExecution.jobInstance, jobExecution.jobParameters);\n        }\n    }\n\n    onJobFatalError(jobExecutionId, error){\n        var promiseResolve = this.afterJobExecutionPromiseResolves[jobExecutionId];\n        if (promiseResolve) {\n            this.jobRepository.getJobExecutionById(jobExecutionId).then(jobExecution=>{\n                jobExecution.status = JOB_STATUS.FAILED;\n                if(error){\n                    jobExecution.failureExceptions.push(error);\n                }\n\n                return this.jobRepository.saveJobExecution(jobExecution).then(()=>{\n                    promiseResolve(jobExecution);\n                })\n            }).catch(e=>{\n                log.error(e);\n            })\n\n        }\n        log.debug('onJobFatalError', jobExecutionId, error);\n    }\n\n\n}\n","import {\n    ExpectedValueMaximizationRule,\n    ExpectedValueMinimizationRule,\n    MaxiMinRule,\n    MaxiMaxRule,\n    MiniMinRule,\n    MiniMaxRule\n} from \"./rules\";\nimport {log} from \"sd-utils\";\nimport * as model from \"sd-model\";\nimport {MinMaxRule} from \"./rules/min-max-rule\";\nimport {MaxMinRule} from \"./rules/max-min-rule\";\nimport {MinMinRule} from \"./rules/min-min-rule\";\nimport {MaxMaxRule} from \"./rules/max-max-rule\";\n\nexport class ObjectiveRulesManager{\n\n    expressionEngine;\n    currentRule;\n    ruleByName = {};\n    rules = [];\n\n\n    flipPair = {};\n    payoffIndex = 0;\n\n    constructor(expressionEngine, currentRuleName) {\n        this.expressionEngine = expressionEngine;\n        this.addRule(new ExpectedValueMaximizationRule(expressionEngine));\n        this.addRule(new ExpectedValueMinimizationRule(expressionEngine));\n        this.addRule(new MaxiMinRule(expressionEngine));\n        this.addRule(new MaxiMaxRule(expressionEngine));\n        this.addRule(new MiniMinRule(expressionEngine));\n        this.addRule(new MiniMaxRule(expressionEngine));\n\n        let minMax = new MinMaxRule(expressionEngine);\n        this.addRule(minMax);\n        let maxMin = new MaxMinRule(expressionEngine);\n        this.addRule(maxMin);\n        this.addFlipPair(minMax, maxMin);\n\n        let minMin = new MinMinRule(expressionEngine);\n        this.addRule(minMin);\n        let maxMax = new MaxMaxRule(expressionEngine);\n        this.addRule(maxMax);\n\n\n        if (currentRuleName) {\n            this.currentRule = this.ruleByName[currentRuleName];\n        } else {\n            this.currentRule = this.rules[0];\n        }\n\n    }\n\n\n    setPayoffIndex(payoffIndex){\n        this.payoffIndex = payoffIndex || 0;\n    }\n\n    addRule(rule){\n        this.ruleByName[rule.name]=rule;\n        this.rules.push(rule);\n    }\n\n    isRuleName(ruleName){\n         return !!this.ruleByName[ruleName]\n    }\n\n    setCurrentRuleByName(ruleName){\n        this.currentRule = this.ruleByName[ruleName];\n    }\n\n    getObjectiveRuleByName(ruleName){\n        return this.ruleByName[ruleName];\n    }\n\n    flipRule(){\n        var flipped = this.flipPair[this.currentRule.name];\n        if(flipped){\n            this.currentRule = flipped;\n        }\n    }\n\n    updateDefaultCriterion1Weight(defaultCriterion1Weight){\n        this.rules.filter(r=>r.multiCriteria).forEach(r=>r.setDefaultCriterion1Weight(parseFloat(defaultCriterion1Weight)));\n    }\n\n    recompute(dataModel, allRules, decisionPolicy=null){\n\n        var startTime = new Date().getTime();\n        log.trace('recomputing rules, all: '+allRules);\n\n        dataModel.getRoots().forEach(n=>{\n            this.recomputeTree(n, allRules, decisionPolicy);\n        });\n\n        var time  = (new Date().getTime() - startTime/1000);\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n    recomputeTree(root, allRules, decisionPolicy=null){\n        log.trace('recomputing rules for tree ...', root);\n\n        var startTime = new Date().getTime();\n\n        var rules  = [this.currentRule];\n        if(allRules){\n            rules = this.rules;\n        }\n\n        rules.forEach(rule=> {\n            rule.setPayoffIndex(this.payoffIndex);\n            rule.setDecisionPolicy(decisionPolicy);\n            rule.computePayoff(root);\n            rule.computeOptimal(root);\n            rule.clearDecisionPolicy();\n        });\n\n        var time  = (new Date().getTime() - startTime)/1000;\n        log.trace('recomputation took '+time+'s');\n\n        return this;\n    }\n\n\n    getNodeDisplayValue(node, name) {\n        return node.computedValue(this.currentRule.name, name)\n\n    }\n\n    getEdgeDisplayValue(e, name){\n        if(name==='probability'){\n            if(e.parentNode instanceof model.domain.DecisionNode){\n                return e.computedValue(this.currentRule.name, 'probability');\n            }\n            if(e.parentNode instanceof model.domain.ChanceNode){\n                return e.computedBaseProbability();\n            }\n            return null;\n        }\n        if(name==='payoff'){\n            if(this.currentRule.multiCriteria){\n                return e.computedValue(null, 'payoff');\n            }else{\n                return e.computedValue(null, 'payoff[' +this.payoffIndex + ']');\n            }\n\n        }\n        if(name==='optimal'){\n            return e.computedValue(this.currentRule.name, 'optimal')\n        }\n    }\n\n    addFlipPair(rule1, rule2) {\n        this.flipPair[rule1.name] = rule2;\n        this.flipPair[rule2.name] = rule1;\n    }\n\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from 'sd-utils'\n\n/*expected value maximization rule*/\nexport class ExpectedValueMaximizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-maximization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMaximizationRule.NAME, true, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*expected value minimization rule*/\nexport class ExpectedValueMinimizationRule extends ObjectiveRule{\n\n    static NAME = 'expected-value-minimization';\n\n    constructor(expressionEngine){\n        super(ExpectedValueMinimizationRule.NAME, false, expressionEngine);\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff=0, probabilityToEnter=1){\n        this.cValue(node, 'optimal', true);\n        if(node instanceof model.TerminalNode){\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=>{\n            if ( this.subtract(this.computedPayoff(node),payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode) ) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e,'probability')));\n            }else{\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","export * from './objective-rule'\nexport * from './expected-value-maximization-rule'\nexport * from './expected-value-minimization-rule'\nexport * from './maxi-max-rule'\nexport * from './maxi-min-rule'\nexport * from './mini-max-rule'\nexport * from './mini-min-rule'\n\n\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'max-max';\n\n    constructor(expressionEngine){\n        super(MaxMaxRule.NAME, [1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MaxMinRule extends MultiCriteriaRule{\n\n    static NAME = 'max-min';\n\n    constructor(expressionEngine){\n        super(MaxMinRule.NAME, [1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-max rule*/\nexport class MaxiMaxRule extends ObjectiveRule{\n\n    static NAME = 'maxi-max';\n\n    constructor(expressionEngine){\n        super(MaxiMaxRule.NAME, true, expressionEngine);\n    }\n\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*maxi-min rule*/\nexport class MaxiMinRule extends ObjectiveRule{\n\n    static NAME = 'maxi-min';\n\n    constructor(expressionEngine){\n        super(MaxiMinRule.NAME, true, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMaxRule extends MultiCriteriaRule{\n\n    static NAME = 'min-max';\n\n    constructor(expressionEngine){\n        super(MinMaxRule.NAME, [-1, 1], expressionEngine);\n    }\n}\n","import {MultiCriteriaRule} from \"./multi-criteria-rule\";\n\n\nexport class MinMinRule extends MultiCriteriaRule{\n\n    static NAME = 'min-min';\n\n    constructor(expressionEngine){\n        super(MinMinRule.NAME, [-1, -1], expressionEngine);\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-max rule*/\nexport class MiniMaxRule extends ObjectiveRule{\n\n    static NAME = 'mini-max';\n\n    constructor(expressionEngine){\n        super(MiniMaxRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)<bestChildPayoff ? 0.0 : (1.0/bestCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.maxBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {domain as model} from 'sd-model'\nimport {ObjectiveRule} from './objective-rule'\nimport {Utils} from \"sd-utils\";\n\n/*mini-min rule*/\nexport class MiniMinRule extends ObjectiveRule{\n\n    static NAME = 'mini-min';\n\n    constructor(expressionEngine){\n        super(MiniMinRule.NAME, false, expressionEngine);\n    }\n\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount){\n        edges.forEach(e=>{\n            this.clearComputedValues(e);\n            this.cValue(e, 'probability', this.computedPayoff(e.childNode)>worstChildPayoff ? 0.0 : (1.0/worstCount));\n        });\n    }\n\n    //  payoff - parent edge payoff\n    computeOptimal(node, payoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        var optimalEdge = null;\n        if (node instanceof model.ChanceNode) {\n            optimalEdge = Utils.minBy(node.childEdges, e=>this.computedPayoff(e.childNode));\n        }\n\n        node.childEdges.forEach(e=> {\n            var isOptimal = false;\n            if (optimalEdge) {\n                isOptimal = this.computedPayoff(optimalEdge.childNode).equals(this.computedPayoff(e.childNode));\n            } else isOptimal = !!(this.subtract(this.computedPayoff(node), payoff).equals(this.computedPayoff(e.childNode)) || !(node instanceof model.DecisionNode));\n\n            if (isOptimal) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.basePayoff(e), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n\n}\n","import {domain as model} from \"sd-model\";\nimport {ObjectiveRule} from \"./objective-rule\";\nimport {Policy} from \"../../policies/policy\";\n\n\nexport class MultiCriteriaRule extends ObjectiveRule {\n\n    criterion1Weight = 1;\n    payoffCoeffs = [1, -1];\n\n    constructor(name, payoffCoeffs, expressionEngine) {\n        super(name, true, expressionEngine, true);\n        this.payoffCoeffs = payoffCoeffs;\n\n    }\n\n    setDefaultCriterion1Weight(criterion1Weight) {\n        this.criterion1Weight = criterion1Weight;\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = [0, 0], aggregatedPayoff = [0, 0]) {\n        var childrenPayoff = [0, 0];\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = [];\n                var bestChild = -Infinity;\n\n                node.childEdges.forEach((e, i)=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    var childPayoff = this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    var childCombinedPayoff = this.cValue(e.childNode, 'combinedPayoff');\n                    if (childCombinedPayoff > bestChild) {\n                        bestChild = childCombinedPayoff;\n                        selectedIndexes = [i];\n                    } else if (bestChild.equals(childCombinedPayoff)) {\n                        selectedIndexes.push(i);\n                    }\n                });\n\n                if (this.decisionPolicy) {\n                    selectedIndexes = [];\n                    var decision = Policy.getDecision(this.decisionPolicy, node);\n                    if (decision) {\n                        selectedIndexes = [decision.decisionValue];\n                    }\n\n                }\n\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n            } else {\n                node.childEdges.forEach(e=> {\n                    let basePayoffs = [this.basePayoff(e, 0), this.basePayoff(e, 1)];\n                    this.computePayoff(e.childNode, basePayoffs, [this.add(basePayoffs[0], aggregatedPayoff[0]), this.add(basePayoffs[1], aggregatedPayoff[1])]);\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff.forEach((p, i)=> {\n                        let ep = this.cValue(e.childNode, 'payoff[' + i + ']');\n                        childrenPayoff[i] = this.add(p, this.multiply(this.cValue(e, 'probability'), ep).div(sumweight))\n                    });\n                });\n            }\n\n\n        }\n        payoff.forEach((p, i)=> {\n            payoff[i] = this.add(p, childrenPayoff[i]);\n        });\n\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff', childrenPayoff);\n        }\n\n        this.cValue(node, 'combinedPayoff', this.computeCombinedPayoff(payoff));\n\n        return this.cValue(node, 'payoff', payoff);\n    }\n\n    computeCombinedPayoff(payoff){\n        // [criterion 1 coeff]*[criterion 1]*[weight]+[criterion 2 coeff]*[criterion 2]\n        if (this.criterion1Weight === Infinity) {\n            return this.multiply(this.payoffCoeffs[0], payoff[0]);\n        }\n        return this.add(this.multiply(this.payoffCoeffs[0], this.multiply(this.criterion1Weight, payoff[0])), this.multiply(this.payoffCoeffs[1], payoff[1]));\n    }\n\n    //  combinedPayoff - parent edge combinedPayoff\n    computeOptimal(node, combinedPayoff = 0, probabilityToEnter = 1) {\n        this.cValue(node, 'optimal', true);\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'probabilityToEnter', probabilityToEnter);\n        }\n\n        node.childEdges.forEach(e=> {\n            if (this.subtract(this.cValue(node, 'combinedPayoff'), combinedPayoff).equals(this.cValue(e.childNode, 'combinedPayoff')) || !(node instanceof model.DecisionNode)) {\n                this.cValue(e, 'optimal', true);\n                this.computeOptimal(e.childNode, this.computeCombinedPayoff([this.basePayoff(e, 0), this.basePayoff(e, 1)]), this.multiply(probabilityToEnter, this.cValue(e, 'probability')));\n            } else {\n                this.cValue(e, 'optimal', false);\n            }\n        })\n    }\n}\n","import {ExpressionEngine} from \"sd-expression-engine\";\nimport {domain as model} from \"sd-model\";\nimport {Policy} from \"../../policies/policy\";\n\n/*Base class for objective rules*/\nexport class ObjectiveRule {\n    name;\n    expressionEngine;\n\n    decisionPolicy;\n    maximization;\n\n    payoffIndex = 0;\n    multiCriteria = false;\n\n    constructor(name, maximization, expressionEngine, multiCriteria=false) {\n        this.name = name;\n        this.maximization = maximization;\n        this.expressionEngine = expressionEngine;\n        this.multiCriteria = multiCriteria;\n    }\n\n    setDecisionPolicy(decisionPolicy) {\n        this.decisionPolicy = decisionPolicy;\n    }\n\n    setPayoffIndex(payoffIndex) {\n        this.payoffIndex = payoffIndex;\n    }\n\n    clearDecisionPolicy() {\n        this.decisionPolicy = null;\n    }\n\n    // should return array of selected children indexes\n    makeDecision(decisionNode, childrenPayoffs) {\n        var best;\n        if (this.maximization) {\n            best = this.max(...childrenPayoffs);\n        } else {\n            best = this.min(...childrenPayoffs);\n        }\n        var selectedIndexes = [];\n        childrenPayoffs.forEach((p, i)=> {\n            if (ExpressionEngine.compare(best, p) == 0) {\n                selectedIndexes.push(i);\n            }\n        });\n        return selectedIndexes;\n    }\n\n    _makeDecision(decisionNode, childrenPayoffs) {\n        if (this.decisionPolicy) {\n            var decision = Policy.getDecision(this.decisionPolicy, decisionNode);\n            if (decision) {\n                return [decision.decisionValue];\n            }\n            return [];\n        }\n        return this.makeDecision(decisionNode, childrenPayoffs);\n    }\n\n    // extension point for changing computed probability of edges in a chance node\n    modifyChanceProbability(edges, bestChildPayoff, bestCount, worstChildPayoff, worstCount) {\n\n    }\n\n    // payoff - parent edge payoff, aggregatedPayoff - aggregated payoff along path\n    computePayoff(node, payoff = 0, aggregatedPayoff = 0) {\n        var childrenPayoff = 0;\n        if (node.childEdges.length) {\n            if (node instanceof model.DecisionNode) {\n\n                var selectedIndexes = this._makeDecision(node, node.childEdges.map(e=>this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff))));\n                node.childEdges.forEach((e, i)=> {\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', selectedIndexes.indexOf(i) < 0 ? 0.0 : 1.0);\n                });\n\n            } else {\n                var bestChild = -Infinity;\n                var bestCount = 1;\n                var worstChild = Infinity;\n                var worstCount = 1;\n\n                node.childEdges.forEach(e=> {\n                    var childPayoff = this.computePayoff(e.childNode, this.basePayoff(e), this.add(this.basePayoff(e), aggregatedPayoff));\n                    if (childPayoff < worstChild) {\n                        worstChild = childPayoff;\n                        worstCount = 1;\n                    } else if (childPayoff.equals(worstChild)) {\n                        worstCount++\n                    }\n                    if (childPayoff > bestChild) {\n                        bestChild = childPayoff;\n                        bestCount = 1;\n                    } else if (childPayoff.equals(bestChild)) {\n                        bestCount++\n                    }\n\n                    this.clearComputedValues(e);\n                    this.cValue(e, 'probability', this.baseProbability(e));\n                });\n                this.modifyChanceProbability(node.childEdges, bestChild, bestCount, worstChild, worstCount);\n            }\n\n            var sumweight = 0;\n            node.childEdges.forEach(e=> {\n                sumweight = this.add(sumweight, this.cValue(e, 'probability'));\n            });\n\n            // console.log(payoff,node.childEdges,'sumweight',sumweight);\n            if (sumweight > 0) {\n                node.childEdges.forEach(e=> {\n                    childrenPayoff = this.add(childrenPayoff, this.multiply(this.cValue(e, 'probability'), this.computedPayoff(e.childNode)).div(sumweight));\n                });\n            }\n\n\n        }\n\n        payoff = this.add(payoff, childrenPayoff);\n        this.clearComputedValues(node);\n\n        if (node instanceof model.TerminalNode) {\n            this.cValue(node, 'aggregatedPayoff'+ '[' + this.payoffIndex + ']', aggregatedPayoff);\n            this.cValue(node, 'probabilityToEnter', 0); //initial value\n        } else {\n            this.cValue(node, 'childrenPayoff' + '[' + this.payoffIndex + ']', childrenPayoff);\n        }\n\n        return this.computedPayoff(node, payoff);\n    }\n\n    // koloruje optymalne ścieżki\n    computeOptimal(node) {\n        throw 'computeOptimal function not implemented for rule: ' + this.name\n    }\n\n    /* get or set computed payoff*/\n    computedPayoff(node, value){\n        return this.cValue(node, 'payoff[' + this.payoffIndex + ']', value)\n    }\n\n    /*Get or set object's computed value for current rule*/\n    cValue(object, fieldPath, value) {\n        // if(fieldPath.trim() === 'payoff'){\n        //     fieldPath += '[' + this.payoffIndex + ']';\n        // }\n\n        return object.computedValue(this.name, fieldPath, value);\n    }\n\n    baseProbability(edge) {\n        return edge.computedBaseProbability();\n    }\n\n    basePayoff(edge, payoffIndex) {\n        return edge.computedBasePayoff(undefined, payoffIndex || this.payoffIndex);\n    }\n\n    clearComputedValues(object) {\n        object.clearComputedValues(this.name);\n    }\n\n    add(a, b) {\n        return ExpressionEngine.add(a, b)\n    }\n\n    subtract(a, b) {\n        return ExpressionEngine.subtract(a, b)\n    }\n\n    divide(a, b) {\n        return ExpressionEngine.divide(a, b)\n    }\n\n    multiply(a, b) {\n        return ExpressionEngine.multiply(a, b)\n    }\n\n    max() {\n        return ExpressionEngine.max(...arguments)\n    }\n\n    min() {\n        return ExpressionEngine.min(...arguments)\n    }\n\n}\n","import {domain as model} from 'sd-model'\nimport {ExpressionEngine} from 'sd-expression-engine'\nimport {log} from 'sd-utils'\nimport {Operation} from \"./operation\";\nimport {TreeValidator} from \"../validation/tree-validator\";\n\n/*Subtree flipping operation*/\nexport class FlipSubtree extends Operation{\n\n    static $NAME = 'flipSubtree';\n    data;\n    expressionEngine;\n\n    constructor(data, expressionEngine) {\n        super(FlipSubtree.$NAME);\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.treeValidator = new TreeValidator(expressionEngine);\n    }\n\n    isApplicable(object){\n        return object instanceof model.ChanceNode\n    }\n\n    canPerform(node) {\n        if (!this.isApplicable(node)) {\n            return false;\n        }\n\n        if (!this.treeValidator.validate(this.data.getAllNodesInSubtree(node)).isValid()) { //check if the whole subtree is proper\n            return false;\n        }\n\n        if (node.childEdges.length < 1) {\n            return false;\n        }\n\n\n        var grandchildrenNumber = null;\n        var grandchildrenEdgeLabels = [];\n        var childrenEdgeLabelsSet = new Set();\n        var grandchildrenEdgeLabelsSet;\n        if (!node.childEdges.every(e=> {\n\n                var child = e.childNode;\n                if (!(child instanceof model.ChanceNode)) {\n                    return false;\n                }\n\n                if (childrenEdgeLabelsSet.has(e.name.trim())) { // edge labels should be unique\n                    return false;\n                }\n                childrenEdgeLabelsSet.add(e.name.trim());\n\n                if (grandchildrenNumber === null) {\n                    grandchildrenNumber = child.childEdges.length;\n                    if (grandchildrenNumber < 1) {\n                        return false;\n                    }\n                    child.childEdges.forEach(ge=> {\n                        grandchildrenEdgeLabels.push(ge.name.trim());\n                    });\n\n                    grandchildrenEdgeLabelsSet = new Set(grandchildrenEdgeLabels);\n\n                    if (grandchildrenEdgeLabelsSet.size !== grandchildrenEdgeLabels.length) { //grandchildren edge labels should be unique\n                        return false;\n                    }\n\n                    return true;\n                }\n\n                if (child.childEdges.length != grandchildrenNumber) {\n                    return false;\n                }\n\n                if (!child.childEdges.every((ge, i)=>grandchildrenEdgeLabels[i] === ge.name.trim())) {\n                    return false;\n                }\n\n                return true;\n\n            })) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    perform(root) {\n\n        var rootClone = this.data.cloneSubtree(root, true);\n        var oldChildrenNumber = root.childEdges.length;\n        var oldGrandChildrenNumber = root.childEdges[0].childNode.childEdges.length;\n\n        var childrenNumber = oldGrandChildrenNumber;\n        var grandChildrenNumber = oldChildrenNumber;\n\n        var callbacksDisabled = this.data.callbacksDisabled;\n        this.data.callbacksDisabled = true;\n\n\n        var childX = root.childEdges[0].childNode.location.x;\n        var topY = root.childEdges[0].childNode.childEdges[0].childNode.location.y;\n        var bottomY = root.childEdges[oldChildrenNumber - 1].childNode.childEdges[oldGrandChildrenNumber - 1].childNode.location.y;\n\n        var extentY = bottomY - topY;\n        var stepY = extentY / (childrenNumber + 1);\n\n        root.childEdges.slice().forEach(e=> this.data.removeNode(e.childNode));\n\n\n        for (var i = 0; i < childrenNumber; i++) {\n            var child = new model.ChanceNode(new model.Point(childX, topY + (i + 1) * stepY));\n            var edge = this.data.addNode(child, root);\n            edge.name = rootClone.childEdges[0].childNode.childEdges[i].name;\n\n            edge.probability = 0;\n\n            for (var j = 0; j < grandChildrenNumber; j++) {\n                var grandChild = rootClone.childEdges[j].childNode.childEdges[i].childNode;\n\n\n                var grandChildEdge = this.data.attachSubtree(grandChild, child);\n                grandChildEdge.name = rootClone.childEdges[j].name;\n                grandChildEdge.payoff = ExpressionEngine.add(rootClone.childEdges[j].computedBasePayoff(), rootClone.childEdges[j].childNode.childEdges[i].computedBasePayoff());\n\n                grandChildEdge.probability = ExpressionEngine.multiply(rootClone.childEdges[j].computedBaseProbability(), rootClone.childEdges[j].childNode.childEdges[i].computedBaseProbability());\n                edge.probability = ExpressionEngine.add(edge.probability, grandChildEdge.probability);\n            }\n\n            var divideGrandChildEdgeProbability = p => ExpressionEngine.divide(p, edge.probability);\n            if (edge.probability.equals(0)) {\n                var prob = ExpressionEngine.divide(1, grandChildrenNumber);\n                divideGrandChildEdgeProbability = p => prob;\n            }\n\n            var probabilitySum = 0.0;\n            child.childEdges.forEach(grandChildEdge=> {\n                grandChildEdge.probability = divideGrandChildEdgeProbability(grandChildEdge.probability);\n                probabilitySum = ExpressionEngine.add(probabilitySum, grandChildEdge.probability);\n                grandChildEdge.probability = this.expressionEngine.serialize(grandChildEdge.probability)\n            });\n\n            this._normalizeProbabilitiesAfterFlip(child.childEdges, probabilitySum);\n            edge.probability = this.expressionEngine.serialize(edge.probability)\n        }\n        this._normalizeProbabilitiesAfterFlip(root.childEdges);\n\n\n        this.data.callbacksDisabled = callbacksDisabled;\n        this.data._fireNodeAddedCallback();\n    }\n\n    _normalizeProbabilitiesAfterFlip(childEdges, probabilitySum){\n        if(!probabilitySum){\n            probabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                probabilitySum = ExpressionEngine.add(probabilitySum, e.probability);\n            });\n        }\n        if (!probabilitySum.equals(1)) {\n            log.info('Sum of the probabilities in child nodes is not equal to 1 : ', probabilitySum);\n            var newProbabilitySum = 0.0;\n            var cf = 1000000000000; //10^12\n            var prec = 12;\n            childEdges.forEach(e=> {\n                e.probability = parseInt(ExpressionEngine.round(e.probability, prec) * cf);\n                newProbabilitySum = newProbabilitySum + e.probability;\n            });\n            var rest = cf - newProbabilitySum;\n            log.info('Normalizing with rounding to precision: ' + prec, rest);\n            childEdges[0].probability = ExpressionEngine.add(rest, childEdges[0].probability);\n            newProbabilitySum = 0.0;\n            childEdges.forEach(e=> {\n                e.probability = this.expressionEngine.serialize(ExpressionEngine.divide(parseInt(e.probability), cf))\n            })\n        }\n    }\n}\n","\n/*Base class for complex operations on tree structure*/\nexport class Operation{\n\n    name;\n\n    constructor(name){\n        this.name = name;\n    }\n\n    //check if operation is potentially applicable for object\n    isApplicable(){\n        throw 'isApplicable function not implemented for operation: '+this.name\n    }\n\n    //check if can perform operation for applicable object\n    canPerform(object){\n        throw 'canPerform function not implemented for operation: '+this.name\n    }\n\n    perform(object){\n        throw 'perform function not implemented for operation: '+this.name\n    }\n\n\n}\n","import {FlipSubtree} from \"./flip-subtree\";\n\n\nexport class OperationsManager {\n\n    operations = [];\n    operationByName = {};\n\n    constructor(data, expressionEngine){\n        this.data = data;\n        this.expressionEngine = expressionEngine;\n        this.registerOperation(new FlipSubtree(data, expressionEngine));\n    }\n\n    registerOperation(operation){\n        this.operations.push(operation);\n        this.operationByName[operation.name] = operation;\n    }\n\n\n    getOperationByName(name){\n        return this.operationByName[name];\n    }\n\n    operationsForObject(object){\n        return this.operations.filter(op=>op.isApplicable(object))\n    }\n\n}\n","\nexport class Decision{\n    node;\n    decisionValue; //index of  selected edge\n    children = [];\n    key;\n\n    constructor(node, decisionValue) {\n        this.node = node;\n        this.decisionValue = decisionValue;\n        this.key = Decision.generateKey(this);\n    }\n\n    static generateKey(decision, keyProperty='$id'){\n        var e = decision.node.childEdges[decision.decisionValue];\n        var key = decision.node[keyProperty]+\":\"+(e[keyProperty]? e[keyProperty] : decision.decisionValue+1);\n        return key.replace(/\\n/g, ' ');\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.children.push(decision);\n        this.key = Decision.generateKey(this);\n        return decision;\n    }\n\n    getDecision(decisionNode){\n        return Decision.getDecision(this, decisionNode)\n    }\n\n    static getDecision(decision, decisionNode){\n        if(decision.node===decisionNode || decision.node.$id === decisionNode.$id){\n            return decision;\n        }\n        for(var i=0; i<decision.children.length; i++){\n            var d = Decision.getDecision(decision.children[i], decisionNode);\n            if(d){\n                return d;\n            }\n        }\n    }\n\n    static toDecisionString(decision, extended=false, keyProperty='name', indent = ''){\n\n        var res = Decision.generateKey(decision, keyProperty);\n        var childrenRes = \"\";\n\n        decision.children.forEach(d=>{\n            if(childrenRes){\n                if(extended){\n                    childrenRes += '\\n'+indent;\n                }else{\n                    childrenRes += \", \"\n                }\n\n            }\n            childrenRes += Decision.toDecisionString(d,extended,keyProperty, indent+'\\t')\n        });\n        if(decision.children.length){\n            if(extended){\n                childrenRes =  '\\n'+indent +childrenRes;\n            }else{\n                childrenRes = \" - (\" + childrenRes + \")\";\n            }\n\n\n\n        }\n\n        return res+childrenRes;\n    }\n\n    toDecisionString(indent=false){\n        return Decision.toDecisionString(this, indent)\n    }\n}\n","import {Policy} from \"./policy\";\nimport {domain as model} from 'sd-model'\nimport {Utils} from 'sd-utils'\nimport {Decision} from \"./decision\";\n\nexport class PoliciesCollector{\n    policies = [];\n    ruleName=false;\n\n    constructor(root, optimalForRuleName){\n        this.ruleName = optimalForRuleName;\n        this.collect(root).forEach((decisions,i)=>{\n            this.policies.push(new Policy(\"#\"+(i+1), decisions));\n        });\n        if(this.policies.length===1){\n            this.policies[0].id = \"default\"\n        }\n    }\n\n    collect(root){\n        var nodeQueue = [root];\n        var node;\n        var decisionNodes = [];\n        while(nodeQueue.length){\n            node = nodeQueue.shift();\n\n            if(this.ruleName && !node.computedValue(this.ruleName, 'optimal')){\n                continue;\n            }\n\n            if(node instanceof model.DecisionNode){\n                decisionNodes.push(node);\n                continue;\n            }\n\n            node.childEdges.forEach((edge, i)=>{\n                nodeQueue.push(edge.childNode)\n            })\n        }\n\n        return Utils.cartesianProductOf(decisionNodes.map((decisionNode)=>{\n            var decisions= [];\n            decisionNode.childEdges.forEach((edge, i)=>{\n\n                if(this.ruleName && !edge.computedValue(this.ruleName, 'optimal')){\n                    return;\n                }\n\n                var childDecisions = this.collect(edge.childNode); //all possible child decisions (cartesian)\n                childDecisions.forEach(cd=>{\n                    var decision = new Decision(decisionNode, i);\n                    decisions.push(decision);\n                    decision.children = cd;\n                })\n\n            });\n            return decisions;\n        }));\n    }\n\n}\n","import {Decision} from \"./decision\";\n\nexport class Policy{\n    id;\n    decisions = [];\n\n    constructor(id, decisions){\n        this.id = id;\n        this.decisions = decisions || [];\n        this.key = Policy.generateKey(this);\n    }\n\n    addDecision(node, decisionValue){\n        var decision = new Decision(node, decisionValue);\n        this.decisions .push(decision);\n        this.key = Policy.generateKey(this);\n        return decision;\n    }\n\n    static generateKey(policy){\n        var key = \"\";\n        policy.decisions.forEach(d=>key+=(key? \"&\": \"\")+d.key);\n        return key;\n    }\n\n    equals(policy, ignoreId=true){\n        if(this.key != policy.key){\n            return false;\n        }\n\n        return ignoreId || this.id === policy.id;\n    }\n\n    getDecision(decisionNode){\n        return Policy.getDecision(this, decisionNode);\n    }\n\n    static getDecision(policy, decisionNode){\n        for(var i=0; i<policy.decisions.length; i++){\n            var decision = Decision.getDecision(policy.decisions[i], decisionNode);\n            if(decision){\n                return decision;\n            }\n        }\n        return null;\n    }\n\n    static toPolicyString(policy, extended=false, prependId=false){\n\n        var res = \"\";\n        policy.decisions.forEach(d=>{\n            if(res){\n                if(extended){\n                    res += \"\\n\"\n                }else{\n                    res += \", \"\n                }\n\n\n            }\n            res += Decision.toDecisionString(d, extended, 'name', '\\t');\n        });\n        if(prependId && policy.id!==undefined){\n            return policy.id+\" \"+res;\n        }\n        return res;\n    }\n\n\n    toPolicyString(indent=false){\n        return Policy.toPolicyString(this, indent)\n    }\n\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class PayoffValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value){\n\n\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value = ExpressionEngine.toNumber(value);\n        var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991; // Number.MAX_SAFE_INTEGER in undefined in IE\n        return ExpressionEngine.compare(value, -maxSafeInteger) >= 0 && ExpressionEngine.compare(value, maxSafeInteger) <= 0;\n    }\n\n}\n","import {ExpressionEngine} from 'sd-expression-engine'\nimport {Utils} from \"sd-utils\";\n\n/*Computed base value validator*/\nexport class ProbabilityValueValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        var value = ExpressionEngine.toNumber(value);\n        return value.compare(0) >= 0 && value.compare(1) <= 0;\n    }\n\n}\n","import {domain as model, ValidationResult} from \"sd-model\";\nimport {ExpressionEngine} from \"sd-expression-engine\";\nimport {ProbabilityValueValidator} from \"./probability-value-validator\";\nimport {PayoffValueValidator} from \"./payoff-value-validator\";\n\nexport class TreeValidator {\n\n    expressionEngine;\n\n    constructor(expressionEngine) {\n        this.expressionEngine = expressionEngine;\n        this.probabilityValueValidator = new ProbabilityValueValidator(expressionEngine);\n        this.payoffValueValidator = new PayoffValueValidator(expressionEngine);\n    }\n\n    validate(nodes) {\n\n        var validationResult = new ValidationResult();\n\n        nodes.forEach(n=> {\n            this.validateNode(n, validationResult);\n        });\n\n        return validationResult;\n    }\n\n    validateNode(node, validationResult = new ValidationResult()) {\n\n        if (node instanceof model.TerminalNode) {\n            return;\n        }\n        if (!node.childEdges.length) {\n            validationResult.addError('incompletePath', node)\n        }\n\n        var probabilitySum = ExpressionEngine.toNumber(0);\n        var withHash = false;\n        node.childEdges.forEach((e, i)=> {\n            e.setValueValidity('probability', true);\n\n            if (node instanceof model.ChanceNode) {\n                var probability = e.computedBaseProbability();\n                if (!this.probabilityValueValidator.validate(probability)) {\n                    if (!ExpressionEngine.isHash(e.probability)) {\n                        validationResult.addError({name: 'invalidProbability', data: {'number': i + 1}}, node);\n                        e.setValueValidity('probability', false);\n                    }\n\n                } else {\n                    probabilitySum = ExpressionEngine.add(probabilitySum, probability);\n                }\n            }\n\n            e.payoff.forEach((rawPayoff, payoffIndex)=> {\n                var path = 'payoff[' + payoffIndex + ']';\n                e.setValueValidity(path, true);\n                var payoff = e.computedBasePayoff(undefined, payoffIndex);\n                if (!this.payoffValueValidator.validate(payoff)) {\n                    validationResult.addError({name: 'invalidPayoff', data: {'number': i + 1}}, node);\n                    e.setValueValidity(path, false);\n                }\n            })\n\n\n        });\n        if (node instanceof model.ChanceNode) {\n            if (isNaN(probabilitySum) || !probabilitySum.equals(1)) {\n                validationResult.addError('probabilityDoNotSumUpTo1', node);\n            }\n        }\n\n\n        return validationResult;\n    }\n}\n","export * from './src/index'\n"]}